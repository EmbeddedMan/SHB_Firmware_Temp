

Microchip Technology PIC18 PRO Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jun 11 19:50:00 2019

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	_FlashSignatureWord_const,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAMh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	_BootMain_text,global,ovrld,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	pa_nodes0,global,class=CODE,delta=1
    57                           	dabs	1,0x410,4,_ep1Bi
    58                           	dabs	1,0x40C,4,_ep1Bo
    59                           	dabs	1,0x408,4,_ep0Bi
    60                           	dabs	1,0x414,8,_EP0OutEvenBuf
    61                           	dabs	1,0x404,4,_ep0BoOdd
    62                           	dabs	1,0x400,4,_ep0BoEven
    63                           	dabs	1,0x46C,64,_hid_report_in
    64                           	dabs	1,0x42C,64,_hid_report_out
    65                           	dabs	1,0x424,8,_CtrlTrfData
    66                           	dabs	1,0x41C,8,_EP0OutOddBuf
    67  0000                     
    68                           ; Version 1.45
    69                           ; Generated 16/11/2017 GMT
    70                           ; 
    71                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F46J50 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     stkptr	equ	0xFFC
   103                           tblptru	equ	0xFF8
   104                           tblptrh	equ	0xFF7
   105                           tblptrl	equ	0xFF6
   106                           tablat	equ	0xFF5
   107                           prodh	equ	0xFF4
   108                           prodl	equ	0xFF3
   109                           intcon	equ	0xFF2
   110                           wreg	equ	0xFE8
   111                           indf1	equ	0xFE7
   112                           fsr1h	equ	0xFE2
   113                           fsr1l	equ	0xFE1
   114                           indf2	equ	0xFDF
   115                           postinc2	equ	0xFDE
   116                           postdec2	equ	0xFDD
   117                           plusw2	equ	0xFDB
   118                           fsr2h	equ	0xFDA
   119                           fsr2l	equ	0xFD9
   120                           status	equ	0xFD8
   121                           
   122                           	psect	smallconst
   123  000F00                     __psmallconst:
   124                           	opt stack 0
   125  000F00  00                 	db	0
   126  000F01                     _USB_SD_Ptr:
   127                           	opt stack 0
   128  000F01  B6                 	db	low _sd000
   129  000F02  04                 	db	low _sd001
   130  000F03  61                 	db	low _sd002
   131  000F04                     __end_of_USB_SD_Ptr:
   132                           	opt stack 0
   133  0000                     _FlashSignatureWord_absconstaddr	set	4102
   134  000F04                     _sd001:
   135                           	opt stack 0
   136  000F04  34                 	db	52
   137  000F05  03                 	db	3
   138  000F06  004D               	dw	77
   139  000F08  0069               	dw	105
   140  000F0A  0063               	dw	99
   141  000F0C  0072               	dw	114
   142  000F0E  006F               	dw	111
   143  000F10  0063               	dw	99
   144  000F12  0068               	dw	104
   145  000F14  0069               	dw	105
   146  000F16  0070               	dw	112
   147  000F18  0020               	dw	32
   148  000F1A  0054               	dw	84
   149  000F1C  0065               	dw	101
   150  000F1E  0063               	dw	99
   151  000F20  0068               	dw	104
   152  000F22  006E               	dw	110
   153  000F24  006F               	dw	111
   154  000F26  006C               	dw	108
   155  000F28  006F               	dw	111
   156  000F2A  0067               	dw	103
   157  000F2C  0079               	dw	121
   158  000F2E  0020               	dw	32
   159  000F30  0049               	dw	73
   160  000F32  006E               	dw	110
   161  000F34  0063               	dw	99
   162  000F36  002E               	dw	46
   163  000F38                     __end_of_sd001:
   164                           	opt stack 0
   165  000F38                     _CFG01:
   166                           	opt stack 0
   167  000F38  09                 	db	9
   168  000F39  02                 	db	2
   169  000F3A  29                 	db	41
   170  000F3B  00                 	db	0
   171  000F3C  01                 	db	1
   172  000F3D  01                 	db	1
   173  000F3E  00                 	db	0
   174  000F3F  80                 	db	128
   175  000F40  32                 	db	50
   176  000F41  09                 	db	9
   177  000F42  04                 	db	4
   178  000F43  00                 	db	0
   179  000F44  00                 	db	0
   180  000F45  02                 	db	2
   181  000F46  03                 	db	3
   182  000F47  00                 	db	0
   183  000F48  00                 	db	0
   184  000F49  00                 	db	0
   185  000F4A  09                 	db	9
   186  000F4B  21                 	db	33
   187  000F4C  11                 	db	17
   188  000F4D  01                 	db	1
   189  000F4E  00                 	db	0
   190  000F4F  01                 	db	1
   191  000F50  22                 	db	34
   192  000F51  1D                 	db	29
   193  000F52  00                 	db	0
   194  000F53  07                 	db	7
   195  000F54  05                 	db	5
   196  000F55  81                 	db	129
   197  000F56  03                 	db	3
   198  000F57  40                 	db	64
   199  000F58  00                 	db	0
   200  000F59  01                 	db	1
   201  000F5A  07                 	db	7
   202  000F5B  05                 	db	5
   203  000F5C  01                 	db	1
   204  000F5D  03                 	db	3
   205  000F5E  40                 	db	64
   206  000F5F  00                 	db	0
   207  000F60  01                 	db	1
   208  000F61                     __end_of_CFG01:
   209                           	opt stack 0
   210  000F61                     _sd002:
   211                           	opt stack 0
   212  000F61  26                 	db	38
   213  000F62  03                 	db	3
   214  000F63  0048               	dw	72
   215  000F65  0049               	dw	73
   216  000F67  0044               	dw	68
   217  000F69  0020               	dw	32
   218  000F6B  0055               	dw	85
   219  000F6D  0053               	dw	83
   220  000F6F  0042               	dw	66
   221  000F71  0020               	dw	32
   222  000F73  0042               	dw	66
   223  000F75  006F               	dw	111
   224  000F77  006F               	dw	111
   225  000F79  0074               	dw	116
   226  000F7B  006C               	dw	108
   227  000F7D  006F               	dw	111
   228  000F7F  0061               	dw	97
   229  000F81  0064               	dw	100
   230  000F83  0065               	dw	101
   231  000F85  0072               	dw	114
   232  000F87                     __end_of_sd002:
   233                           	opt stack 0
   234  000F87                     _hid_rpt01:
   235                           	opt stack 0
   236  000F87  06                 	db	6
   237  000F88  00                 	db	0
   238  000F89  FF                 	db	255
   239  000F8A  09                 	db	9
   240  000F8B  01                 	db	1
   241  000F8C  A1                 	db	161
   242  000F8D  01                 	db	1
   243  000F8E  19                 	db	25
   244  000F8F  01                 	db	1
   245  000F90  29                 	db	41
   246  000F91  40                 	db	64
   247  000F92  15                 	db	21
   248  000F93  00                 	db	0
   249  000F94  26                 	db	38
   250  000F95  FF                 	db	255
   251  000F96  00                 	db	0
   252  000F97  75                 	db	117
   253  000F98  08                 	db	8
   254  000F99  95                 	db	149
   255  000F9A  40                 	db	64
   256  000F9B  81                 	db	129
   257  000F9C  00                 	db	0
   258  000F9D  19                 	db	25
   259  000F9E  01                 	db	1
   260  000F9F  29                 	db	41
   261  000FA0  40                 	db	64
   262  000FA1  91                 	db	145
   263  000FA2  00                 	db	0
   264  000FA3  C0                 	db	192
   265  000FA4                     __end_of_hid_rpt01:
   266                           	opt stack 0
   267  000FA4                     _device_dsc:
   268                           	opt stack 0
   269  000FA4  12                 	db	18
   270  000FA5  01                 	db	1
   271  000FA6  0200               	dw	512
   272  000FA8  00                 	db	0
   273  000FA9  00                 	db	0
   274  000FAA  00                 	db	0
   275  000FAB  08                 	db	8
   276  000FAC  04D8               	dw	1240
   277  000FAE  003C               	dw	60
   278  000FB0  0101               	dw	257
   279  000FB2  01                 	db	1
   280  000FB3  02                 	db	2
   281  000FB4  00                 	db	0
   282  000FB5  01                 	db	1
   283  000FB6                     __end_of_device_dsc:
   284                           	opt stack 0
   285  000FB6                     _sd000:
   286                           	opt stack 0
   287  000FB6  04                 	db	4
   288  000FB7  03                 	db	3
   289  000FB8  0409               	dw	1033
   290  000FBA                     __end_of_sd000:
   291                           	opt stack 0
   292  0000                     _FlashSignatureWord_absconstaddr	set	4102
   293  000FBA  00                 	db	0	; dummy byte at the end
   294  0000                     stkptr	equ	0xFFC
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           prodh	equ	0xFF4
   300                           prodl	equ	0xFF3
   301                           intcon	equ	0xFF2
   302                           wreg	equ	0xFE8
   303                           indf1	equ	0xFE7
   304                           fsr1h	equ	0xFE2
   305                           fsr1l	equ	0xFE1
   306                           indf2	equ	0xFDF
   307                           postinc2	equ	0xFDE
   308                           postdec2	equ	0xFDD
   309                           plusw2	equ	0xFDB
   310                           fsr2h	equ	0xFDA
   311                           fsr2l	equ	0xFD9
   312                           status	equ	0xFD8
   313                           
   314                           	psect	_FlashSignatureWord_const
   315  001006                     __p_FlashSignatureWord_const:
   316                           	opt stack 0
   317  001006                     _FlashSignatureWord:
   318                           	opt stack 0
   319  001006  600D               	dw	24589
   320  001008                     __end_of_FlashSignatureWord:
   321                           	opt stack 0
   322  0000                     _UEP0	set	3878
   323  0000                     _UEP7	set	3885
   324  0000                     _UEP6	set	3884
   325  0000                     _UEP5	set	3883
   326  0000                     _UEP4	set	3882
   327  0000                     _UEP3	set	3881
   328  0000                     _UEP2	set	3880
   329  0000                     _UEP1	set	3879
   330  0000                     _UADDR	set	3896
   331  0000                     _UEIE	set	3895
   332  0000                     _UIEbits	set	3894
   333  0000                     _UIE	set	3894
   334  0000                     _UCFG	set	3897
   335  0000                     _ANCON1	set	3913
   336  0000                     _ANCON0	set	3912
   337  0000                     _ANCON1bits	set	3913
   338  0000                     _EECON1bits	set	4006
   339  0000                     _EECON2	set	4007
   340  0000                     _INTCONbits	set	4082
   341  0000                     _EECON1	set	4006
   342  0000                     _TABLAT	set	4085
   343  0000                     _TBLPTRL	set	4086
   344  0000                     _TBLPTRH	set	4087
   345  0000                     _TBLPTRU	set	4088
   346  0000                     _UIR	set	3938
   347  0000                     _PIE2bits	set	4000
   348  0000                     _USTATbits	set	3940
   349  0000                     _USTAT	set	3940
   350  0000                     _UIRbits	set	3938
   351  0000                     _UCON	set	3941
   352  0000                     _RCONbits	set	4048
   353  0000                     _PIR2bits	set	4001
   354  0000                     _UCONbits	set	3941
   355  0000                     _WDTCONbits	set	4032
   356  0000                     _TRISEbits	set	3990
   357  0000                     _LATEbits	set	3981
   358  0000                     _OSCTUNEbits	set	3995
   359  0000                     _OSCCON	set	4051
   360  0000                     _STKPTR	set	4092
   361  0000                     _INTCON	set	4082
   362  0000                     _PORTBbits	set	3969
   363                           
   364                           ; #config settings
   365  0000                     stkptr	equ	0xFFC
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           prodh	equ	0xFF4
   371                           prodl	equ	0xFF3
   372                           intcon	equ	0xFF2
   373                           wreg	equ	0xFE8
   374                           indf1	equ	0xFE7
   375                           fsr1h	equ	0xFE2
   376                           fsr1l	equ	0xFE1
   377                           indf2	equ	0xFDF
   378                           postinc2	equ	0xFDE
   379                           postdec2	equ	0xFDD
   380                           plusw2	equ	0xFDB
   381                           fsr2h	equ	0xFDA
   382                           fsr2l	equ	0xFD9
   383                           status	equ	0xFD8
   384                           
   385                           	psect	cinit
   386  000CB0                     __pcinit:
   387                           	opt stack 0
   388  000CB0                     start_initialization:
   389                           	opt stack 0
   390  000CB0                     __initialization:
   391                           	opt stack 0
   392  000CB0                     end_of_initialization:
   393                           	opt stack 0
   394  000CB0                     __end_of__initialization:
   395                           	opt stack 0
   396  000CB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   397  000CB2  6EF8               	movwf	tblptru,c
   398  000CB4  0100               	movlb	0
   399  000CB6  EFD2  F004         	goto	_main	;jump to C main() function
   400                           stkptr	equ	0xFFC
   401                           tblptru	equ	0xFF8
   402                           tblptrh	equ	0xFF7
   403                           tblptrl	equ	0xFF6
   404                           tablat	equ	0xFF5
   405                           prodh	equ	0xFF4
   406                           prodl	equ	0xFF3
   407                           intcon	equ	0xFF2
   408                           wreg	equ	0xFE8
   409                           indf1	equ	0xFE7
   410                           fsr1h	equ	0xFE2
   411                           fsr1l	equ	0xFE1
   412                           indf2	equ	0xFDF
   413                           postinc2	equ	0xFDE
   414                           postdec2	equ	0xFDD
   415                           plusw2	equ	0xFDB
   416                           fsr2h	equ	0xFDA
   417                           fsr2l	equ	0xFD9
   418                           status	equ	0xFD8
   419                           
   420                           	psect	bssCOMRAM
   421  000001                     __pbssCOMRAM:
   422                           	opt stack 0
   423  000001                     _SetupPkt:
   424                           	opt stack 0
   425  000001                     	ds	8
   426  000009                     EraseFlashPage@TablePointerValue:
   427                           	opt stack 0
   428  000009                     	ds	4
   429  00000D                     WriteFlashSubBlock@Address:
   430                           	opt stack 0
   431  00000D                     	ds	4
   432  000011                     _ProgrammedPointer:
   433                           	opt stack 0
   434  000011                     	ds	4
   435  000015                     _ProgramMemStopAddress:
   436                           	opt stack 0
   437  000015                     	ds	4
   438  000019                     _TempBDT:
   439                           	opt stack 0
   440  000019                     	ds	4
   441  00001D                     _pDst:
   442                           	opt stack 0
   443  00001D                     	ds	3
   444  000020                     _pSrc:
   445                           	opt stack 0
   446  000020                     	ds	3
   447  000023                     SignFlash@i:
   448                           	opt stack 0
   449  000023                     	ds	2
   450  000025                     ProcessIO@i:
   451                           	opt stack 0
   452  000025                     	ds	2
   453  000027                     LoadBDTandSetUOWN@pBDTEntry:
   454                           	opt stack 0
   455  000027                     	ds	2
   456  000029                     USBDeviceTasks@pBDTEntry:
   457                           	opt stack 0
   458  000029                     	ds	2
   459  00002B                     _wCount:
   460                           	opt stack 0
   461  00002B                     	ds	2
   462  00002D                     BlinkUSBStatus@led_count:
   463                           	opt stack 0
   464  00002D                     	ds	2
   465  00002F                     _uint_delay_counter:
   466                           	opt stack 0
   467  00002F                     	ds	2
   468  000031                     WriteFlashSubBlock@i:
   469                           	opt stack 0
   470  000031                     	ds	1
   471  000032                     _BufferedDataIndex:
   472                           	opt stack 0
   473  000032                     	ds	1
   474  000033                     _BootState:
   475                           	opt stack 0
   476  000033                     	ds	1
   477  000034                     _MaxPageToErase:
   478                           	opt stack 0
   479  000034                     	ds	1
   480  000035                     _hid_rpt_rx_len:
   481                           	opt stack 0
   482  000035                     	ds	1
   483  000036                     USBStdSetCfgHandler@i:
   484                           	opt stack 0
   485  000036                     	ds	1
   486  000037                     USBCtrlTrfTxService@bytes_to_send:
   487                           	opt stack 0
   488  000037                     	ds	1
   489  000038                     USBSuspend@UIESave:
   490                           	opt stack 0
   491  000038                     	ds	1
   492  000039                     USBDeviceTasks@i:
   493                           	opt stack 0
   494  000039                     	ds	1
   495  00003A                     _DeviceIsSoftDetached:
   496                           	opt stack 0
   497  00003A                     	ds	1
   498  00003B                     _usb_stat:
   499                           	opt stack 0
   500  00003B                     	ds	1
   501  00003C                     _EP0OutOddNeedsArmingNext:
   502                           	opt stack 0
   503  00003C                     	ds	1
   504  00003D                     _short_pkt_status:
   505                           	opt stack 0
   506  00003D                     	ds	1
   507  00003E                     _ctrl_trf_session_owner:
   508                           	opt stack 0
   509  00003E                     	ds	1
   510  00003F                     _ctrl_trf_state:
   511                           	opt stack 0
   512  00003F                     	ds	1
   513  000040                     _bTRNIFCount:
   514                           	opt stack 0
   515  000040                     	ds	1
   516  000041                     USBCBSuspend@OSCCONSave:
   517                           	opt stack 0
   518  000041                     	ds	1
   519  000042                     _usb_device_state:
   520                           	opt stack 0
   521  000042                     	ds	1
   522  000043                     _active_protocol:
   523                           	opt stack 0
   524  000043                     	ds	1
   525  000044                     _idle_rate:
   526                           	opt stack 0
   527  000044                     	ds	1
   528  000045                     _usb_alt_intf:
   529                           	opt stack 0
   530  000045                     	ds	1
   531  000046                     _usb_active_cfg:
   532                           	opt stack 0
   533  000046                     	ds	1
   534                           stkptr	equ	0xFFC
   535                           tblptru	equ	0xFF8
   536                           tblptrh	equ	0xFF7
   537                           tblptrl	equ	0xFF6
   538                           tablat	equ	0xFF5
   539                           prodh	equ	0xFF4
   540                           prodl	equ	0xFF3
   541                           intcon	equ	0xFF2
   542                           wreg	equ	0xFE8
   543                           indf1	equ	0xFE7
   544                           fsr1h	equ	0xFE2
   545                           fsr1l	equ	0xFE1
   546                           indf2	equ	0xFDF
   547                           postinc2	equ	0xFDE
   548                           postdec2	equ	0xFDD
   549                           plusw2	equ	0xFDB
   550                           fsr2h	equ	0xFDA
   551                           fsr2l	equ	0xFD9
   552                           status	equ	0xFD8
   553                           
   554                           	psect	bssBANK0
   555  000060                     __pbssBANK0:
   556                           	opt stack 0
   557  000060                     _PacketToPC:
   558                           	opt stack 0
   559  000060                     	ds	65
   560  0000A1                     _PacketFromPC:
   561                           	opt stack 0
   562  0000A1                     	ds	65
   563                           stkptr	equ	0xFFC
   564                           tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           prodh	equ	0xFF4
   569                           prodl	equ	0xFF3
   570                           intcon	equ	0xFF2
   571                           wreg	equ	0xFE8
   572                           indf1	equ	0xFE7
   573                           fsr1h	equ	0xFE2
   574                           fsr1l	equ	0xFE1
   575                           indf2	equ	0xFDF
   576                           postinc2	equ	0xFDE
   577                           postdec2	equ	0xFDD
   578                           plusw2	equ	0xFDB
   579                           fsr2h	equ	0xFDA
   580                           fsr2l	equ	0xFD9
   581                           status	equ	0xFD8
   582                           
   583                           	psect	bssBIGRAMh
   584  0004AC                     __pbssBIGRAMh:
   585                           	opt stack 0
   586  0004AC                     _ProgrammingBuffer:
   587                           	opt stack 0
   588  0004AC                     	ds	1024
   589                           stkptr	equ	0xFFC
   590                           tblptru	equ	0xFF8
   591                           tblptrh	equ	0xFF7
   592                           tblptrl	equ	0xFF6
   593                           tablat	equ	0xFF5
   594                           prodh	equ	0xFF4
   595                           prodl	equ	0xFF3
   596                           intcon	equ	0xFF2
   597                           wreg	equ	0xFE8
   598                           indf1	equ	0xFE7
   599                           fsr1h	equ	0xFE2
   600                           fsr1l	equ	0xFE1
   601                           indf2	equ	0xFDF
   602                           postinc2	equ	0xFDE
   603                           postdec2	equ	0xFDD
   604                           plusw2	equ	0xFDB
   605                           fsr2h	equ	0xFDA
   606                           fsr2l	equ	0xFD9
   607                           status	equ	0xFD8
   608                           
   609                           	psect	cstackCOMRAM
   610  000047                     __pcstackCOMRAM:
   611                           	opt stack 0
   612  000047                     ??_BlinkUSBStatus:
   613  000047                     ??_USBStdGetDscHandler:
   614  000047                     ??_USBStdGetStatusHandler:
   615  000047                     ??_USBStdFeatureReqHandler:
   616  000047                     USBCBInitEP@ConfigurationIndex:
   617                           	opt stack 0
   618  000047                     LoadBDTandSetUOWN@BDTIndexToLoad:
   619                           	opt stack 0
   620  000047                     HIDTxReport@buffer:
   621                           	opt stack 0
   622  000047                     HIDRxReport@buffer:
   623                           	opt stack 0
   624  000047                     UnlockAndActivate@UnlockKey:
   625                           	opt stack 0
   626  000047                     DelayRoutine@DelayAmount:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x0
   630  000047                     	ds	1
   631  000048                     ??_WriteFlashSubBlock:
   632  000048                     HIDTxReport@len:
   633                           	opt stack 0
   634  000048                     HIDRxReport@len:
   635                           	opt stack 0
   636  000048                     EraseFlashPage@PageNumToErase:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0x1
   640  000048                     	ds	1
   641  000049                     ??_USBCheckStdRequest:
   642  000049                     ??_HIDTxReport:
   643  000049                     ??_HIDRxReport:
   644                           
   645                           ; 1 bytes @ 0x2
   646  000049                     	ds	1
   647  00004A                     ??_USBDeviceTasks:
   648  00004A                     ??_EraseFlashPage:
   649  00004A                     HIDTxReport@i:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x3
   653  00004A                     	ds	4
   654  00004E                     ??_SignFlash:
   655                           
   656                           ; 1 bytes @ 0x7
   657  00004E                     	ds	1
   658  00004F                     SignFlash@pROM:
   659                           	opt stack 0
   660                           
   661                           ; 3 bytes @ 0x8
   662  00004F                     	ds	3
   663  000052                     ??_ProcessIO:
   664                           
   665                           ; 1 bytes @ 0xB
   666  000052                     	ds	2
   667  000054                     stkptr	equ	0xFFC
   668                           tblptru	equ	0xFF8
   669                           tblptrh	equ	0xFF7
   670                           tblptrl	equ	0xFF6
   671                           tablat	equ	0xFF5
   672                           prodh	equ	0xFF4
   673                           prodl	equ	0xFF3
   674                           intcon	equ	0xFF2
   675                           wreg	equ	0xFE8
   676                           indf1	equ	0xFE7
   677                           fsr1h	equ	0xFE2
   678                           fsr1l	equ	0xFE1
   679                           indf2	equ	0xFDF
   680                           postinc2	equ	0xFDE
   681                           postdec2	equ	0xFDD
   682                           plusw2	equ	0xFDB
   683                           fsr2h	equ	0xFDA
   684                           fsr2l	equ	0xFD9
   685                           status	equ	0xFD8
   686                           
   687                           ; 1 bytes @ 0xD
   688 ;;
   689 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   690 ;;
   691 ;; *************** function _main *****************
   692 ;; Defined at:
   693 ;;		line 411 in file "../demo_src/main.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   711 ;;Total ram usage:        0 bytes
   712 ;; Hardware stack levels required when called:    8
   713 ;; This function calls:
   714 ;;		_BootMain
   715 ;; This function is called by:
   716 ;;		Startup code after reset
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text0
   721  0009A4                     __ptext0:
   722                           	opt stack 0
   723  0009A4                     _main:
   724                           	opt stack 23
   725                           
   726                           ;main.c: 419: {ANCON1bits.PCFG8 = 1;};
   727                           
   728                           ;incstack = 0
   729  0009A4  010F               	movlb	15	; () banked
   730  0009A6  8149               	bsf	73,0,b	;volatile
   731                           
   732                           ;main.c: 423: if(PORTBbits.RB2 == 1)
   733  0009A8  A481               	btfss	3969,2,c	;volatile
   734  0009AA  D002               	goto	l3315
   735                           
   736                           ; BSR set to: 15
   737                           ;main.c: 424: {
   738                           ;main.c: 428: {ANCON1bits.PCFG8 = 0;};
   739  0009AC  9149               	bcf	73,0,b	;volatile
   740                           
   741                           ;main.c: 432: goto DoFlashSignatureCheck;
   742  0009AE  D002               	goto	l3317
   743  0009B0                     l3315:
   744                           
   745                           ; BSR set to: 15
   746                           ;main.c: 434: else
   747                           ;main.c: 435: {
   748                           ;main.c: 437: BootMain();
   749  0009B0  EC18  F000         	call	_BootMain	;wreg free
   750  0009B4                     l3317:
   751                           
   752                           ;main.c: 443: if(*(const unsigned int*)0x1006 == 0x600D)
   753  0009B4  0E06               	movlw	6
   754  0009B6  D816               	call	PL36	;call to abstracted procedure
   755  0009B8  0E0D               	movlw	13
   756  0009BA  18F5               	xorwf	tablat,w,c
   757  0009BC  E10F               	bnz	l3323
   758  0009BE  0009               	tblrd		*+
   759  0009C0  0E60               	movlw	96
   760  0009C2  18F5               	xorwf	tablat,w,c
   761  0009C4  E10B               	bnz	l3323
   762                           
   763                           ;main.c: 444: {
   764                           ;main.c: 450: if(*(const unsigned int*)0x1000 != 0xFFFF)
   765  0009C6  6AF6               	clrf	tblptrl,c
   766  0009C8                     	if	1	;There is more than 1 active tblptr byte
   767  0009C8  0E10               	movlw	16
   768  0009CA  6EF7               	movwf	tblptrh,c
   769  0009CC                     	endif
   770  0009CC                     	if	0	;There are less than 3 active tblptr bytes
   771  0009CC                     	endif
   772  0009CC  0009               	tblrd		*+
   773  0009CE  28F5               	incf	tablat,w,c
   774  0009D0  E103               	bnz	u2260
   775  0009D2  0009               	tblrd		*+
   776  0009D4  28F5               	incf	tablat,w,c
   777  0009D6  E002               	bz	l3323
   778  0009D8                     u2260:
   779  0009D8  EF00 F008          	goto	4096	;# 
   780  0009DC                     l3323:
   781                           
   782                           ;main.c: 460: }
   783                           ;main.c: 461: }
   784                           ;main.c: 467: BootMain();
   785  0009DC  EC18  F000         	call	_BootMain	;wreg free
   786  0009E0  EF00  F000         	goto	start
   787  0009E4                     __end_of_main:
   788                           	opt stack 0
   789  0009E4                     PL36:
   790                           	opt stack 23
   791  0009E4  6EF6               	movwf	tblptrl,c
   792  0009E6                     	if	1	;There is more than 1 active tblptr byte
   793  0009E6  0E10               	movlw	16
   794  0009E8  6EF7               	movwf	tblptrh,c
   795  0009EA                     	endif
   796  0009EA                     	if	0	;There are less than 3 active tblptr bytes
   797  0009EA                     	endif
   798  0009EA  0009               	tblrd		*+
   799  0009EC  0C10               	retlw	16
   800  0009EE                     __end_ofPL36:
   801                           	opt stack 0
   802                           stkptr	equ	0xFFC
   803                           tblptru	equ	0xFF8
   804                           tblptrh	equ	0xFF7
   805                           tblptrl	equ	0xFF6
   806                           tablat	equ	0xFF5
   807                           prodh	equ	0xFF4
   808                           prodl	equ	0xFF3
   809                           intcon	equ	0xFF2
   810                           wreg	equ	0xFE8
   811                           indf1	equ	0xFE7
   812                           fsr1h	equ	0xFE2
   813                           fsr1l	equ	0xFE1
   814                           indf2	equ	0xFDF
   815                           postinc2	equ	0xFDE
   816                           postdec2	equ	0xFDD
   817                           plusw2	equ	0xFDB
   818                           fsr2h	equ	0xFDA
   819                           fsr2l	equ	0xFD9
   820                           status	equ	0xFD8
   821                           
   822 ;; *************** function _BootMain *****************
   823 ;; Defined at:
   824 ;;		line 496 in file "../demo_src/main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/F
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   842 ;;Total ram usage:        0 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    7
   845 ;; This function calls:
   846 ;;		_BlinkUSBStatus
   847 ;;		_InitializeSystem
   848 ;;		_LowVoltageCheck
   849 ;;		_ProcessIO
   850 ;;		_USBDeviceTasks
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	_BootMain_text
   857  000030                     __p_BootMain_text:
   858                           	opt stack 0
   859  000030                     _BootMain:
   860                           	opt stack 23
   861                           
   862                           ;incstack = 0
   863  0000                     
   864                           ;main.c: 513: INTCON = 0x00;
   865  000030  6AF2               	clrf	intcon,c	;volatile
   866                           
   867                           ;main.c: 527: STKPTR = 0x00;
   868  000032  6AFC               	clrf	stkptr,c	;volatile
   869                           
   870                           ;main.c: 536: InitializeSystem();
   871  000034  ECF5  F005         	call	_InitializeSystem	;wreg free
   872  000038                     l69:
   873  000038  0004               	clrwdt		;# 
   874                           
   875                           ;main.c: 546: USBDeviceTasks();
   876  00003A  EC65  F001         	call	_USBDeviceTasks	;wreg free
   877                           
   878                           ;main.c: 548: BlinkUSBStatus();
   879  00003E  EC5C  F005         	call	_BlinkUSBStatus	;wreg free
   880                           
   881                           ;main.c: 550: LowVoltageCheck();
   882  000042  EC78  F005         	call	_LowVoltageCheck	;wreg free
   883                           
   884                           ;main.c: 554: ProcessIO();
   885  000046  EC26  F000         	call	_ProcessIO	;wreg free
   886  00004A  D7F6               	goto	l69
   887  00004C                     __end_of_BootMain:
   888                           	opt stack 0
   889                           stkptr	equ	0xFFC
   890                           tblptru	equ	0xFF8
   891                           tblptrh	equ	0xFF7
   892                           tblptrl	equ	0xFF6
   893                           tablat	equ	0xFF5
   894                           prodh	equ	0xFF4
   895                           prodl	equ	0xFF3
   896                           intcon	equ	0xFF2
   897                           wreg	equ	0xFE8
   898                           indf1	equ	0xFE7
   899                           fsr1h	equ	0xFE2
   900                           fsr1l	equ	0xFE1
   901                           indf2	equ	0xFDF
   902                           postinc2	equ	0xFDE
   903                           postdec2	equ	0xFDD
   904                           plusw2	equ	0xFDB
   905                           fsr2h	equ	0xFDA
   906                           fsr2l	equ	0xFD9
   907                           status	equ	0xFD8
   908                           
   909 ;; *************** function _ProcessIO *****************
   910 ;; Defined at:
   911 ;;		line 276 in file "../demo_src/boot_18fxxjxx.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;		None
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : 0/F
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   927 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   929 ;;Total ram usage:        2 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; Hardware stack levels required when called:    6
   932 ;; This function calls:
   933 ;;		_ClearWatchdog
   934 ;;		_EraseFlashPage
   935 ;;		_HIDRxReport
   936 ;;		_HIDTxReport
   937 ;;		_ResetDeviceCleanly
   938 ;;		_SignFlash
   939 ;;		_USBDeviceTasks
   940 ;;		_WriteFlashSubBlock
   941 ;; This function is called by:
   942 ;;		_BootMain
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text2
   947  00004C                     __ptext2:
   948                           	opt stack 0
   949  00004C                     _ProcessIO:
   950                           	opt stack 23
   951                           
   952                           ;boot_18fxxjxx.c: 278: static unsigned int i;
   953                           ;boot_18fxxjxx.c: 286: if((usb_device_state != 6) || (UCONbits.SUSPND == 1))
   954                           
   955                           ;incstack = 0
   956  00004C  0E06               	movlw	6
   957  00004E  1842               	xorwf	_usb_device_state,w,c
   958  000050  B4D8               	btfsc	status,2,c
   959  000052  B265               	btfsc	3941,1,c	;volatile
   960  000054  0012               	return	
   961                           
   962                           ;boot_18fxxjxx.c: 291: }
   963                           ;boot_18fxxjxx.c: 296: if(BootState == 0x00)
   964  000056  5033               	movf	_BootState,w,c
   965  000058  E001 D116          	bnz	l3295
   966                           
   967                           ;boot_18fxxjxx.c: 297: {
   968                           ;boot_18fxxjxx.c: 300: if(!ep1Bo.Stat.UOWN)
   969  00005C  0104               	movlb	4	; () banked
   970  00005E  BF0C               	btfsc	12,7,b	;volatile
   971  000060  0012               	return	
   972                           
   973                           ; BSR set to: 4
   974                           ;boot_18fxxjxx.c: 301: {
   975                           ;boot_18fxxjxx.c: 304: HIDRxReport((char *)&PacketFromPC, 0x40);
   976  000062  0EA1               	movlw	low _PacketFromPC
   977  000064  6E47               	movwf	HIDRxReport@buffer,c
   978  000066  0E40               	movlw	64
   979  000068  6E48               	movwf	HIDRxReport@len,c
   980  00006A  EC7D  F004         	call	_HIDRxReport	;wreg free
   981                           
   982                           ; BSR set to: 4
   983                           ;boot_18fxxjxx.c: 305: BootState = 0x01;
   984  00006E  0E01               	movlw	1
   985  000070  6E33               	movwf	_BootState,c
   986                           
   987                           ; BSR set to: 4
   988                           ;boot_18fxxjxx.c: 308: for(i = 0; i < 0x40; i++)
   989  000072  6A25               	clrf	ProcessIO@i,c
   990  000074  6A26               	clrf	ProcessIO@i+1,c
   991  000076                     l3141:
   992                           
   993                           ;boot_18fxxjxx.c: 309: PacketToPC.Contents[i] = 0;
   994  000076  5025               	movf	ProcessIO@i,w,c
   995  000078  0F60               	addlw	low _PacketToPC
   996  00007A  6ED9               	movwf	fsr2l,c
   997  00007C  6ADA               	clrf	fsr2h,c
   998  00007E  0E00               	movlw	0
   999  000080  6EDF               	movwf	indf2,c
  1000  000082  4A25               	infsnz	ProcessIO@i,f,c
  1001  000084  2A26               	incf	ProcessIO@i+1,f,c
  1002  000086  5026               	movf	ProcessIO@i+1,w,c
  1003  000088  E105               	bnz	u2130
  1004  00008A  0E40               	movlw	64
  1005  00008C  5C25               	subwf	ProcessIO@i,w,c
  1006  00008E  B0D8               	btfsc	status,0,c
  1007  000090  0012               	return	
  1008  000092  D7F1               	goto	l3141
  1009  000094                     u2130:
  1010  000094  0012               	return	
  1011  000096                     l3147:
  1012                           
  1013                           ; BSR set to: 0
  1014                           ;boot_18fxxjxx.c: 320: PacketToPC.Command = 0x02;
  1015  000096  0E02               	movlw	2
  1016  000098  6F60               	movwf	_PacketToPC& (0+255),b
  1017                           
  1018                           ;boot_18fxxjxx.c: 321: PacketToPC.PacketDataFieldSize = 0x3A;
  1019  00009A  0E3A               	movlw	58
  1020  00009C  6F61               	movwf	(_PacketToPC+1)& (0+255),b
  1021                           
  1022                           ;boot_18fxxjxx.c: 322: PacketToPC.BytesPerAddress = 0x01;
  1023  00009E  0E01               	movlw	1
  1024  0000A0  6F62               	movwf	(_PacketToPC+2)& (0+255),b
  1025                           
  1026                           ;boot_18fxxjxx.c: 323: PacketToPC.Type1 = 0x01;
  1027  0000A2  6F63               	movwf	(_PacketToPC+3)& (0+255),b
  1028                           
  1029                           ;boot_18fxxjxx.c: 324: PacketToPC.Address1 = (unsigned long)(uint32_t)0x1000;
  1030  0000A4  6B64               	clrf	(_PacketToPC+4)& (0+255),b
  1031  0000A6  0E10               	movlw	16
  1032  0000A8  6F65               	movwf	(_PacketToPC+5)& (0+255),b
  1033  0000AA  6B66               	clrf	(_PacketToPC+6)& (0+255),b
  1034  0000AC  6B67               	clrf	(_PacketToPC+7)& (0+255),b
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;boot_18fxxjxx.c: 325: PacketToPC.Length1 = (unsigned long)(ProgramMemStopAddress - (uin
      +                          t32_t)0x1000);
  1038  0000AE  0E00               	movlw	0
  1039  0000B0  2415               	addwf	_ProgramMemStopAddress,w,c
  1040  0000B2  6F68               	movwf	(_PacketToPC+8)& (0+255),b
  1041  0000B4  0EF0               	movlw	240
  1042  0000B6  2016               	addwfc	_ProgramMemStopAddress+1,w,c
  1043  0000B8  6F69               	movwf	(_PacketToPC+9)& (0+255),b
  1044  0000BA  0EFF               	movlw	255
  1045  0000BC  2017               	addwfc	_ProgramMemStopAddress+2,w,c
  1046  0000BE  6F6A               	movwf	(_PacketToPC+10)& (0+255),b
  1047  0000C0  0EFF               	movlw	255
  1048  0000C2  2018               	addwfc	_ProgramMemStopAddress+3,w,c
  1049  0000C4  6F6B               	movwf	(_PacketToPC+11)& (0+255),b
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;boot_18fxxjxx.c: 326: PacketToPC.Type2 = 0x03;
  1053  0000C6  0E03               	movlw	3
  1054  0000C8  6F6C               	movwf	(_PacketToPC+12)& (0+255),b
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;boot_18fxxjxx.c: 327: PacketToPC.Address2 = (unsigned long)(uint32_t)0x00FFF8;
  1058  0000CA  0EF8               	movlw	248
  1059  0000CC  6F6D               	movwf	(_PacketToPC+13)& (0+255),b
  1060  0000CE  696E               	setf	(_PacketToPC+14)& (0+255),b
  1061  0000D0  6B6F               	clrf	(_PacketToPC+15)& (0+255),b
  1062  0000D2  6B70               	clrf	(_PacketToPC+16)& (0+255),b
  1063                           
  1064                           ; BSR set to: 0
  1065                           ;boot_18fxxjxx.c: 328: PacketToPC.Length2 = (unsigned long)8;
  1066  0000D4  0E08               	movlw	8
  1067  0000D6  6F71               	movwf	(_PacketToPC+17)& (0+255),b
  1068  0000D8  6B72               	clrf	(_PacketToPC+18)& (0+255),b
  1069  0000DA  6B73               	clrf	(_PacketToPC+19)& (0+255),b
  1070  0000DC  6B74               	clrf	(_PacketToPC+20)& (0+255),b
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;boot_18fxxjxx.c: 329: PacketToPC.Type3 = 0xFF;
  1074  0000DE  6975               	setf	(_PacketToPC+21)& (0+255),b
  1075                           
  1076                           ; BSR set to: 0
  1077                           ;boot_18fxxjxx.c: 330: PacketToPC.VersionFlag = 0xA5;
  1078  0000E0  0EA5               	movlw	165
  1079  0000E2  6F99               	movwf	(_PacketToPC+57)& (0+255),b
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;boot_18fxxjxx.c: 334: if(!ep1Bi.Stat.UOWN)
  1083  0000E4  0104               	movlb	4	; () banked
  1084  0000E6  BF10               	btfsc	16,7,b	;volatile
  1085  0000E8  0CA5               	retlw	165
  1086  0000EA                     u2140:
  1087                           
  1088                           ; BSR set to: 4
  1089                           ;boot_18fxxjxx.c: 335: {
  1090                           ;boot_18fxxjxx.c: 336: HIDTxReport((char *)&PacketToPC, 0x40);
  1091  0000EA  0E60               	movlw	low _PacketToPC
  1092  0000EC  6E47               	movwf	HIDTxReport@buffer,c
  1093  0000EE  0E40               	movlw	64
  1094  0000F0  6E48               	movwf	HIDTxReport@len,c
  1095  0000F2  EC50  F004         	call	_HIDTxReport	;wreg free
  1096  0000F6                     l3165:
  1097                           
  1098                           ;boot_18fxxjxx.c: 337: BootState = 0x00;
  1099  0000F6  6A33               	clrf	_BootState,c
  1100  0000F8  0012               	return	
  1101  0000FA                     l3167:
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;boot_18fxxjxx.c: 341: if(PacketFromPC.LockValue == 0x00)
  1105  0000FA  51A2               	movf	(_PacketFromPC+1)& (0+255),w,b
  1106  0000FC  E106               	bnz	l3171
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;boot_18fxxjxx.c: 342: {
  1110                           ;boot_18fxxjxx.c: 343: MaxPageToErase = (((uint32_t)0x00FFF8)/1024);
  1111  0000FE  0E3F               	movlw	63
  1112  000100  6E34               	movwf	_MaxPageToErase,c
  1113                           
  1114                           ;boot_18fxxjxx.c: 344: ProgramMemStopAddress = ((uint32_t)0x00FFF8);
  1115  000102  0EF8               	movlw	248
  1116  000104  6E15               	movwf	_ProgramMemStopAddress,c
  1117  000106  6816               	setf	_ProgramMemStopAddress+1,c
  1118  000108  D002               	goto	L1
  1119  00010A                     l3171:
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;boot_18fxxjxx.c: 346: else
  1123                           ;boot_18fxxjxx.c: 347: {
  1124                           ;boot_18fxxjxx.c: 348: MaxPageToErase = ((((uint32_t)0x00FFF8)/1024) - 1);
  1125                           
  1126                           ;boot_18fxxjxx.c: 349: ProgramMemStopAddress = ((((((uint32_t)0x00FFF8)/1024) - 1) + 1) 
      +                          * 1024);
  1127  00010A  ECDA  F005         	call	PL26	;call to abstracted procedure
  1128  00010E                     L1:
  1129  00010E  0E00               	movlw	0
  1130  000110  6A17               	clrf	_ProgramMemStopAddress+2,c
  1131  000112  6A18               	clrf	_ProgramMemStopAddress+3,c
  1132  000114  D7F0               	goto	l3165
  1133  000116                     l3175:
  1134                           
  1135                           ; BSR set to: 0
  1136                           ;boot_18fxxjxx.c: 358: for(i = ((uint32_t)0x1000/1024); i < (MaxPageToErase + 1); i++)
  1137  000116  6A26               	clrf	ProcessIO@i+1,c
  1138  000118  0E04               	movlw	4
  1139  00011A  6E25               	movwf	ProcessIO@i,c
  1140  00011C  D00C               	goto	l3185
  1141  00011E                     l3177:
  1142                           
  1143                           ;boot_18fxxjxx.c: 359: {
  1144                           ;boot_18fxxjxx.c: 360: ClearWatchdog();
  1145  00011E  EC5D  F006         	call	_ClearWatchdog	;wreg free
  1146                           
  1147                           ;boot_18fxxjxx.c: 361: EraseFlashPage(i);
  1148  000122  C025  F048         	movff	ProcessIO@i,EraseFlashPage@PageNumToErase
  1149  000126  C026  F049         	movff	ProcessIO@i+1,EraseFlashPage@PageNumToErase+1
  1150  00012A  ECAA  F004         	call	_EraseFlashPage	;wreg free
  1151                           
  1152                           ;boot_18fxxjxx.c: 362: USBDeviceTasks();
  1153  00012E  EC65  F001         	call	_USBDeviceTasks	;wreg free
  1154  000132  4A25               	infsnz	ProcessIO@i,f,c
  1155  000134  2A26               	incf	ProcessIO@i+1,f,c
  1156  000136                     l3185:
  1157  000136  5034               	movf	_MaxPageToErase,w,c
  1158  000138  6E52               	movwf	??_ProcessIO& (0+255),c
  1159  00013A  6A53               	clrf	(??_ProcessIO+1)& (0+255),c
  1160  00013C  2A52               	incf	??_ProcessIO,f,c
  1161  00013E  0E00               	movlw	0
  1162  000140  2253               	addwfc	??_ProcessIO+1,f,c
  1163  000142  5052               	movf	??_ProcessIO,w,c
  1164  000144  5C25               	subwf	ProcessIO@i,w,c
  1165  000146  5053               	movf	??_ProcessIO+1,w,c
  1166  000148  5826               	subwfb	ProcessIO@i+1,w,c
  1167  00014A  E2D5               	bc	l3165
  1168  00014C  D7E8               	goto	l3177
  1169  00014E                     l3187:
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;boot_18fxxjxx.c: 367: if(ProgrammedPointer == (uint32_t)0xFFFFFFFF)
  1173  00014E  2811               	incf	_ProgrammedPointer,w,c
  1174  000150  E10E               	bnz	l3191
  1175  000152  2812               	incf	_ProgrammedPointer+1,w,c
  1176  000154  E10C               	bnz	l3191
  1177  000156  2813               	incf	_ProgrammedPointer+2,w,c
  1178  000158  E10A               	bnz	l3191
  1179  00015A  2814               	incf	_ProgrammedPointer+3,w,c
  1180  00015C  E108               	bnz	l3191
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;boot_18fxxjxx.c: 368: ProgrammedPointer = PacketFromPC.Address;
  1184  00015E  C0A2  F011         	movff	_PacketFromPC+1,_ProgrammedPointer
  1185  000162  C0A3  F012         	movff	_PacketFromPC+2,_ProgrammedPointer+1
  1186  000166  C0A4  F013         	movff	_PacketFromPC+3,_ProgrammedPointer+2
  1187  00016A  C0A5  F014         	movff	_PacketFromPC+4,_ProgrammedPointer+3
  1188  00016E                     l3191:
  1189                           
  1190                           ; BSR set to: 0
  1191                           ;boot_18fxxjxx.c: 370: if(ProgrammedPointer == (uint32_t)PacketFromPC.Address)
  1192  00016E  5011               	movf	_ProgrammedPointer,w,c
  1193  000170  19A2               	xorwf	(_PacketFromPC+1)& (0+255),w,b
  1194  000172  E1C1               	bnz	l3165
  1195  000174  5012               	movf	_ProgrammedPointer+1,w,c
  1196  000176  19A3               	xorwf	(_PacketFromPC+2)& (0+255),w,b
  1197  000178  E1BE               	bnz	l3165
  1198  00017A  5013               	movf	_ProgrammedPointer+2,w,c
  1199  00017C  19A4               	xorwf	(_PacketFromPC+3)& (0+255),w,b
  1200  00017E  E1BB               	bnz	l3165
  1201  000180  5014               	movf	_ProgrammedPointer+3,w,c
  1202  000182  19A5               	xorwf	(_PacketFromPC+4)& (0+255),w,b
  1203  000184  E1B8               	bnz	l3165
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;boot_18fxxjxx.c: 371: {
  1207                           ;boot_18fxxjxx.c: 372: for(i = 0; i < PacketFromPC.Size; i++)
  1208  000186  6A25               	clrf	ProcessIO@i,c
  1209  000188  6A26               	clrf	ProcessIO@i+1,c
  1210  00018A  D01A               	goto	l3207
  1211  00018C                     l3195:
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;boot_18fxxjxx.c: 373: {
  1215                           ;boot_18fxxjxx.c: 374: ProgrammingBuffer[BufferedDataIndex] = PacketFromPC.Data[i+(0x3A-
      +                          PacketFromPC.Size)];
  1216  00018C  51A6               	movf	(_PacketFromPC+5)& (0+255),w,b
  1217  00018E  08E1               	sublw	low (_PacketFromPC+64)
  1218  000190  2425               	addwf	ProcessIO@i,w,c
  1219  000192  6ED9               	movwf	fsr2l,c
  1220  000194  6ADA               	clrf	fsr2h,c
  1221  000196  0EAC               	movlw	low _ProgrammingBuffer
  1222  000198  2432               	addwf	_BufferedDataIndex,w,c
  1223  00019A  6EE1               	movwf	fsr1l,c
  1224  00019C  6AE2               	clrf	fsr1h,c
  1225  00019E  0E04               	movlw	high _ProgrammingBuffer
  1226  0001A0  22E2               	addwfc	fsr1h,f,c
  1227  0001A2  CFDF FFE7          	movff	indf2,indf1
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;boot_18fxxjxx.c: 375: BufferedDataIndex++;
  1231  0001A6  2A32               	incf	_BufferedDataIndex,f,c
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;boot_18fxxjxx.c: 376: ProgrammedPointer++;
  1235  0001A8  2A11               	incf	_ProgrammedPointer,f,c
  1236  0001AA  0E00               	movlw	0
  1237  0001AC  2212               	addwfc	_ProgrammedPointer+1,f,c
  1238  0001AE  2213               	addwfc	_ProgrammedPointer+2,f,c
  1239  0001B0  2214               	addwfc	_ProgrammedPointer+3,f,c
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;boot_18fxxjxx.c: 377: if(BufferedDataIndex == 0x3A)
  1243  0001B2  0E3A               	movlw	58
  1244  0001B4  1832               	xorwf	_BufferedDataIndex,w,c
  1245  0001B6  E102               	bnz	l3205
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;boot_18fxxjxx.c: 378: {
  1249                           ;boot_18fxxjxx.c: 379: WriteFlashSubBlock();
  1250  0001B8  ECE2  F003         	call	_WriteFlashSubBlock	;wreg free
  1251  0001BC                     l3205:
  1252  0001BC  4A25               	infsnz	ProcessIO@i,f,c
  1253  0001BE  2A26               	incf	ProcessIO@i+1,f,c
  1254  0001C0                     l3207:
  1255  0001C0  0100               	movlb	0	; () banked
  1256  0001C2  D87B               	call	PL14	;call to abstracted procedure
  1257  0001C4  E298               	bc	l3165
  1258  0001C6  D7E2               	goto	l3195
  1259  0001C8                     l3209:
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;boot_18fxxjxx.c: 389: WriteFlashSubBlock();
  1263  0001C8  ECE2  F003         	call	_WriteFlashSubBlock	;wreg free
  1264                           
  1265                           ;boot_18fxxjxx.c: 390: ProgrammedPointer = 0xFFFFFFFF;
  1266  0001CC  ECE0  F005         	call	PL40	;call to abstracted procedure
  1267  0001D0  D792               	goto	l3165
  1268  0001D2                     l3215:
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;boot_18fxxjxx.c: 395: PacketToPC.Command = 0x07;
  1272  0001D2  0E07               	movlw	7
  1273  0001D4  6F60               	movwf	_PacketToPC& (0+255),b
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;boot_18fxxjxx.c: 396: PacketToPC.Address = PacketFromPC.Address;
  1277  0001D6  C0A2  F061         	movff	_PacketFromPC+1,_PacketToPC+1
  1278  0001DA  C0A3  F062         	movff	_PacketFromPC+2,_PacketToPC+2
  1279  0001DE  C0A4  F063         	movff	_PacketFromPC+3,_PacketToPC+3
  1280  0001E2  C0A5  F064         	movff	_PacketFromPC+4,_PacketToPC+4
  1281                           
  1282                           ; BSR set to: 0
  1283                           ;boot_18fxxjxx.c: 397: PacketToPC.Size = PacketFromPC.Size;
  1284  0001E6  C0A6  F065         	movff	_PacketFromPC+5,_PacketToPC+5
  1285                           
  1286                           ; BSR set to: 0
  1287                           ;boot_18fxxjxx.c: 400: TBLPTRU = PacketFromPC.Address >> 16;
  1288  0001EA  C0A4  FFF8         	movff	_PacketFromPC+3,tblptru	;volatile
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;boot_18fxxjxx.c: 401: TBLPTRH = PacketFromPC.Address >> 8;
  1292  0001EE  C0A3  FFF7         	movff	_PacketFromPC+2,tblptrh	;volatile
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;boot_18fxxjxx.c: 402: TBLPTRL = PacketFromPC.Address;
  1296  0001F2  C0A2  FFF6         	movff	_PacketFromPC+1,tblptrl	;volatile
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;boot_18fxxjxx.c: 403: for(i = 0; i < PacketFromPC.Size; i++)
  1300  0001F6  6A25               	clrf	ProcessIO@i,c
  1301  0001F8  6A26               	clrf	ProcessIO@i+1,c
  1302  0001FA  D00B               	goto	l3233
  1303  0001FC                     l643:
  1304                           
  1305                           ; BSR set to: 0
  1306  0001FC  0009               	tblrd		*+	;# 
  1307                           
  1308                           ;boot_18fxxjxx.c: 408: PacketToPC.Data[i+((0x40 - 6) - PacketFromPC.Size)] = TABLAT;
  1309  0001FE  0100               	movlb	0	; () banked
  1310  000200  51A6               	movf	(_PacketFromPC+5)& (0+255),w,b
  1311  000202  08A0               	sublw	low (_PacketToPC+64)
  1312  000204  2425               	addwf	ProcessIO@i,w,c
  1313  000206  6ED9               	movwf	fsr2l,c
  1314  000208  6ADA               	clrf	fsr2h,c
  1315  00020A  CFF5 FFDF          	movff	tablat,indf2	;volatile
  1316                           
  1317                           ; BSR set to: 0
  1318  00020E  4A25               	infsnz	ProcessIO@i,f,c
  1319  000210  2A26               	incf	ProcessIO@i+1,f,c
  1320  000212                     l3233:
  1321                           
  1322                           ; BSR set to: 0
  1323  000212  D853               	call	PL14	;call to abstracted procedure
  1324  000214  E3F3               	bnc	l643
  1325  000216                     u2210:
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;boot_18fxxjxx.c: 409: }
  1329                           ;boot_18fxxjxx.c: 420: if(!ep1Bi.Stat.UOWN)
  1330  000216  0104               	movlb	4	; () banked
  1331  000218  BF10               	btfsc	16,7,b	;volatile
  1332  00021A  0012               	return	
  1333  00021C  D766               	goto	u2140
  1334  00021E                     l3239:
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;boot_18fxxjxx.c: 427: SignFlash();
  1338  00021E  EC1F  F002         	call	_SignFlash	;wreg free
  1339  000222  D769               	goto	l3165
  1340  000224                     l3243:
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;boot_18fxxjxx.c: 436: PacketToPC.Command = 0x0C;
  1344  000224  0E0C               	movlw	12
  1345  000226  6F60               	movwf	_PacketToPC& (0+255),b
  1346                           
  1347                           ;boot_18fxxjxx.c: 437: PacketToPC.BootloaderVersion = ((unsigned int)1 << 8)| 2;
  1348  000228  0E01               	movlw	1
  1349  00022A  6F62               	movwf	(_PacketToPC+2)& (0+255),b
  1350  00022C  0E02               	movlw	2
  1351  00022E  6F61               	movwf	(_PacketToPC+1)& (0+255),b
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;boot_18fxxjxx.c: 438: PacketToPC.ApplicationVersion = *(const unsigned int*)0x1016;
  1355  000230  0E16               	movlw	22
  1356  000232  ECF2  F004         	call	PL36	;call to abstracted procedure
  1357  000236  CFF5 F063          	movff	tablat,_PacketToPC+3
  1358  00023A  000A               	tblrd		*-
  1359  00023C  CFF5 F064          	movff	tablat,_PacketToPC+4
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;boot_18fxxjxx.c: 439: PacketToPC.SignatureAddress = 0x1006;
  1363  000240  0E06               	movlw	6
  1364  000242  6F65               	movwf	(_PacketToPC+5)& (0+255),b
  1365  000244  0E10               	movlw	16
  1366  000246  6F66               	movwf	(_PacketToPC+6)& (0+255),b
  1367  000248  6B67               	clrf	(_PacketToPC+7)& (0+255),b
  1368  00024A  6B68               	clrf	(_PacketToPC+8)& (0+255),b
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;boot_18fxxjxx.c: 440: PacketToPC.SignatureValue = 0x600D;
  1372  00024C  0E60               	movlw	96
  1373  00024E  6F6A               	movwf	(_PacketToPC+10)& (0+255),b
  1374  000250  0E0D               	movlw	13
  1375  000252  6F69               	movwf	(_PacketToPC+9)& (0+255),b
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;boot_18fxxjxx.c: 441: PacketToPC.ErasePageSize = 1024;
  1379  000254  6B6B               	clrf	(_PacketToPC+11)& (0+255),b
  1380  000256  0E04               	movlw	4
  1381  000258  6F6C               	movwf	(_PacketToPC+12)& (0+255),b
  1382  00025A  0E00               	movlw	0
  1383  00025C  6B6D               	clrf	(_PacketToPC+13)& (0+255),b
  1384  00025E  6B6E               	clrf	(_PacketToPC+14)& (0+255),b
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;boot_18fxxjxx.c: 442: PacketToPC.Config1LMask = 0xFF;
  1388  000260  696F               	setf	(_PacketToPC+15)& (0+255),b
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;boot_18fxxjxx.c: 443: PacketToPC.Config1HMask = 0xFF;
  1392  000262  6970               	setf	(_PacketToPC+16)& (0+255),b
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;boot_18fxxjxx.c: 444: PacketToPC.Config2LMask = 0xFF;
  1396  000264  6971               	setf	(_PacketToPC+17)& (0+255),b
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;boot_18fxxjxx.c: 445: PacketToPC.Config2HMask = 0xFF;
  1400  000266  6972               	setf	(_PacketToPC+18)& (0+255),b
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;boot_18fxxjxx.c: 446: PacketToPC.Config3LMask = 0xFF;
  1404  000268  6973               	setf	(_PacketToPC+19)& (0+255),b
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;boot_18fxxjxx.c: 447: PacketToPC.Config3HMask = 0xFF;
  1408  00026A  6974               	setf	(_PacketToPC+20)& (0+255),b
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;boot_18fxxjxx.c: 448: PacketToPC.Config4LMask = 0xFF;
  1412  00026C  6975               	setf	(_PacketToPC+21)& (0+255),b
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;boot_18fxxjxx.c: 449: PacketToPC.Config4HMask = 0xFF;
  1416  00026E  6976               	setf	(_PacketToPC+22)& (0+255),b
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;boot_18fxxjxx.c: 450: PacketToPC.Config5LMask = 0x00;
  1420  000270  6B77               	clrf	(_PacketToPC+23)& (0+255),b
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;boot_18fxxjxx.c: 451: PacketToPC.Config5HMask = 0x00;
  1424  000272  6B78               	clrf	(_PacketToPC+24)& (0+255),b
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;boot_18fxxjxx.c: 452: PacketToPC.Config6LMask = 0x00;
  1428  000274  6B79               	clrf	(_PacketToPC+25)& (0+255),b
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;boot_18fxxjxx.c: 453: PacketToPC.Config6HMask = 0x00;
  1432  000276  6B7A               	clrf	(_PacketToPC+26)& (0+255),b
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;boot_18fxxjxx.c: 454: PacketToPC.Config7LMask = 0x00;
  1436  000278  6B7B               	clrf	(_PacketToPC+27)& (0+255),b
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;boot_18fxxjxx.c: 455: PacketToPC.Config7HMask = 0x00;
  1440  00027A  6B7C               	clrf	(_PacketToPC+28)& (0+255),b
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;boot_18fxxjxx.c: 456: PacketToPC.Config8LMask = 0x00;
  1444  00027C  6B7D               	clrf	(_PacketToPC+29)& (0+255),b
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;boot_18fxxjxx.c: 457: PacketToPC.Config8HMask = 0x00;
  1448  00027E  6B7E               	clrf	(_PacketToPC+30)& (0+255),b
  1449  000280  D7CA               	goto	u2210
  1450  000282                     l3291:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;boot_18fxxjxx.c: 467: ResetDeviceCleanly();
  1454  000282  EC06  F000         	call	_ResetDeviceCleanly	;wreg free
  1455  000286  D737               	goto	l3165
  1456  000288                     l3295:
  1457  000288  0100               	movlb	0	; () banked
  1458  00028A  51A1               	movf	_PacketFromPC& (0+255),w,b
  1459                           
  1460                           ; Switch size 1, requested type "space"
  1461                           ; Number of cases is 9, Range of values is 2 to 12
  1462                           ; switch strategies available:
  1463                           ; Name         Instructions Cycles
  1464                           ; simple_byte           28    15 (average)
  1465                           ;	Chosen strategy is simple_byte
  1466  00028C  0A02               	xorlw	2	; case 2
  1467  00028E  E101 D702          	bz	l3147
  1468  000292  0A01               	xorlw	1	; case 3
  1469  000294  E101 D731          	bz	l3167
  1470  000298  0A07               	xorlw	7	; case 4
  1471  00029A  E101 D73C          	bz	l3175
  1472  00029E  0A01               	xorlw	1	; case 5
  1473  0002A0  E101 D755          	bz	l3187
  1474  0002A4  0A03               	xorlw	3	; case 6
  1475  0002A6  E090               	bz	l3209
  1476  0002A8  0A01               	xorlw	1	; case 7
  1477  0002AA  E093               	bz	l3215
  1478  0002AC  0A0F               	xorlw	15	; case 8
  1479  0002AE  E0E9               	bz	l3291
  1480  0002B0  0A01               	xorlw	1	; case 9
  1481  0002B2  E0B5               	bz	l3239
  1482  0002B4  0A05               	xorlw	5	; case 12
  1483  0002B6  E0B6               	bz	l3243
  1484  0002B8  D71E               	goto	l3165
  1485  0002BA                     __end_of_ProcessIO:
  1486                           	opt stack 0
  1487  0002BA                     PL14:
  1488                           	opt stack 23
  1489  0002BA  51A6               	movf	(_PacketFromPC+5)& (0+255),w,b
  1490  0002BC  6E52               	movwf	??_ProcessIO& (0+255),c
  1491  0002BE  6A53               	clrf	(??_ProcessIO+1)& (0+255),c
  1492  0002C0  5052               	movf	??_ProcessIO,w,c
  1493  0002C2  5C25               	subwf	ProcessIO@i,w,c
  1494  0002C4  5053               	movf	??_ProcessIO+1,w,c
  1495  0002C6  5826               	subwfb	ProcessIO@i+1,w,c
  1496  0002C8  0012               	return	
  1497  0002CA                     __end_ofPL14:
  1498                           	opt stack 0
  1499                           stkptr	equ	0xFFC
  1500                           tblptru	equ	0xFF8
  1501                           tblptrh	equ	0xFF7
  1502                           tblptrl	equ	0xFF6
  1503                           tablat	equ	0xFF5
  1504                           prodh	equ	0xFF4
  1505                           prodl	equ	0xFF3
  1506                           intcon	equ	0xFF2
  1507                           wreg	equ	0xFE8
  1508                           indf1	equ	0xFE7
  1509                           fsr1h	equ	0xFE2
  1510                           fsr1l	equ	0xFE1
  1511                           indf2	equ	0xFDF
  1512                           postinc2	equ	0xFDE
  1513                           postdec2	equ	0xFDD
  1514                           plusw2	equ	0xFDB
  1515                           fsr2h	equ	0xFDA
  1516                           fsr2l	equ	0xFD9
  1517                           status	equ	0xFD8
  1518                           
  1519 ;; *************** function _WriteFlashSubBlock *****************
  1520 ;; Defined at:
  1521 ;;		line 587 in file "../demo_src/boot_18fxxjxx.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  WordToWrite     2    0        unsigned int 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1537 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1538 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1539 ;;Total ram usage:        4 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    2
  1542 ;; This function calls:
  1543 ;;		_UnlockAndActivate
  1544 ;; This function is called by:
  1545 ;;		_ProcessIO
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text3
  1550  0007C4                     __ptext3:
  1551                           	opt stack 0
  1552  0007C4                     _WriteFlashSubBlock:
  1553                           	opt stack 26
  1554                           
  1555                           ;boot_18fxxjxx.c: 589: static unsigned char i;
  1556                           ;boot_18fxxjxx.c: 590: uint16_t WordToWrite;
  1557                           ;boot_18fxxjxx.c: 591: static uint32_t Address;
  1558                           ;boot_18fxxjxx.c: 594: i = 0;
  1559                           
  1560                           ;incstack = 0
  1561  0007C4  6A31               	clrf	WriteFlashSubBlock@i,c
  1562                           
  1563                           ;boot_18fxxjxx.c: 595: while(BufferedDataIndex > 0)
  1564  0007C6  D027               	goto	l3041
  1565  0007C8                     l3019:
  1566                           
  1567                           ;boot_18fxxjxx.c: 596: {
  1568                           ;boot_18fxxjxx.c: 598: Address = (ProgrammedPointer - BufferedDataIndex);
  1569  0007C8  5032               	movf	_BufferedDataIndex,w,c
  1570  0007CA  6E48               	movwf	??_WriteFlashSubBlock& (0+255),c
  1571  0007CC  0E00               	movlw	0
  1572  0007CE  BE48               	btfsc	??_WriteFlashSubBlock& (0+255),7,c
  1573  0007D0  0EFF               	movlw	255
  1574  0007D2  6E49               	movwf	(??_WriteFlashSubBlock+1)& (0+255),c
  1575  0007D4  6E4A               	movwf	(??_WriteFlashSubBlock+2)& (0+255),c
  1576  0007D6  6E4B               	movwf	(??_WriteFlashSubBlock+3)& (0+255),c
  1577  0007D8  5048               	movf	??_WriteFlashSubBlock,w,c
  1578  0007DA  5C11               	subwf	_ProgrammedPointer,w,c
  1579  0007DC  6E0D               	movwf	WriteFlashSubBlock@Address,c
  1580  0007DE  5049               	movf	??_WriteFlashSubBlock+1,w,c
  1581  0007E0  5812               	subwfb	_ProgrammedPointer+1,w,c
  1582  0007E2  6E0E               	movwf	WriteFlashSubBlock@Address+1,c
  1583  0007E4  504A               	movf	??_WriteFlashSubBlock+2,w,c
  1584  0007E6  5813               	subwfb	_ProgrammedPointer+2,w,c
  1585  0007E8  6E0F               	movwf	WriteFlashSubBlock@Address+2,c
  1586  0007EA  504B               	movf	??_WriteFlashSubBlock+3,w,c
  1587  0007EC  5814               	subwfb	_ProgrammedPointer+3,w,c
  1588  0007EE  6E10               	movwf	WriteFlashSubBlock@Address+3,c
  1589                           
  1590                           ;boot_18fxxjxx.c: 599: TBLPTRU = Address >> 16;
  1591  0007F0  C00F  FFF8         	movff	WriteFlashSubBlock@Address+2,tblptru	;volatile
  1592                           
  1593                           ;boot_18fxxjxx.c: 600: TBLPTRH = Address >> 8;
  1594  0007F4  C00E  FFF7         	movff	WriteFlashSubBlock@Address+1,tblptrh	;volatile
  1595                           
  1596                           ;boot_18fxxjxx.c: 601: TBLPTRL = (uint8_t)Address;
  1597  0007F8  C00D  FFF6         	movff	WriteFlashSubBlock@Address,tblptrl	;volatile
  1598                           
  1599                           ;boot_18fxxjxx.c: 603: TABLAT = ProgrammingBuffer[i];
  1600  0007FC  D811               	call	PL8	;call to abstracted procedure
  1601  0007FE  000D               	tblwt		*+	;# 
  1602                           
  1603                           ;boot_18fxxjxx.c: 607: i++;
  1604  000800  2A31               	incf	WriteFlashSubBlock@i,f,c
  1605                           
  1606                           ;boot_18fxxjxx.c: 608: TABLAT = ProgrammingBuffer[i];
  1607  000802  D80E               	call	PL8	;call to abstracted procedure
  1608  000804  000C               	tblwt		*	;# 
  1609                           
  1610                           ;boot_18fxxjxx.c: 612: i++;
  1611  000806  2A31               	incf	WriteFlashSubBlock@i,f,c
  1612                           
  1613                           ;boot_18fxxjxx.c: 628: EECON1 = 0b00100100;
  1614  000808  0E24               	movlw	36
  1615  00080A  6EA6               	movwf	4006,c	;volsfr
  1616                           
  1617                           ;boot_18fxxjxx.c: 629: UnlockAndActivate(0xB5);
  1618  00080C  0EB5               	movlw	181
  1619  00080E  ECBE  F005         	call	_UnlockAndActivate
  1620                           
  1621                           ;boot_18fxxjxx.c: 631: BufferedDataIndex = BufferedDataIndex - 0x02;
  1622  000812  0EFE               	movlw	254
  1623  000814  2632               	addwf	_BufferedDataIndex,f,c
  1624  000816                     l3041:
  1625  000816  5032               	movf	_BufferedDataIndex,w,c
  1626  000818  0A80               	xorlw	128
  1627  00081A  0F7F               	addlw	-129
  1628  00081C  E2D5               	bc	l3019
  1629  00081E  0012               	return		;funcret
  1630  000820                     __end_of_WriteFlashSubBlock:
  1631                           	opt stack 0
  1632  000820                     PL8:
  1633                           	opt stack 26
  1634  000820  0EAC               	movlw	low _ProgrammingBuffer
  1635  000822  2431               	addwf	WriteFlashSubBlock@i,w,c
  1636  000824  6ED9               	movwf	fsr2l,c
  1637  000826  6ADA               	clrf	fsr2h,c
  1638  000828  0E04               	movlw	high _ProgrammingBuffer
  1639  00082A  22DA               	addwfc	fsr2h,f,c
  1640  00082C  50DF               	movf	indf2,w,c
  1641  00082E  6EF5               	movwf	tablat,c	;volatile
  1642  000830  0012               	return	
  1643  000832                     __end_ofPL8:
  1644                           	opt stack 0
  1645                           stkptr	equ	0xFFC
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           tblptrl	equ	0xFF6
  1649                           tablat	equ	0xFF5
  1650                           prodh	equ	0xFF4
  1651                           prodl	equ	0xFF3
  1652                           intcon	equ	0xFF2
  1653                           wreg	equ	0xFE8
  1654                           indf1	equ	0xFE7
  1655                           fsr1h	equ	0xFE2
  1656                           fsr1l	equ	0xFE1
  1657                           indf2	equ	0xFDF
  1658                           postinc2	equ	0xFDE
  1659                           postdec2	equ	0xFDD
  1660                           plusw2	equ	0xFDB
  1661                           fsr2h	equ	0xFDA
  1662                           fsr2l	equ	0xFD9
  1663                           status	equ	0xFD8
  1664                           
  1665 ;; *************** function _USBDeviceTasks *****************
  1666 ;; Defined at:
  1667 ;;		line 441 in file "../demo_src/usb_device.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/F
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1683 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1684 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1685 ;;Total ram usage:        2 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    5
  1688 ;; This function calls:
  1689 ;;		_USBCheckBusStatus
  1690 ;;		_USBCtrlTrfInHandler
  1691 ;;		_USBCtrlTrfSetupHandler
  1692 ;;		_USBProtocolResetHandler
  1693 ;;		_USBSuspend
  1694 ;;		_USBWakeFromSuspend
  1695 ;; This function is called by:
  1696 ;;		_BootMain
  1697 ;;		_ProcessIO
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text4
  1702  0002CA                     __ptext4:
  1703                           	opt stack 0
  1704  0002CA                     _USBDeviceTasks:
  1705                           	opt stack 24
  1706                           
  1707                           ;usb_device.c: 443: static volatile BDT* pBDTEntry;
  1708                           ;usb_device.c: 444: static uint8_t i;
  1709                           ;usb_device.c: 447: USBCheckBusStatus();
  1710                           
  1711                           ;incstack = 0
  1712  0002CA  EC4B  F006         	call	_USBCheckBusStatus	;wreg free
  1713                           
  1714                           ;usb_device.c: 452: if(usb_device_state == 0) return;
  1715  0002CE  5042               	movf	_usb_device_state,w,c
  1716  0002D0  E101               	bnz	l293
  1717  0002D2  0012               	return	
  1718  0002D4                     l293:
  1719                           
  1720                           ;usb_device.c: 458: if(UIRbits.ACTVIF) USBWakeFromSuspend();
  1721  0002D4  B462               	btfsc	3938,2,c	;volatile
  1722  0002D6  EC20  F006         	call	_USBWakeFromSuspend	;wreg free
  1723                           
  1724                           ;usb_device.c: 463: if(UCONbits.SUSPND == 1) return;
  1725  0002DA  B265               	btfsc	3941,1,c	;volatile
  1726  0002DC  0012               	return	
  1727                           
  1728                           ;usb_device.c: 471: if(UIRbits.URSTIF) USBProtocolResetHandler();
  1729  0002DE  B062               	btfsc	3938,0,c	;volatile
  1730  0002E0  EC3B  F005         	call	_USBProtocolResetHandler	;wreg free
  1731                           
  1732                           ;usb_device.c: 476: if(UIRbits.IDLEIF) USBSuspend();
  1733  0002E4  B862               	btfsc	3938,4,c	;volatile
  1734  0002E6  ECE5  F005         	call	_USBSuspend	;wreg free
  1735                           
  1736                           ;usb_device.c: 493: if(usb_device_state < 3) return;
  1737  0002EA  0E03               	movlw	3
  1738  0002EC  6042               	cpfslt	_usb_device_state,c
  1739  0002EE  D001               	goto	l299
  1740  0002F0  0C03               	retlw	3
  1741  0002F2                     l299:
  1742                           
  1743                           ;usb_device.c: 498: for(bTRNIFCount = 0; bTRNIFCount < 4; bTRNIFCount++)
  1744  0002F2  6A40               	clrf	_bTRNIFCount,c
  1745  0002F4                     l300:
  1746                           
  1747                           ;usb_device.c: 499: {
  1748                           ;usb_device.c: 500: if(UIRbits.TRNIF)
  1749  0002F4  A662               	btfss	3938,3,c	;volatile
  1750  0002F6  0012               	return	
  1751                           
  1752                           ;usb_device.c: 501: {
  1753                           ;usb_device.c: 503: USTATSave = USTAT;
  1754  0002F8  5064               	movf	3940,w,c	;volatile
  1755                           
  1756                           ;usb_device.c: 504: if((USTAT & 0x7C) == ((0x00<<3)|(0<<2)))
  1757  0002FA  CF64 F04A          	movff	3940,??_USBDeviceTasks	;volatile
  1758  0002FE  0E7C               	movlw	124
  1759  000300  164A               	andwf	??_USBDeviceTasks,f,c
  1760  000302  E12A               	bnz	l2957
  1761                           
  1762                           ;usb_device.c: 505: {
  1763                           ;usb_device.c: 507: if(USTATbits.PPBI == 0)
  1764  000304  B264               	btfsc	3940,1,c	;volatile
  1765  000306  D003               	goto	l2935
  1766                           
  1767                           ;usb_device.c: 508: {
  1768                           ;usb_device.c: 510: pBDTEntry = &ep0BoEven;
  1769  000308  6A29               	clrf	USBDeviceTasks@pBDTEntry,c
  1770  00030A  0E04               	movlw	4
  1771  00030C  D002               	goto	L2
  1772  00030E                     l2935:
  1773                           
  1774                           ;usb_device.c: 512: else
  1775                           ;usb_device.c: 513: {
  1776                           ;usb_device.c: 515: pBDTEntry = &ep0BoOdd;
  1777  00030E  0E04               	movlw	4
  1778  000310  6E29               	movwf	USBDeviceTasks@pBDTEntry,c
  1779  000312                     L2:
  1780  000312  6E2A               	movwf	USBDeviceTasks@pBDTEntry+1,c
  1781                           
  1782                           ;usb_device.c: 516: }
  1783                           ;usb_device.c: 519: UIRbits.TRNIF = 0;
  1784  000314  9662               	bcf	3938,3,c	;volatile
  1785                           
  1786                           ;usb_device.c: 522: if(pBDTEntry->Stat.PID == 0b00001101)
  1787  000316  C029  FFD9         	movff	USBDeviceTasks@pBDTEntry,fsr2l
  1788  00031A  C02A  FFDA         	movff	USBDeviceTasks@pBDTEntry+1,fsr2h
  1789  00031E  30DF               	rrcf	indf2,w,c
  1790  000320  32E8               	rrcf	wreg,f,c
  1791  000322  0B0F               	andlw	15
  1792  000324  0A0D               	xorlw	13
  1793  000326  E120               	bnz	l310
  1794                           
  1795                           ;usb_device.c: 523: {
  1796                           ;usb_device.c: 526: for(i = 0; i < sizeof(CTRL_TRF_SETUP); i++)
  1797  000328  6A39               	clrf	USBDeviceTasks@i,c
  1798  00032A                     l2947:
  1799                           
  1800                           ;usb_device.c: 527: {
  1801                           ;usb_device.c: 528: SetupPkt._byte[i] = *pBDTEntry->ADR++;
  1802  00032A  D823               	call	PL16	;call to abstracted procedure
  1803  00032C  CFDE F04A          	movff	postinc2,??_USBDeviceTasks
  1804  000330  CFDD F04B          	movff	postdec2,??_USBDeviceTasks+1
  1805  000334  C04A  FFD9         	movff	??_USBDeviceTasks,fsr2l
  1806  000338  C04B  FFDA         	movff	??_USBDeviceTasks+1,fsr2h
  1807  00033C  5039               	movf	USBDeviceTasks@i,w,c
  1808  00033E  0F01               	addlw	low _SetupPkt
  1809  000340  D81F               	call	PL30	;call to abstracted procedure
  1810  000342  D817               	call	PL16	;call to abstracted procedure
  1811  000344  2ADE               	incf	postinc2,f,c
  1812  000346  0E00               	movlw	0
  1813  000348  22DD               	addwfc	postdec2,f,c
  1814  00034A  2A39               	incf	USBDeviceTasks@i,f,c
  1815  00034C  0E07               	movlw	7
  1816  00034E  6439               	cpfsgt	USBDeviceTasks@i,c
  1817  000350  D7EC               	goto	l2947
  1818                           
  1819                           ;usb_device.c: 529: }
  1820                           ;usb_device.c: 533: USBCtrlTrfSetupHandler();
  1821  000352  EC92  F005         	call	_USBCtrlTrfSetupHandler	;wreg free
  1822                           
  1823                           ;usb_device.c: 534: }
  1824  000356  D008               	goto	l310
  1825  000358                     l2957:
  1826                           
  1827                           ;usb_device.c: 541: else if(USTAT == ((0x00<<3)|(1<<2)))
  1828  000358  0E04               	movlw	4
  1829  00035A  1864               	xorwf	3940,w,c	;volatile
  1830  00035C  E104               	bnz	l311
  1831                           
  1832                           ;usb_device.c: 542: {
  1833                           ;usb_device.c: 544: UIRbits.TRNIF = 0;
  1834  00035E  9662               	bcf	3938,3,c	;volatile
  1835                           
  1836                           ;usb_device.c: 545: USBCtrlTrfInHandler();
  1837  000360  EC1A  F005         	call	_USBCtrlTrfInHandler	;wreg free
  1838                           
  1839                           ;usb_device.c: 546: }
  1840  000364  D001               	goto	l310
  1841  000366                     l311:
  1842                           
  1843                           ;usb_device.c: 547: else
  1844                           ;usb_device.c: 548: {
  1845                           ;usb_device.c: 553: UIRbits.TRNIF = 0;
  1846  000366  9662               	bcf	3938,3,c	;volatile
  1847  000368                     l310:
  1848                           
  1849                           ;usb_device.c: 554: }
  1850                           ;usb_device.c: 555: }
  1851  000368  2A40               	incf	_bTRNIFCount,f,c
  1852  00036A  0E03               	movlw	3
  1853  00036C  6440               	cpfsgt	_bTRNIFCount,c
  1854  00036E  D7C2               	goto	l300
  1855  000370  0C03               	retlw	3
  1856  000372                     __end_of_USBDeviceTasks:
  1857                           	opt stack 0
  1858  000372                     PL16:
  1859                           	opt stack 24
  1860  000372  EE20 F002          	lfsr	2,2
  1861  000376  5029               	movf	USBDeviceTasks@pBDTEntry,w,c
  1862  000378  26D9               	addwf	fsr2l,f,c
  1863  00037A  502A               	movf	USBDeviceTasks@pBDTEntry+1,w,c
  1864  00037C  22DA               	addwfc	fsr2h,f,c
  1865  00037E  0012               	return	
  1866  000380                     __end_ofPL16:
  1867                           	opt stack 0
  1868  000380                     PL30:
  1869                           	opt stack 28
  1870  000380  6EE1               	movwf	fsr1l,c
  1871  000382  6AE2               	clrf	fsr1h,c
  1872  000384  CFDF FFE7          	movff	indf2,indf1
  1873  000388  0012               	return	
  1874  00038A                     __end_ofPL30:
  1875                           	opt stack 0
  1876                           stkptr	equ	0xFFC
  1877                           tblptru	equ	0xFF8
  1878                           tblptrh	equ	0xFF7
  1879                           tblptrl	equ	0xFF6
  1880                           tablat	equ	0xFF5
  1881                           prodh	equ	0xFF4
  1882                           prodl	equ	0xFF3
  1883                           intcon	equ	0xFF2
  1884                           wreg	equ	0xFE8
  1885                           indf1	equ	0xFE7
  1886                           fsr1h	equ	0xFE2
  1887                           fsr1l	equ	0xFE1
  1888                           indf2	equ	0xFDF
  1889                           postinc2	equ	0xFDE
  1890                           postdec2	equ	0xFDD
  1891                           plusw2	equ	0xFDB
  1892                           fsr2h	equ	0xFDA
  1893                           fsr2l	equ	0xFD9
  1894                           status	equ	0xFD8
  1895                           
  1896 ;; *************** function _USBWakeFromSuspend *****************
  1897 ;; Defined at:
  1898 ;;		line 679 in file "../demo_src/usb_device.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/F
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1916 ;;Total ram usage:        0 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    3
  1919 ;; This function calls:
  1920 ;;		_USBCBWakeFromSuspend
  1921 ;; This function is called by:
  1922 ;;		_USBDeviceTasks
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text5
  1927  000C40                     __ptext5:
  1928                           	opt stack 0
  1929  000C40                     _USBWakeFromSuspend:
  1930                           	opt stack 25
  1931                           
  1932                           ;usb_device.c: 684: USBCBWakeFromSuspend();
  1933                           
  1934                           ;incstack = 0
  1935  000C40  EC44  F006         	call	_USBCBWakeFromSuspend	;wreg free
  1936                           
  1937                           ;usb_device.c: 687: UCONbits.SUSPND = 0;
  1938  000C44  9265               	bcf	3941,1,c	;volatile
  1939                           
  1940                           ;usb_device.c: 688: UIEbits.ACTVIE = 0;
  1941  000C46  010F               	movlb	15	; () banked
  1942  000C48  9536               	bcf	54,2,b	;volatile
  1943                           
  1944                           ;usb_device.c: 689: while(UIRbits.ACTVIF){UIRbits.ACTVIF = 0;}
  1945  000C4A  D001               	goto	l321
  1946  000C4C                     l322:
  1947  000C4C  9462               	bcf	3938,2,c	;volatile
  1948  000C4E                     l321:
  1949  000C4E  A462               	btfss	3938,2,c	;volatile
  1950  000C50  0012               	return		;funcret
  1951  000C52  D7FC               	goto	l322
  1952  000C54                     __end_of_USBWakeFromSuspend:
  1953                           	opt stack 0
  1954                           stkptr	equ	0xFFC
  1955                           tblptru	equ	0xFF8
  1956                           tblptrh	equ	0xFF7
  1957                           tblptrl	equ	0xFF6
  1958                           tablat	equ	0xFF5
  1959                           prodh	equ	0xFF4
  1960                           prodl	equ	0xFF3
  1961                           intcon	equ	0xFF2
  1962                           wreg	equ	0xFE8
  1963                           indf1	equ	0xFE7
  1964                           fsr1h	equ	0xFE2
  1965                           fsr1l	equ	0xFE1
  1966                           indf2	equ	0xFDF
  1967                           postinc2	equ	0xFDE
  1968                           postdec2	equ	0xFDD
  1969                           plusw2	equ	0xFDB
  1970                           fsr2h	equ	0xFDA
  1971                           fsr2l	equ	0xFD9
  1972                           status	equ	0xFD8
  1973                           
  1974 ;; *************** function _USBCBWakeFromSuspend *****************
  1975 ;; Defined at:
  1976 ;;		line 924 in file "../demo_src/main.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		wreg, status,2, status,0, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/F
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1994 ;;Total ram usage:        0 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    2
  1997 ;; This function calls:
  1998 ;;		_DelayRoutine
  1999 ;; This function is called by:
  2000 ;;		_USBWakeFromSuspend
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text6
  2005  000C88                     __ptext6:
  2006                           	opt stack 0
  2007  000C88                     _USBCBWakeFromSuspend:
  2008                           	opt stack 0
  2009                           
  2010                           ;main.c: 930: DelayRoutine(0x300);
  2011                           
  2012                           ;incstack = 0
  2013  000C88  D802               	call	PL46	;call to abstracted procedure
  2014  000C8A  EF2A  F006         	goto	_DelayRoutine	;wreg free
  2015  000C8E                     __end_of_USBCBWakeFromSuspend:
  2016                           	opt stack 0
  2017  000C8E                     PL46:
  2018                           	opt stack 23
  2019  000C8E  0E03               	movlw	3
  2020  000C90  6E48               	movwf	DelayRoutine@DelayAmount+1,c
  2021  000C92  6A47               	clrf	DelayRoutine@DelayAmount,c
  2022  000C94  0C03               	retlw	3
  2023  000C96                     __end_ofPL46:
  2024                           	opt stack 0
  2025                           stkptr	equ	0xFFC
  2026                           tblptru	equ	0xFF8
  2027                           tblptrh	equ	0xFF7
  2028                           tblptrl	equ	0xFF6
  2029                           tablat	equ	0xFF5
  2030                           prodh	equ	0xFF4
  2031                           prodl	equ	0xFF3
  2032                           intcon	equ	0xFF2
  2033                           wreg	equ	0xFE8
  2034                           indf1	equ	0xFE7
  2035                           fsr1h	equ	0xFE2
  2036                           fsr1l	equ	0xFE1
  2037                           indf2	equ	0xFDF
  2038                           postinc2	equ	0xFDE
  2039                           postdec2	equ	0xFDD
  2040                           plusw2	equ	0xFDB
  2041                           fsr2h	equ	0xFDA
  2042                           fsr2l	equ	0xFD9
  2043                           status	equ	0xFD8
  2044                           
  2045 ;; *************** function _USBSuspend *****************
  2046 ;; Defined at:
  2047 ;;		line 587 in file "../demo_src/usb_device.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      void 
  2054 ;; Registers used:
  2055 ;;		wreg, status,2, status,0, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/F
  2058 ;;		On exit  : 3F/F
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2065 ;;Total ram usage:        0 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:    1
  2068 ;; This function calls:
  2069 ;;		_USBCBSuspend
  2070 ;; This function is called by:
  2071 ;;		_USBDeviceTasks
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text7
  2076  000BCA                     __ptext7:
  2077                           	opt stack 0
  2078  000BCA                     _USBSuspend:
  2079                           	opt stack 27
  2080                           
  2081                           ;usb_device.c: 589: static unsigned char UIESave;
  2082                           ;usb_device.c: 624: UIESave = UIE;
  2083                           
  2084                           ;incstack = 0
  2085  000BCA  CF36 F038          	movff	3894,USBSuspend@UIESave	;volatile
  2086                           
  2087                           ;usb_device.c: 625: UIE = 0b00000100;
  2088  000BCE  0E04               	movlw	4
  2089  000BD0  010F               	movlb	15	; () banked
  2090  000BD2  6F36               	movwf	54,b	;volatile
  2091                           
  2092                           ; BSR set to: 15
  2093                           ;usb_device.c: 629: UIRbits.IDLEIF = 0;
  2094  000BD4  9862               	bcf	3938,4,c	;volatile
  2095                           
  2096                           ; BSR set to: 15
  2097                           ;usb_device.c: 630: UCONbits.SUSPND = 1;
  2098  000BD6  8265               	bsf	3941,1,c	;volatile
  2099                           
  2100                           ; BSR set to: 15
  2101                           ;usb_device.c: 637: PIR2bits.USBIF = 0;
  2102  000BD8  98A1               	bcf	4001,4,c	;volatile
  2103                           
  2104                           ; BSR set to: 15
  2105                           ;usb_device.c: 641: PIE2bits.USBIE = 1;
  2106  000BDA  88A0               	bsf	4000,4,c	;volatile
  2107                           
  2108                           ; BSR set to: 15
  2109                           ;usb_device.c: 650: USBCBSuspend();
  2110  000BDC  EC15  F006         	call	_USBCBSuspend	;wreg free
  2111                           
  2112                           ;usb_device.c: 657: PIE2bits.USBIE = 0;
  2113  000BE0  98A0               	bcf	4000,4,c	;volatile
  2114                           
  2115                           ;usb_device.c: 658: UIE |= UIESave;
  2116  000BE2  5038               	movf	USBSuspend@UIESave,w,c
  2117  000BE4  010F               	movlb	15	; () banked
  2118  000BE6  1336               	iorwf	54,f,b	;volatile
  2119                           
  2120                           ; BSR set to: 15
  2121  000BE8  0012               	return		;funcret
  2122  000BEA                     __end_of_USBSuspend:
  2123                           	opt stack 0
  2124                           stkptr	equ	0xFFC
  2125                           tblptru	equ	0xFF8
  2126                           tblptrh	equ	0xFF7
  2127                           tblptrl	equ	0xFF6
  2128                           tablat	equ	0xFF5
  2129                           prodh	equ	0xFF4
  2130                           prodl	equ	0xFF3
  2131                           intcon	equ	0xFF2
  2132                           wreg	equ	0xFE8
  2133                           indf1	equ	0xFE7
  2134                           fsr1h	equ	0xFE2
  2135                           fsr1l	equ	0xFE1
  2136                           indf2	equ	0xFDF
  2137                           postinc2	equ	0xFDE
  2138                           postdec2	equ	0xFDD
  2139                           plusw2	equ	0xFDB
  2140                           fsr2h	equ	0xFDA
  2141                           fsr2l	equ	0xFD9
  2142                           status	equ	0xFD8
  2143                           
  2144 ;; *************** function _USBCBSuspend *****************
  2145 ;; Defined at:
  2146 ;;		line 960 in file "../demo_src/main.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		None
  2155 ;; Tracked objects:
  2156 ;;		On entry : 3F/F
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2164 ;;Total ram usage:        0 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_USBSuspend
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text8
  2174  000C2A                     __ptext8:
  2175                           	opt stack 0
  2176  000C2A                     _USBCBSuspend:
  2177                           	opt stack 27
  2178                           
  2179                           ; BSR set to: 15
  2180                           ;main.c: 962: static unsigned char OSCCONSave;
  2181                           ;main.c: 966: LATEbits.LATE1 = 0;
  2182                           
  2183                           ; BSR set to: 15
  2184                           ;incstack = 0
  2185  000C2A  928D               	bcf	3981,1,c	;volatile
  2186                           
  2187                           ;main.c: 972: OSCCONSave = OSCCON;
  2188  000C2C  CFD3 F041          	movff	4051,USBCBSuspend@OSCCONSave	;volatile
  2189  000C30                     l101:
  2190  000C30  0003               	sleep		;# 
  2191  000C32  B8A1               	btfsc	4001,4,c	;volatile
  2192  000C34  D002               	goto	u1540
  2193  000C36  A6D0               	btfss	4048,3,c	;volatile
  2194  000C38  D7FB               	goto	l101
  2195  000C3A                     u1540:
  2196                           
  2197                           ;main.c: 981: }
  2198                           ;main.c: 984: OSCCON = OSCCONSave;
  2199  000C3A  C041  FFD3         	movff	USBCBSuspend@OSCCONSave,4051	;volatile
  2200  000C3E  0012               	return		;funcret
  2201  000C40                     __end_of_USBCBSuspend:
  2202                           	opt stack 0
  2203                           stkptr	equ	0xFFC
  2204                           tblptru	equ	0xFF8
  2205                           tblptrh	equ	0xFF7
  2206                           tblptrl	equ	0xFF6
  2207                           tablat	equ	0xFF5
  2208                           prodh	equ	0xFF4
  2209                           prodl	equ	0xFF3
  2210                           intcon	equ	0xFF2
  2211                           wreg	equ	0xFE8
  2212                           indf1	equ	0xFE7
  2213                           fsr1h	equ	0xFE2
  2214                           fsr1l	equ	0xFE1
  2215                           indf2	equ	0xFDF
  2216                           postinc2	equ	0xFDE
  2217                           postdec2	equ	0xFDD
  2218                           plusw2	equ	0xFDB
  2219                           fsr2h	equ	0xFDA
  2220                           fsr2l	equ	0xFD9
  2221                           status	equ	0xFD8
  2222                           
  2223 ;; *************** function _USBCtrlTrfSetupHandler *****************
  2224 ;; Defined at:
  2225 ;;		line 790 in file "../demo_src/usb_device.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;		None
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      void 
  2232 ;; Registers used:
  2233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/F
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2243 ;;Total ram usage:        0 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    4
  2246 ;; This function calls:
  2247 ;;		_USBCBCheckOtherReq
  2248 ;;		_USBCheckStdRequest
  2249 ;;		_USBCtrlEPServiceComplete
  2250 ;; This function is called by:
  2251 ;;		_USBDeviceTasks
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text9
  2256  000B24                     __ptext9:
  2257                           	opt stack 0
  2258  000B24                     _USBCtrlTrfSetupHandler:
  2259                           	opt stack 24
  2260                           
  2261                           ;usb_device.c: 797: ep0Bi.Stat._byte = 0x00;
  2262                           
  2263                           ;incstack = 0
  2264  000B24  0104               	movlb	4	; () banked
  2265  000B26  6B08               	clrf	8,b	;volatile
  2266                           
  2267                           ;usb_device.c: 798: short_pkt_status = 0;
  2268  000B28  6A3D               	clrf	_short_pkt_status,c
  2269                           
  2270                           ;usb_device.c: 803: if(ep0BoEven.Stat.UOWN == 1)
  2271  000B2A  AF00               	btfss	0,7,b	;volatile
  2272  000B2C  D002               	goto	l333
  2273                           
  2274                           ; BSR set to: 4
  2275                           ;usb_device.c: 804: {
  2276                           ;usb_device.c: 805: ep0BoEven.Stat._byte = 0x00;
  2277  000B2E  6B00               	clrf	0,b	;volatile
  2278                           
  2279                           ;usb_device.c: 806: EP0OutOddNeedsArmingNext = 0;
  2280  000B30  6A3C               	clrf	_EP0OutOddNeedsArmingNext,c
  2281  000B32                     l333:
  2282                           
  2283                           ; BSR set to: 4
  2284                           ;usb_device.c: 807: }
  2285                           ;usb_device.c: 808: if(ep0BoOdd.Stat.UOWN == 1)
  2286  000B32  AF04               	btfss	4,7,b	;volatile
  2287  000B34  D003               	goto	l2845
  2288                           
  2289                           ; BSR set to: 4
  2290                           ;usb_device.c: 809: {
  2291                           ;usb_device.c: 810: ep0BoOdd.Stat._byte = 0x00;
  2292  000B36  6B04               	clrf	4,b	;volatile
  2293                           
  2294                           ; BSR set to: 4
  2295                           ;usb_device.c: 811: EP0OutOddNeedsArmingNext = 1;
  2296  000B38  0E01               	movlw	1
  2297  000B3A  6E3C               	movwf	_EP0OutOddNeedsArmingNext,c
  2298  000B3C                     l2845:
  2299                           
  2300                           ; BSR set to: 4
  2301                           ;usb_device.c: 812: }
  2302                           ;usb_device.c: 813: ctrl_trf_state = 0;
  2303  000B3C  6A3F               	clrf	_ctrl_trf_state,c
  2304                           
  2305                           ; BSR set to: 4
  2306                           ;usb_device.c: 814: ctrl_trf_session_owner = 0;
  2307  000B3E  6A3E               	clrf	_ctrl_trf_session_owner,c
  2308                           
  2309                           ; BSR set to: 4
  2310                           ;usb_device.c: 815: wCount.Val = 0;
  2311  000B40  6A2B               	clrf	_wCount,c
  2312  000B42  6A2C               	clrf	_wCount+1,c
  2313                           
  2314                           ; BSR set to: 4
  2315                           ;usb_device.c: 816: UCONbits.PKTDIS = 0;
  2316  000B44  9865               	bcf	3941,4,c	;volatile
  2317                           
  2318                           ; BSR set to: 4
  2319                           ;usb_device.c: 822: USBCheckStdRequest();
  2320  000B46  EC64  F003         	call	_USBCheckStdRequest	;wreg free
  2321                           
  2322                           ;usb_device.c: 823: USBCBCheckOtherReq();
  2323  000B4A  EC02  F000         	call	_USBCBCheckOtherReq	;wreg free
  2324                           
  2325                           ;usb_device.c: 826: USBCtrlEPServiceComplete();
  2326  000B4E  EFC6  F002         	goto	_USBCtrlEPServiceComplete	;wreg free
  2327  000B52                     __end_of_USBCtrlTrfSetupHandler:
  2328                           	opt stack 0
  2329                           stkptr	equ	0xFFC
  2330                           tblptru	equ	0xFF8
  2331                           tblptrh	equ	0xFF7
  2332                           tblptrl	equ	0xFF6
  2333                           tablat	equ	0xFF5
  2334                           prodh	equ	0xFF4
  2335                           prodl	equ	0xFF3
  2336                           intcon	equ	0xFF2
  2337                           wreg	equ	0xFE8
  2338                           indf1	equ	0xFE7
  2339                           fsr1h	equ	0xFE2
  2340                           fsr1l	equ	0xFE1
  2341                           indf2	equ	0xFDF
  2342                           postinc2	equ	0xFDE
  2343                           postdec2	equ	0xFDD
  2344                           plusw2	equ	0xFDB
  2345                           fsr2h	equ	0xFDA
  2346                           fsr2l	equ	0xFD9
  2347                           status	equ	0xFD8
  2348                           
  2349 ;; *************** function _USBCtrlEPServiceComplete *****************
  2350 ;; Defined at:
  2351 ;;		line 1147 in file "../demo_src/usb_device.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/4
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2369 ;;Total ram usage:        0 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    1
  2372 ;; This function calls:
  2373 ;;		_LoadBDTandSetUOWN
  2374 ;;		_USBCtrlTrfTxService
  2375 ;; This function is called by:
  2376 ;;		_USBCtrlTrfSetupHandler
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text10
  2381  00058C                     __ptext10:
  2382                           	opt stack 0
  2383  00058C                     _USBCtrlEPServiceComplete:
  2384                           	opt stack 26
  2385                           
  2386                           ;usb_device.c: 1151: if(ctrl_trf_session_owner == 0)
  2387                           
  2388                           ;incstack = 0
  2389  00058C  503E               	movf	_ctrl_trf_session_owner,w,c
  2390  00058E  E110               	bnz	l367
  2391                           
  2392                           ;usb_device.c: 1152: {
  2393                           ;usb_device.c: 1156: ep0Bi.Stat._byte = 0x04;
  2394                           
  2395                           ; BSR set to: 4
  2396                           ;usb_device.c: 1157: ep0Bi.Stat._byte |= 0x80;
  2397  000590  EC36  F005         	call	PL34	;call to abstracted procedure
  2398                           
  2399                           ; BSR set to: 4
  2400                           ;usb_device.c: 1158: TempBDT.Stat._byte = 0x04;
  2401  000594  6E19               	movwf	_TempBDT,c
  2402                           
  2403                           ; BSR set to: 4
  2404                           ;usb_device.c: 1159: if(EP0OutOddNeedsArmingNext == 1)
  2405  000596  043C               	decf	_EP0OutOddNeedsArmingNext,w,c
  2406  000598  E105               	bnz	l2747
  2407                           
  2408                           ; BSR set to: 4
  2409                           ;usb_device.c: 1160: {
  2410                           ;usb_device.c: 1161: LoadBDTandSetUOWN(1);
  2411  00059A  0E01               	movlw	1
  2412  00059C  ECF7  F004         	call	_LoadBDTandSetUOWN
  2413                           
  2414                           ;usb_device.c: 1162: EP0OutOddNeedsArmingNext = 0;
  2415  0005A0  6A3C               	clrf	_EP0OutOddNeedsArmingNext,c
  2416                           
  2417                           ;usb_device.c: 1163: }
  2418  0005A2  0012               	return	
  2419  0005A4                     l2747:
  2420                           
  2421                           ; BSR set to: 4
  2422                           ;usb_device.c: 1164: else
  2423                           ;usb_device.c: 1165: {
  2424                           ;usb_device.c: 1166: LoadBDTandSetUOWN(0);
  2425  0005A4  0E00               	movlw	0
  2426  0005A6  ECF7  F004         	call	_LoadBDTandSetUOWN
  2427                           
  2428                           ;usb_device.c: 1167: EP0OutOddNeedsArmingNext = 1;
  2429  0005AA  0E01               	movlw	1
  2430  0005AC  6E3C               	movwf	_EP0OutOddNeedsArmingNext,c
  2431  0005AE  0C01               	retlw	1
  2432  0005B0                     l367:
  2433                           
  2434                           ;usb_device.c: 1170: else
  2435                           ;usb_device.c: 1171: {
  2436                           ;usb_device.c: 1172: if(SetupPkt.DataDir == 1)
  2437  0005B0  AE01               	btfss	_SetupPkt,7,c
  2438  0005B2  D01B               	goto	l2771
  2439                           
  2440                           ;usb_device.c: 1173: {
  2441                           ;usb_device.c: 1197: ctrl_trf_state = 1;
  2442  0005B4  0E01               	movlw	1
  2443  0005B6  6E3F               	movwf	_ctrl_trf_state,c
  2444                           
  2445                           ;usb_device.c: 1202: if(SetupPkt.wLength < wCount.Val)
  2446  0005B8  502B               	movf	_wCount,w,c
  2447  0005BA  5C07               	subwf	_SetupPkt+6,w,c
  2448  0005BC  502C               	movf	_wCount+1,w,c
  2449  0005BE  5808               	subwfb	_SetupPkt+7,w,c
  2450  0005C0  E204               	bc	l2757
  2451                           
  2452                           ;usb_device.c: 1203: wCount.Val = SetupPkt.wLength;
  2453  0005C2  C007  F02B         	movff	_SetupPkt+6,_wCount
  2454  0005C6  C008  F02C         	movff	_SetupPkt+7,_wCount+1
  2455  0005CA                     l2757:
  2456                           
  2457                           ;usb_device.c: 1207: USBCtrlTrfTxService();
  2458  0005CA  EC15  F003         	call	_USBCtrlTrfTxService	;wreg free
  2459                           
  2460                           ;usb_device.c: 1211: TempBDT.Stat._byte = 0x40 | 0x08;
  2461  0005CE  0E48               	movlw	72
  2462  0005D0  6E19               	movwf	_TempBDT,c
  2463                           
  2464                           ;usb_device.c: 1212: LoadBDTandSetUOWN(1);
  2465  0005D2  0E01               	movlw	1
  2466  0005D4  ECF7  F004         	call	_LoadBDTandSetUOWN
  2467                           
  2468                           ;usb_device.c: 1213: LoadBDTandSetUOWN(0);
  2469  0005D8  0E00               	movlw	0
  2470  0005DA  ECF7  F004         	call	_LoadBDTandSetUOWN
  2471                           
  2472                           ;usb_device.c: 1218: ep0Bi.ADR = (uint8_t*)&CtrlTrfData;
  2473  0005DE  0E24               	movlw	36
  2474  0005E0  0104               	movlb	4	; () banked
  2475  0005E2  6F0A               	movwf	10,b	;volatile
  2476  0005E4  0E04               	movlw	4
  2477  0005E6  6F0B               	movwf	11,b	;volatile
  2478                           
  2479                           ; BSR set to: 4
  2480                           ;usb_device.c: 1219: ep0Bi.Stat._byte = 0x40|0x08;
  2481                           
  2482                           ; BSR set to: 4
  2483                           ;usb_device.c: 1220: ep0Bi.Stat._byte |= 0x80;
  2484                           
  2485                           ;usb_device.c: 1221: }
  2486  0005E8  D01C               	goto	PL32	;call to abstracted procedure
  2487  0005EA                     l2771:
  2488                           
  2489                           ;usb_device.c: 1222: else
  2490                           ;usb_device.c: 1223: {
  2491                           ;usb_device.c: 1234: ctrl_trf_state = 2;
  2492  0005EA  0E02               	movlw	2
  2493  0005EC  6E3F               	movwf	_ctrl_trf_state,c
  2494                           
  2495                           ;usb_device.c: 1239: TempBDT.Stat._byte = 0x04;
  2496  0005EE  0E04               	movlw	4
  2497  0005F0  6E19               	movwf	_TempBDT,c
  2498                           
  2499                           ;usb_device.c: 1241: if(SetupPkt.wLength == 0)
  2500  0005F2  5007               	movf	_SetupPkt+6,w,c
  2501  0005F4  1008               	iorwf	_SetupPkt+7,w,c
  2502  0005F6  E102               	bnz	l2777
  2503                           
  2504                           ;usb_device.c: 1242: {
  2505                           ;usb_device.c: 1243: TempBDT.Stat._byte = 0x40|0x08;
  2506  0005F8  0E48               	movlw	72
  2507  0005FA  6E19               	movwf	_TempBDT,c
  2508  0005FC                     l2777:
  2509                           
  2510                           ;usb_device.c: 1244: }
  2511                           ;usb_device.c: 1246: if(EP0OutOddNeedsArmingNext == 1)
  2512  0005FC  043C               	decf	_EP0OutOddNeedsArmingNext,w,c
  2513  0005FE  E105               	bnz	l2783
  2514                           
  2515                           ;usb_device.c: 1247: {
  2516                           ;usb_device.c: 1248: LoadBDTandSetUOWN(1);
  2517  000600  0E01               	movlw	1
  2518  000602  ECF7  F004         	call	_LoadBDTandSetUOWN
  2519                           
  2520                           ;usb_device.c: 1249: EP0OutOddNeedsArmingNext = 0;
  2521  000606  6A3C               	clrf	_EP0OutOddNeedsArmingNext,c
  2522                           
  2523                           ;usb_device.c: 1250: }
  2524  000608  D005               	goto	l2787
  2525  00060A                     l2783:
  2526                           
  2527                           ;usb_device.c: 1251: else
  2528                           ;usb_device.c: 1252: {
  2529                           ;usb_device.c: 1253: LoadBDTandSetUOWN(0);
  2530  00060A  0E00               	movlw	0
  2531  00060C  ECF7  F004         	call	_LoadBDTandSetUOWN
  2532                           
  2533                           ;usb_device.c: 1254: EP0OutOddNeedsArmingNext = 1;
  2534  000610  0E01               	movlw	1
  2535  000612  6E3C               	movwf	_EP0OutOddNeedsArmingNext,c
  2536  000614                     l2787:
  2537                           
  2538                           ;usb_device.c: 1255: }
  2539                           ;usb_device.c: 1259: if(SetupPkt.wLength == 0)
  2540  000614  5007               	movf	_SetupPkt+6,w,c
  2541  000616  1008               	iorwf	_SetupPkt+7,w,c
  2542  000618  A4D8               	btfss	status,2,c
  2543  00061A  0012               	return	
  2544                           
  2545                           ;usb_device.c: 1260: {
  2546                           ;usb_device.c: 1262: ep0Bi.Cnt = 0;
  2547  00061C  0104               	movlb	4	; () banked
  2548  00061E  6B09               	clrf	9,b	;volatile
  2549                           
  2550                           ; BSR set to: 4
  2551                           ;usb_device.c: 1263: ep0Bi.Stat._byte = 0x40|0x08;
  2552                           
  2553                           ; BSR set to: 4
  2554                           ;usb_device.c: 1264: ep0Bi.Stat._byte |= 0x80;
  2555  000620  D000               	goto	PL32	;call to abstracted procedure
  2556  000622                     __end_of_USBCtrlEPServiceComplete:
  2557                           	opt stack 0
  2558  000622                     PL32:
  2559                           	opt stack 26
  2560  000622  0E48               	movlw	72
  2561  000624  6F08               	movwf	8,b	;volatile
  2562  000626  8F08               	bsf	8,7,b	;volatile
  2563  000628  0C48               	retlw	72
  2564  00062A                     __end_ofPL32:
  2565                           	opt stack 0
  2566                           stkptr	equ	0xFFC
  2567                           tblptru	equ	0xFF8
  2568                           tblptrh	equ	0xFF7
  2569                           tblptrl	equ	0xFF6
  2570                           tablat	equ	0xFF5
  2571                           prodh	equ	0xFF4
  2572                           prodl	equ	0xFF3
  2573                           intcon	equ	0xFF2
  2574                           wreg	equ	0xFE8
  2575                           indf1	equ	0xFE7
  2576                           fsr1h	equ	0xFE2
  2577                           fsr1l	equ	0xFE1
  2578                           indf2	equ	0xFDF
  2579                           postinc2	equ	0xFDE
  2580                           postdec2	equ	0xFDD
  2581                           plusw2	equ	0xFDB
  2582                           fsr2h	equ	0xFDA
  2583                           fsr2l	equ	0xFD9
  2584                           status	equ	0xFD8
  2585                           
  2586 ;; *************** function _USBCheckStdRequest *****************
  2587 ;; Defined at:
  2588 ;;		line 1294 in file "../demo_src/usb_device.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 3F/4
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2605 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2606 ;;Total ram usage:        1 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    3
  2609 ;; This function calls:
  2610 ;;		_USBStdFeatureReqHandler
  2611 ;;		_USBStdGetDscHandler
  2612 ;;		_USBStdGetStatusHandler
  2613 ;;		_USBStdSetCfgHandler
  2614 ;; This function is called by:
  2615 ;;		_USBCtrlTrfSetupHandler
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text11
  2620  0006C8                     __ptext11:
  2621                           	opt stack 0
  2622  0006C8                     _USBCheckStdRequest:
  2623                           	opt stack 24
  2624                           
  2625                           ; BSR set to: 4
  2626                           ;usb_device.c: 1296: if(SetupPkt.RequestType != 0x00) return;
  2627                           
  2628                           ;incstack = 0
  2629  0006C8  3801               	swapf	_SetupPkt,w,c
  2630  0006CA  32E8               	rrcf	wreg,f,c
  2631  0006CC  0B03               	andlw	3
  2632  0006CE  E018               	bz	l2731
  2633                           
  2634                           ; BSR set to: 4
  2635  0006D0  0012               	return	
  2636  0006D2                     l2699:
  2637                           
  2638                           ; BSR set to: 4
  2639                           ;usb_device.c: 1301: ctrl_trf_session_owner = 1;
  2640  0006D2  0E01               	movlw	1
  2641  0006D4  6E3E               	movwf	_ctrl_trf_session_owner,c
  2642                           
  2643                           ;usb_device.c: 1302: usb_device_state = 4;
  2644  0006D6  0E04               	movlw	4
  2645  0006D8  6E42               	movwf	_usb_device_state,c
  2646                           
  2647                           ;usb_device.c: 1304: break;
  2648  0006DA  0C04               	retlw	4
  2649  0006DC                     l2705:
  2650                           
  2651                           ; BSR set to: 4
  2652                           ;usb_device.c: 1312: ctrl_trf_session_owner = 1;
  2653  0006DC  0E01               	movlw	1
  2654  0006DE  6E3E               	movwf	_ctrl_trf_session_owner,c
  2655                           
  2656                           ; BSR set to: 4
  2657                           ;usb_device.c: 1313: pSrc.bRam = (uint8_t*)&usb_active_cfg;
  2658  0006E0  0E46               	movlw	low _usb_active_cfg
  2659  0006E2  6E20               	movwf	_pSrc,c
  2660  0006E4                     
  2661                           ; BSR set to: 4
  2662                           ;usb_device.c: 1314: usb_stat.ctrl_trf_mem = 0;
  2663                           
  2664                           ; BSR set to: 4
  2665                           ;usb_device.c: 1316: wCount.v[0] = 1;
  2666                           
  2667                           ;usb_device.c: 1317: break;
  2668  0006E4  EF1A  F002         	goto	__end_ofPL4	;call to abstracted procedure
  2669  0006E8                     l2717:
  2670                           
  2671                           ; BSR set to: 4
  2672                           ;usb_device.c: 1326: ctrl_trf_session_owner = 1;
  2673                           
  2674                           ; BSR set to: 4
  2675                           ;usb_device.c: 1327: pSrc.bRam = (uint8_t*)&usb_alt_intf+SetupPkt.bIntfID;
  2676  0006E8  D82C               	call	PL38	;call to abstracted procedure
  2677  0006EA  6E49               	movwf	??_USBCheckStdRequest& (0+255),c
  2678  0006EC  C049  F020         	movff	??_USBCheckStdRequest,_pSrc
  2679  0006F0  EF1A  F002         	goto	__end_ofPL4
  2680  0006F4                     l2725:
  2681                           
  2682                           ; BSR set to: 4
  2683                           ;usb_device.c: 1332: ctrl_trf_session_owner = 1;
  2684                           
  2685                           ; BSR set to: 4
  2686                           ;usb_device.c: 1333: usb_alt_intf[SetupPkt.bIntfID] = SetupPkt.bAltID;
  2687  0006F4  D826               	call	PL38	;call to abstracted procedure
  2688  0006F6  6ED9               	movwf	fsr2l,c
  2689  0006F8  6ADA               	clrf	fsr2h,c
  2690  0006FA  C003  FFDF         	movff	_SetupPkt+2,indf2
  2691                           
  2692                           ;usb_device.c: 1334: break;
  2693  0006FE  0012               	return	
  2694  000700                     l2731:
  2695                           
  2696                           ; BSR set to: 4
  2697  000700  5002               	movf	_SetupPkt+1,w,c
  2698                           
  2699                           ; Switch size 1, requested type "space"
  2700                           ; Number of cases is 11, Range of values is 0 to 12
  2701                           ; switch strategies available:
  2702                           ; Name         Instructions Cycles
  2703                           ; simple_byte           34    18 (average)
  2704                           ;	Chosen strategy is simple_byte
  2705  000702  E102 EF19  F004    	bz	_USBStdGetStatusHandler
  2706  000708  0A01               	xorlw	1	; case 1
  2707  00070A  E102 EF75  F002    	bz	_USBStdFeatureReqHandler
  2708  000710  0A02               	xorlw	2	; case 3
  2709  000712  E102 EF75  F002    	bz	_USBStdFeatureReqHandler
  2710  000718  0A06               	xorlw	6	; case 5
  2711  00071A  E0DB               	bz	l2699
  2712  00071C  0A03               	xorlw	3	; case 6
  2713  00071E  E102 EFA6  F003    	bz	_USBStdGetDscHandler
  2714  000724  0A01               	xorlw	1	; case 7
  2715  000726  B4D8               	btfsc	status,2,c
  2716  000728  0012               	return	
  2717  00072A  0A0F               	xorlw	15	; case 8
  2718  00072C  E0D7               	bz	l2705
  2719  00072E  0A01               	xorlw	1	; case 9
  2720  000730  E102 EFDE  F007    	bz	_USBStdSetCfgHandler
  2721  000736  0A03               	xorlw	3	; case 10
  2722  000738  E0D7               	bz	l2717
  2723  00073A  0A01               	xorlw	1	; case 11
  2724  00073C  E0DB               	bz	l2725
  2725  00073E  0A07               	xorlw	7	; case 12
  2726  000740  0012               	return	
  2727  000742                     __end_of_USBCheckStdRequest:
  2728                           	opt stack 0
  2729  000742                     PL38:
  2730                           	opt stack 24
  2731  000742  0E01               	movlw	1
  2732  000744  6E3E               	movwf	_ctrl_trf_session_owner,c
  2733  000746  5005               	movf	_SetupPkt+4,w,c
  2734  000748  0F45               	addlw	low _usb_alt_intf
  2735  00074A  0012               	return	
  2736  00074C                     __end_ofPL38:
  2737                           	opt stack 0
  2738                           stkptr	equ	0xFFC
  2739                           tblptru	equ	0xFF8
  2740                           tblptrh	equ	0xFF7
  2741                           tblptrl	equ	0xFF6
  2742                           tablat	equ	0xFF5
  2743                           prodh	equ	0xFF4
  2744                           prodl	equ	0xFF3
  2745                           intcon	equ	0xFF2
  2746                           wreg	equ	0xFE8
  2747                           indf1	equ	0xFE7
  2748                           fsr1h	equ	0xFE2
  2749                           fsr1l	equ	0xFE1
  2750                           indf2	equ	0xFDF
  2751                           postinc2	equ	0xFDE
  2752                           postdec2	equ	0xFDD
  2753                           plusw2	equ	0xFDB
  2754                           fsr2h	equ	0xFDA
  2755                           fsr2l	equ	0xFD9
  2756                           status	equ	0xFD8
  2757                           
  2758 ;; *************** function _USBStdSetCfgHandler *****************
  2759 ;; Defined at:
  2760 ;;		line 1409 in file "../demo_src/usb_device.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 3F/4
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2778 ;;Total ram usage:        0 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    2
  2781 ;; This function calls:
  2782 ;;		_USBCBInitEP
  2783 ;; This function is called by:
  2784 ;;		_USBCheckStdRequest
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	text12
  2789  000FBC                     __ptext12:
  2790                           	opt stack 0
  2791  000FBC                     _USBStdSetCfgHandler:
  2792                           	opt stack 24
  2793                           
  2794                           ; BSR set to: 4
  2795                           ;usb_device.c: 1411: static unsigned char i;
  2796                           ;usb_device.c: 1413: ctrl_trf_session_owner = 1;
  2797                           
  2798                           ;incstack = 0
  2799  000FBC  0E01               	movlw	1
  2800  000FBE  6E3E               	movwf	_ctrl_trf_session_owner,c
  2801                           
  2802                           ; BSR set to: 4
  2803                           ;usb_device.c: 1415: UEP1=0x00;UEP2=0x00;UEP3=0x00; UEP4=0x00;UEP5=0x00;UEP6=0x00;UEP7=0
      +                          x00;;
  2804  000FC0  010F               	movlb	15	; () banked
  2805                           
  2806                           ; BSR set to: 15
  2807                           
  2808                           ; BSR set to: 15
  2809                           
  2810                           ; BSR set to: 15
  2811                           
  2812                           ; BSR set to: 15
  2813                           
  2814                           ; BSR set to: 15
  2815                           
  2816                           ; BSR set to: 15
  2817  000FC2  D816               	call	PL12	;call to abstracted procedure
  2818                           
  2819                           ; BSR set to: 15
  2820                           ;usb_device.c: 1417: for(i = 0; i < 1; i++)
  2821  000FC4  6A36               	clrf	USBStdSetCfgHandler@i,c
  2822  000FC6                     l2591:
  2823                           
  2824                           ;usb_device.c: 1418: {
  2825                           ;usb_device.c: 1419: usb_alt_intf[i] = 0;
  2826  000FC6  5036               	movf	USBStdSetCfgHandler@i,w,c
  2827  000FC8  0F45               	addlw	low _usb_alt_intf
  2828  000FCA  6ED9               	movwf	fsr2l,c
  2829  000FCC  6ADA               	clrf	fsr2h,c
  2830  000FCE  6ADF               	clrf	indf2,c
  2831  000FD0  2A36               	incf	USBStdSetCfgHandler@i,f,c
  2832  000FD2  5036               	movf	USBStdSetCfgHandler@i,w,c
  2833  000FD4  E0F8               	bz	l2591
  2834                           
  2835                           ;usb_device.c: 1420: }
  2836                           ;usb_device.c: 1423: usb_active_cfg = SetupPkt.bCfgValue;
  2837  000FD6  C003  F046         	movff	_SetupPkt+2,_usb_active_cfg
  2838                           
  2839                           ;usb_device.c: 1430: USBCBInitEP(usb_active_cfg);
  2840  000FDA  5046               	movf	_usb_active_cfg,w,c
  2841  000FDC  EC34  F006         	call	_USBCBInitEP
  2842                           
  2843                           ;usb_device.c: 1432: if(SetupPkt.bCfgValue == 0)
  2844  000FE0  5003               	movf	_SetupPkt+2,w,c
  2845  000FE2  E103               	bnz	l2603
  2846                           
  2847                           ;usb_device.c: 1433: {
  2848                           ;usb_device.c: 1434: usb_device_state = 5;
  2849  000FE4  0E05               	movlw	5
  2850  000FE6  6E42               	movwf	_usb_device_state,c
  2851                           
  2852                           ;usb_device.c: 1435: }
  2853  000FE8  0C05               	retlw	5
  2854  000FEA                     l2603:
  2855                           
  2856                           ;usb_device.c: 1436: else
  2857                           ;usb_device.c: 1437: {
  2858                           ;usb_device.c: 1438: usb_device_state = 6;
  2859  000FEA  0E06               	movlw	6
  2860  000FEC  6E42               	movwf	_usb_device_state,c
  2861  000FEE  0C06               	retlw	6	;funcret
  2862  000FF0                     __end_of_USBStdSetCfgHandler:
  2863                           	opt stack 0
  2864  000FF0                     PL12:
  2865                           	opt stack 26
  2866  000FF0  6B27               	clrf	39,b	;volatile
  2867  000FF2  6B28               	clrf	40,b	;volatile
  2868  000FF4  6B29               	clrf	41,b	;volatile
  2869  000FF6  6B2A               	clrf	42,b	;volatile
  2870  000FF8  6B2B               	clrf	43,b	;volatile
  2871  000FFA  6B2C               	clrf	44,b	;volatile
  2872  000FFC  6B2D               	clrf	45,b	;volatile
  2873  000FFE  0012               	return	
  2874  001000                     __end_ofPL12:
  2875                           	opt stack 0
  2876                           stkptr	equ	0xFFC
  2877                           tblptru	equ	0xFF8
  2878                           tblptrh	equ	0xFF7
  2879                           tblptrl	equ	0xFF6
  2880                           tablat	equ	0xFF5
  2881                           prodh	equ	0xFF4
  2882                           prodl	equ	0xFF3
  2883                           intcon	equ	0xFF2
  2884                           wreg	equ	0xFE8
  2885                           indf1	equ	0xFE7
  2886                           fsr1h	equ	0xFE2
  2887                           fsr1l	equ	0xFE1
  2888                           indf2	equ	0xFDF
  2889                           postinc2	equ	0xFDE
  2890                           postdec2	equ	0xFDD
  2891                           plusw2	equ	0xFDB
  2892                           fsr2h	equ	0xFDA
  2893                           fsr2l	equ	0xFD9
  2894                           status	equ	0xFD8
  2895                           
  2896 ;; *************** function _USBStdGetStatusHandler *****************
  2897 ;; Defined at:
  2898 ;;		line 1458 in file "../demo_src/usb_device.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2907 ;; Tracked objects:
  2908 ;;		On entry : 3F/4
  2909 ;;		On exit  : 3F/4
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2916 ;;Total ram usage:        2 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_USBCheckStdRequest
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text13
  2926  000832                     __ptext13:
  2927                           	opt stack 0
  2928  000832                     _USBStdGetStatusHandler:
  2929                           	opt stack 26
  2930                           
  2931                           ; BSR set to: 4
  2932                           ;usb_device.c: 1460: CtrlTrfData._byte0 = 0;
  2933                           
  2934                           ;incstack = 0
  2935  000832  6B24               	clrf	36,b	;volatile
  2936                           
  2937                           ;usb_device.c: 1461: CtrlTrfData._byte1 = 0;
  2938  000834  6B25               	clrf	37,b	;volatile
  2939                           
  2940                           ;usb_device.c: 1463: switch(SetupPkt.Recipient)
  2941  000836  D022               	goto	l2627
  2942  000838                     l2607:
  2943                           
  2944                           ; BSR set to: 4
  2945                           ;usb_device.c: 1466: ctrl_trf_session_owner = 1;
  2946  000838  0E01               	movlw	1
  2947  00083A  6E3E               	movwf	_ctrl_trf_session_owner,c
  2948                           
  2949                           ; BSR set to: 4
  2950                           ;usb_device.c: 1474: if(usb_stat.RemoteWakeup == 1)
  2951                           
  2952                           ;usb_device.c: 1472: if(0 == 1)
  2953  00083C  B03B               	btfsc	_usb_stat,0,c
  2954                           
  2955                           ; BSR set to: 4
  2956                           ;usb_device.c: 1475: CtrlTrfData._byte0|=0b00000010;
  2957  00083E  8324               	bsf	36,1,b	;volatile
  2958  000840  D024               	goto	l2629
  2959  000842                     l2615:
  2960                           
  2961                           ; BSR set to: 4
  2962                           ;usb_device.c: 1478: ctrl_trf_session_owner = 1;
  2963  000842  0E01               	movlw	1
  2964  000844  6E3E               	movwf	_ctrl_trf_session_owner,c
  2965                           
  2966                           ;usb_device.c: 1479: break;
  2967  000846  D021               	goto	l2629
  2968  000848                     l2617:
  2969                           
  2970                           ; BSR set to: 4
  2971                           ;usb_device.c: 1481: ctrl_trf_session_owner = 1;
  2972                           
  2973                           ; BSR set to: 4
  2974                           ;usb_device.c: 1485: pDst.bRam = (uint8_t*)&ep0BoEven+(SetupPkt.EPNum*8)+(SetupPkt.EPDir
      +                          *4)+4;
  2975  000848  ECB7  F002         	call	PL22	;call to abstracted procedure
  2976  00084C  6A47               	clrf	??_USBStdGetStatusHandler& (0+255),c
  2977  00084E  0E04               	movlw	4
  2978  000850  6E48               	movwf	(??_USBStdGetStatusHandler+1)& (0+255),c
  2979  000852  2647               	addwf	??_USBStdGetStatusHandler,f,c
  2980  000854  0E00               	movlw	0
  2981  000856  2248               	addwfc	??_USBStdGetStatusHandler+1,f,c
  2982  000858  50F3               	movf	prodl,w,c
  2983  00085A  2647               	addwf	??_USBStdGetStatusHandler,f,c
  2984  00085C  50F4               	movf	prodh,w,c
  2985  00085E  2248               	addwfc	??_USBStdGetStatusHandler+1,f,c
  2986  000860  ECBD  F002         	call	PL28	;call to abstracted procedure
  2987  000864  2447               	addwf	??_USBStdGetStatusHandler,w,c
  2988  000866  6E1D               	movwf	_pDst,c
  2989  000868  50F4               	movf	prodh,w,c
  2990  00086A  2048               	addwfc	??_USBStdGetStatusHandler+1,w,c
  2991  00086C  6E1E               	movwf	_pDst+1,c
  2992                           
  2993                           ; BSR set to: 4
  2994                           ;usb_device.c: 1486: if(*pDst.bRam & 0x04)
  2995  00086E  ECB2  F002         	call	PL2	;call to abstracted procedure
  2996  000872  A4DF               	btfss	indf2,2,c
  2997  000874  D00A               	goto	l2629
  2998                           
  2999                           ; BSR set to: 4
  3000                           ;usb_device.c: 1487: CtrlTrfData._byte0=0x01;
  3001  000876  0E01               	movlw	1
  3002  000878  6F24               	movwf	36,b	;volatile
  3003  00087A  D007               	goto	l2629
  3004  00087C                     l2627:
  3005                           
  3006                           ; BSR set to: 4
  3007  00087C  5001               	movf	_SetupPkt,w,c
  3008  00087E  0B1F               	andlw	31
  3009                           
  3010                           ; Switch size 1, requested type "space"
  3011                           ; Number of cases is 3, Range of values is 0 to 2
  3012                           ; switch strategies available:
  3013                           ; Name         Instructions Cycles
  3014                           ; simple_byte           10     6 (average)
  3015                           ;	Chosen strategy is simple_byte
  3016  000880  E0DB               	bz	l2607
  3017  000882  0A01               	xorlw	1	; case 1
  3018  000884  E0DE               	bz	l2615
  3019  000886  0A03               	xorlw	3	; case 2
  3020  000888  E0DF               	bz	l2617
  3021  00088A                     l2629:
  3022                           
  3023                           ; BSR set to: 4
  3024                           ;usb_device.c: 1491: if(ctrl_trf_session_owner == 1)
  3025  00088A  043E               	decf	_ctrl_trf_session_owner,w,c
  3026  00088C  A4D8               	btfss	status,2,c
  3027  00088E  0012               	return	
  3028                           
  3029                           ; BSR set to: 4
  3030                           ;usb_device.c: 1492: {
  3031                           ;usb_device.c: 1493: pSrc.bRam = (uint8_t*)&CtrlTrfData;
  3032  000890  0E24               	movlw	36
  3033  000892  6E20               	movwf	_pSrc,c
  3034  000894  0E04               	movlw	4
  3035  000896  6E21               	movwf	_pSrc+1,c
  3036                           
  3037                           ; BSR set to: 4
  3038                           ;usb_device.c: 1494: usb_stat.ctrl_trf_mem = 0;
  3039  000898  923B               	bcf	_usb_stat,1,c
  3040                           
  3041                           ; BSR set to: 4
  3042                           ;usb_device.c: 1495: wCount.v[0] = 2;
  3043  00089A  0E02               	movlw	2
  3044  00089C  6E2B               	movwf	_wCount,c
  3045                           
  3046                           ; BSR set to: 4
  3047  00089E  0C02               	retlw	2	;funcret
  3048  0008A0                     __end_of_USBStdGetStatusHandler:
  3049                           	opt stack 0
  3050                           stkptr	equ	0xFFC
  3051                           tblptru	equ	0xFF8
  3052                           tblptrh	equ	0xFF7
  3053                           tblptrl	equ	0xFF6
  3054                           tablat	equ	0xFF5
  3055                           prodh	equ	0xFF4
  3056                           prodl	equ	0xFF3
  3057                           intcon	equ	0xFF2
  3058                           wreg	equ	0xFE8
  3059                           indf1	equ	0xFE7
  3060                           fsr1h	equ	0xFE2
  3061                           fsr1l	equ	0xFE1
  3062                           indf2	equ	0xFDF
  3063                           postinc2	equ	0xFDE
  3064                           postdec2	equ	0xFDD
  3065                           plusw2	equ	0xFDB
  3066                           fsr2h	equ	0xFDA
  3067                           fsr2l	equ	0xFD9
  3068                           status	equ	0xFD8
  3069                           
  3070 ;; *************** function _USBStdGetDscHandler *****************
  3071 ;; Defined at:
  3072 ;;		line 1361 in file "../demo_src/usb_device.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3081 ;; Tracked objects:
  3082 ;;		On entry : 3F/4
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3088 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3089 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3090 ;;Total ram usage:        1 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_USBCheckStdRequest
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text14
  3100  00074C                     __ptext14:
  3101                           	opt stack 0
  3102  00074C                     _USBStdGetDscHandler:
  3103                           	opt stack 26
  3104                           
  3105                           ; BSR set to: 4
  3106                           ;usb_device.c: 1363: if(SetupPkt.bmRequestType == 0x80)
  3107                           
  3108                           ; BSR set to: 4
  3109                           ;incstack = 0
  3110  00074C  0E80               	movlw	128
  3111  00074E  1801               	xorwf	_SetupPkt,w,c
  3112  000750  E030               	bz	l2569
  3113  000752  0012               	return	
  3114  000754                     l2547:
  3115                           
  3116                           ; BSR set to: 4
  3117                           ;usb_device.c: 1368: ctrl_trf_session_owner = 1;
  3118  000754  0E01               	movlw	1
  3119  000756  6E3E               	movwf	_ctrl_trf_session_owner,c
  3120                           
  3121                           ; BSR set to: 4
  3122                           ;usb_device.c: 1369: pSrc.bRom = (const uint8_t*)&device_dsc;
  3123  000758  0EA4               	movlw	low _device_dsc
  3124  00075A  EC14  F002         	call	PL4	;call to abstracted procedure
  3125                           
  3126                           ; BSR set to: 4
  3127                           ;usb_device.c: 1370: wCount.v[0] = sizeof(device_dsc);
  3128  00075E  0E12               	movlw	18
  3129  000760  D009               	goto	L4
  3130  000762                     l2553:
  3131                           
  3132                           ; BSR set to: 4
  3133                           ;usb_device.c: 1374: if(SetupPkt.bDscIndex < 1)
  3134  000762  5003               	movf	_SetupPkt+2,w,c
  3135  000764  E12D               	bnz	l402
  3136                           
  3137                           ; BSR set to: 4
  3138                           ;usb_device.c: 1375: {
  3139                           ;usb_device.c: 1376: ctrl_trf_session_owner = 1;
  3140  000766  0E01               	movlw	1
  3141  000768  6E3E               	movwf	_ctrl_trf_session_owner,c
  3142                           
  3143                           ; BSR set to: 4
  3144                           ;usb_device.c: 1377: pSrc.bRom = (const BYTE*)&CFG01;
  3145  00076A  0E38               	movlw	low _CFG01
  3146  00076C  EC14  F002         	call	PL4	;call to abstracted procedure
  3147                           
  3148                           ; BSR set to: 4
  3149                           ;usb_device.c: 1378: wCount.Val = sizeof(CFG01);
  3150  000770  6A2C               	clrf	_wCount+1,c
  3151  000772  0E29               	movlw	41
  3152  000774                     L4:
  3153  000774  6E2B               	movwf	_wCount,c
  3154  000776  D024               	goto	l402
  3155  000778                     l2561:
  3156                           
  3157                           ; BSR set to: 4
  3158                           ;usb_device.c: 1382: ctrl_trf_session_owner = 1;
  3159  000778  0E01               	movlw	1
  3160  00077A  6E3E               	movwf	_ctrl_trf_session_owner,c
  3161                           
  3162                           ; BSR set to: 4
  3163                           ;usb_device.c: 1383: pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  3164  00077C  5003               	movf	_SetupPkt+2,w,c
  3165  00077E  0F01               	addlw	low _USB_SD_Ptr
  3166  000780  6E47               	movwf	??_USBStdGetDscHandler& (0+255),c
  3167  000782  C047  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  3168  000786                     	if	1	;There is more than 1 active tblptr byte
  3169  000786  0E0F               	movlw	high __smallconst
  3170  000788  6EF7               	movwf	tblptrh,c
  3171  00078A                     	endif
  3172  00078A                     	if	0	;tblptru may be non-zero
  3173  00078A                     	endif
  3174  00078A                     	if	0	;tblptru may be non-zero
  3175  00078A                     	endif
  3176  00078A  0009               	tblrd		*+
  3177  00078C  CFF5 F020          	movff	tablat,_pSrc
  3178  000790  6E21               	movwf	_pSrc+1,c
  3179                           
  3180                           ; BSR set to: 4
  3181                           ;usb_device.c: 1384: wCount.Val = *pSrc.bRom;
  3182  000792  C020  FFF6         	movff	_pSrc,tblptrl
  3183  000796  C021  FFF7         	movff	_pSrc+1,tblptrh
  3184  00079A  6AF8               	clrf	tblptru,c
  3185  00079C  0E0E               	movlw	(high __ramtop+-1)
  3186  00079E  64F7               	cpfsgt	tblptrh,c
  3187  0007A0  D003               	bra	u1377
  3188  0007A2  0008               	tblrd		*
  3189  0007A4  50F5               	movf	tablat,w,c
  3190  0007A6  D002               	bra	u1370
  3191  0007A8                     u1377:
  3192  0007A8  EC57  F003         	call	PL10	;call to abstracted procedure
  3193  0007AC                     u1370:
  3194  0007AC  6E2B               	movwf	_wCount,c
  3195  0007AE  6A2C               	clrf	_wCount+1,c
  3196                           
  3197                           ;usb_device.c: 1385: break;
  3198  0007B0  D007               	goto	l402
  3199  0007B2                     l2569:
  3200                           
  3201                           ; BSR set to: 4
  3202  0007B2  5004               	movf	_SetupPkt+3,w,c
  3203                           
  3204                           ; Switch size 1, requested type "space"
  3205                           ; Number of cases is 3, Range of values is 1 to 3
  3206                           ; switch strategies available:
  3207                           ; Name         Instructions Cycles
  3208                           ; simple_byte           10     6 (average)
  3209                           ;	Chosen strategy is simple_byte
  3210  0007B4  0A01               	xorlw	1	; case 1
  3211  0007B6  E0CE               	bz	l2547
  3212  0007B8  0A03               	xorlw	3	; case 2
  3213  0007BA  E0D3               	bz	l2553
  3214  0007BC  0A01               	xorlw	1	; case 3
  3215  0007BE  E0DC               	bz	l2561
  3216  0007C0                     l402:
  3217                           
  3218                           ;usb_device.c: 1388: usb_stat.ctrl_trf_mem = 1;
  3219  0007C0  823B               	bsf	_usb_stat,1,c
  3220  0007C2  0012               	return		;funcret
  3221  0007C4                     __end_of_USBStdGetDscHandler:
  3222                           	opt stack 0
  3223                           stkptr	equ	0xFFC
  3224                           tblptru	equ	0xFF8
  3225                           tblptrh	equ	0xFF7
  3226                           tblptrl	equ	0xFF6
  3227                           tablat	equ	0xFF5
  3228                           prodh	equ	0xFF4
  3229                           prodl	equ	0xFF3
  3230                           intcon	equ	0xFF2
  3231                           wreg	equ	0xFE8
  3232                           indf1	equ	0xFE7
  3233                           fsr1h	equ	0xFE2
  3234                           fsr1l	equ	0xFE1
  3235                           indf2	equ	0xFDF
  3236                           postinc2	equ	0xFDE
  3237                           postdec2	equ	0xFDD
  3238                           plusw2	equ	0xFDB
  3239                           fsr2h	equ	0xFDA
  3240                           fsr2l	equ	0xFD9
  3241                           status	equ	0xFD8
  3242                           
  3243 ;; *************** function _USBStdFeatureReqHandler *****************
  3244 ;; Defined at:
  3245 ;;		line 1516 in file "../demo_src/usb_device.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;		None
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3254 ;; Tracked objects:
  3255 ;;		On entry : 3F/4
  3256 ;;		On exit  : 3F/4
  3257 ;;		Unchanged: 3F/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3261 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3262 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3263 ;;Total ram usage:        2 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_USBCheckStdRequest
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text15
  3273  0004EA                     __ptext15:
  3274                           	opt stack 0
  3275  0004EA                     _USBStdFeatureReqHandler:
  3276                           	opt stack 26
  3277                           
  3278                           ; BSR set to: 4
  3279                           ;usb_device.c: 1519: if((SetupPkt.bFeature == 0x01)&&(SetupPkt.Recipient == 0))
  3280                           
  3281                           ;incstack = 0
  3282  0004EA  0403               	decf	_SetupPkt+2,w,c
  3283  0004EC  E10B               	bnz	l2647
  3284                           
  3285                           ; BSR set to: 4
  3286  0004EE  5001               	movf	_SetupPkt,w,c
  3287  0004F0  0B1F               	andlw	31
  3288  0004F2  E108               	bnz	l2647
  3289                           
  3290                           ; BSR set to: 4
  3291                           ;usb_device.c: 1520: {
  3292                           ;usb_device.c: 1521: ctrl_trf_session_owner = 1;
  3293  0004F4  0E01               	movlw	1
  3294  0004F6  6E3E               	movwf	_ctrl_trf_session_owner,c
  3295                           
  3296                           ; BSR set to: 4
  3297                           ;usb_device.c: 1522: if(SetupPkt.bRequest == 3)
  3298  0004F8  0E03               	movlw	3
  3299  0004FA  1802               	xorwf	_SetupPkt+1,w,c
  3300  0004FC  E102               	bnz	l431
  3301                           
  3302                           ; BSR set to: 4
  3303                           ;usb_device.c: 1523: usb_stat.RemoteWakeup = 1;
  3304  0004FE  803B               	bsf	_usb_stat,0,c
  3305  000500  D001               	goto	l2647
  3306  000502                     l431:
  3307                           
  3308                           ; BSR set to: 4
  3309                           ;usb_device.c: 1524: else
  3310                           ;usb_device.c: 1525: usb_stat.RemoteWakeup = 0;
  3311  000502  903B               	bcf	_usb_stat,0,c
  3312  000504                     l2647:
  3313                           
  3314                           ; BSR set to: 4
  3315                           ;usb_device.c: 1526: }
  3316                           ;usb_device.c: 1529: if((SetupPkt.bFeature == 0x00)&&(SetupPkt.Recipient == 2)&&(SetupPk
      +                          t.EPNum != 0))
  3317  000504  5003               	movf	_SetupPkt+2,w,c
  3318  000506  A4D8               	btfss	status,2,c
  3319  000508  0012               	return	
  3320                           
  3321                           ; BSR set to: 4
  3322  00050A  5001               	movf	_SetupPkt,w,c
  3323  00050C  0B1F               	andlw	31
  3324  00050E  0A02               	xorlw	2
  3325  000510  A4D8               	btfss	status,2,c
  3326  000512  0012               	return	
  3327                           
  3328                           ; BSR set to: 4
  3329  000514  5005               	movf	_SetupPkt+4,w,c
  3330  000516  0B0F               	andlw	15
  3331  000518  B4D8               	btfsc	status,2,c
  3332  00051A  0012               	return	
  3333                           
  3334                           ; BSR set to: 4
  3335                           ;usb_device.c: 1530: {
  3336                           ;usb_device.c: 1531: ctrl_trf_session_owner = 1;
  3337                           
  3338                           ; BSR set to: 4
  3339                           ;usb_device.c: 1533: pDst.bRam = (uint8_t*)&ep0BoEven+(SetupPkt.EPNum*8)+(SetupPkt.EPDir
      +                          *4)+4;
  3340  00051C  D828               	call	PL22	;call to abstracted procedure
  3341  00051E  6A47               	clrf	??_USBStdFeatureReqHandler& (0+255),c
  3342  000520  0E04               	movlw	4
  3343  000522  6E48               	movwf	(??_USBStdFeatureReqHandler+1)& (0+255),c
  3344  000524  2647               	addwf	??_USBStdFeatureReqHandler,f,c
  3345  000526  0E00               	movlw	0
  3346  000528  2248               	addwfc	??_USBStdFeatureReqHandler+1,f,c
  3347  00052A  50F3               	movf	prodl,w,c
  3348  00052C  2647               	addwf	??_USBStdFeatureReqHandler,f,c
  3349  00052E  50F4               	movf	prodh,w,c
  3350  000530  2248               	addwfc	??_USBStdFeatureReqHandler+1,f,c
  3351  000532  D823               	call	PL28	;call to abstracted procedure
  3352  000534  2447               	addwf	??_USBStdFeatureReqHandler,w,c
  3353  000536  6E1D               	movwf	_pDst,c
  3354  000538  50F4               	movf	prodh,w,c
  3355  00053A  2048               	addwfc	??_USBStdFeatureReqHandler+1,w,c
  3356  00053C  6E1E               	movwf	_pDst+1,c
  3357                           
  3358                           ; BSR set to: 4
  3359                           ;usb_device.c: 1535: if(SetupPkt.bRequest == 3)
  3360  00053E  0E03               	movlw	3
  3361  000540  1802               	xorwf	_SetupPkt+1,w,c
  3362  000542  E105               	bnz	l434
  3363                           
  3364                           ; BSR set to: 4
  3365                           ;usb_device.c: 1536: {
  3366                           ;usb_device.c: 1537: *pDst.bRam = 0x04;
  3367  000544  D80F               	call	PL2	;call to abstracted procedure
  3368  000546  0E04               	movlw	4
  3369  000548  6EDF               	movwf	indf2,c
  3370                           
  3371                           ; BSR set to: 4
  3372                           ;usb_device.c: 1538: *pDst.bRam |= 0x80;
  3373  00054A  D80C               	call	PL2	;call to abstracted procedure
  3374                           
  3375                           ;usb_device.c: 1539: }
  3376  00054C  D01C               	goto	PL48	;call to abstracted procedure
  3377  00054E                     l434:
  3378                           
  3379                           ; BSR set to: 4
  3380                           ;usb_device.c: 1540: else
  3381                           ;usb_device.c: 1541: {
  3382                           ;usb_device.c: 1542: if(SetupPkt.EPDir == 1)
  3383  00054E  AE05               	btfss	_SetupPkt+4,7,c
  3384  000550  D004               	goto	l2665
  3385                           
  3386                           ; BSR set to: 4
  3387                           ;usb_device.c: 1543: *pDst.bRam = 0x00|0x40;
  3388  000552  D808               	call	PL2	;call to abstracted procedure
  3389  000554  0E40               	movlw	64
  3390  000556  6EDF               	movwf	indf2,c
  3391  000558  0C40               	retlw	64
  3392  00055A                     l2665:
  3393                           
  3394                           ; BSR set to: 4
  3395                           ;usb_device.c: 1544: else
  3396                           ;usb_device.c: 1545: {
  3397                           ;usb_device.c: 1546: *pDst.bRam = 0x00|0x08;
  3398  00055A  D804               	call	PL2	;call to abstracted procedure
  3399  00055C  0E08               	movlw	8
  3400  00055E  6EDF               	movwf	indf2,c
  3401                           
  3402                           ; BSR set to: 4
  3403                           ;usb_device.c: 1547: *pDst.bRam |= 0x80;
  3404  000560  D801               	call	PL2	;call to abstracted procedure
  3405                           
  3406                           ; BSR set to: 4
  3407  000562  D011               	goto	PL48	;call to abstracted procedure
  3408  000564                     __end_of_USBStdFeatureReqHandler:
  3409                           	opt stack 0
  3410  000564                     PL2:
  3411                           	opt stack 26
  3412  000564  C01D  FFD9         	movff	_pDst,fsr2l
  3413  000568  C01E  FFDA         	movff	_pDst+1,fsr2h
  3414  00056C  0012               	return	
  3415  00056E                     __end_ofPL2:
  3416                           	opt stack 0
  3417  00056E                     PL22:
  3418                           	opt stack 26
  3419  00056E  0E01               	movlw	1
  3420  000570  6E3E               	movwf	_ctrl_trf_session_owner,c
  3421  000572  5005               	movf	_SetupPkt+4,w,c
  3422  000574  0B0F               	andlw	15
  3423  000576  0D08               	mullw	8
  3424  000578  0012               	return	
  3425  00057A                     __end_ofPL22:
  3426                           	opt stack 0
  3427  00057A                     PL28:
  3428                           	opt stack 26
  3429  00057A  0E01               	movlw	1
  3430  00057C  AE05               	btfss	_SetupPkt+4,7,c
  3431  00057E  0E00               	movlw	0
  3432  000580  0D04               	mullw	4
  3433  000582  50F3               	movf	prodl,w,c
  3434  000584  0012               	return	
  3435  000586                     __end_ofPL28:
  3436                           	opt stack 0
  3437  000586                     PL48:
  3438                           	opt stack 26
  3439  000586  0E00               	movlw	0
  3440  000588  8EDB               	bsf	plusw2,7,c
  3441  00058A  0C00               	retlw	0
  3442  00058C                     __end_ofPL48:
  3443                           	opt stack 0
  3444                           stkptr	equ	0xFFC
  3445                           tblptru	equ	0xFF8
  3446                           tblptrh	equ	0xFF7
  3447                           tblptrl	equ	0xFF6
  3448                           tablat	equ	0xFF5
  3449                           prodh	equ	0xFF4
  3450                           prodl	equ	0xFF3
  3451                           intcon	equ	0xFF2
  3452                           wreg	equ	0xFE8
  3453                           indf1	equ	0xFE7
  3454                           fsr1h	equ	0xFE2
  3455                           fsr1l	equ	0xFE1
  3456                           indf2	equ	0xFDF
  3457                           postinc2	equ	0xFDE
  3458                           postdec2	equ	0xFDD
  3459                           plusw2	equ	0xFDB
  3460                           fsr2h	equ	0xFDA
  3461                           fsr2l	equ	0xFD9
  3462                           status	equ	0xFD8
  3463                           
  3464 ;; *************** function _USBCBCheckOtherReq *****************
  3465 ;; Defined at:
  3466 ;;		line 1072 in file "../demo_src/main.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;		None
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      void 
  3473 ;; Registers used:
  3474 ;;		wreg, status,2, status,0, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/4
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3484 ;;Total ram usage:        0 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    2
  3487 ;; This function calls:
  3488 ;;		_USBCheckHIDRequest
  3489 ;; This function is called by:
  3490 ;;		_USBCtrlTrfSetupHandler
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text16
  3495  000004                     __ptext16:
  3496                           	opt stack 0
  3497  000004                     _USBCBCheckOtherReq:
  3498                           	opt stack 25
  3499                           
  3500                           ;main.c: 1074: USBCheckHIDRequest();
  3501                           
  3502                           ; BSR set to: 4
  3503                           ;incstack = 0
  3504  000004  EFC5  F001         	goto	_USBCheckHIDRequest	;wreg free
  3505  000008                     __end_of_USBCBCheckOtherReq:
  3506                           	opt stack 0
  3507                           stkptr	equ	0xFFC
  3508                           tblptru	equ	0xFF8
  3509                           tblptrh	equ	0xFF7
  3510                           tblptrl	equ	0xFF6
  3511                           tablat	equ	0xFF5
  3512                           prodh	equ	0xFF4
  3513                           prodl	equ	0xFF3
  3514                           intcon	equ	0xFF2
  3515                           wreg	equ	0xFE8
  3516                           indf1	equ	0xFE7
  3517                           fsr1h	equ	0xFE2
  3518                           fsr1l	equ	0xFE1
  3519                           indf2	equ	0xFDF
  3520                           postinc2	equ	0xFDE
  3521                           postdec2	equ	0xFDD
  3522                           plusw2	equ	0xFDB
  3523                           fsr2h	equ	0xFDA
  3524                           fsr2l	equ	0xFD9
  3525                           status	equ	0xFD8
  3526                           
  3527 ;; *************** function _USBCheckHIDRequest *****************
  3528 ;; Defined at:
  3529 ;;		line 59 in file "../demo_src/usb_device_hid.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      void 
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/4
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3547 ;;Total ram usage:        0 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:    1
  3550 ;; This function calls:
  3551 ;;		_HIDGetReportHandler
  3552 ;;		_HIDSetReportHandler
  3553 ;; This function is called by:
  3554 ;;		_USBCBCheckOtherReq
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text17
  3559  00038A                     __ptext17:
  3560                           	opt stack 0
  3561  00038A                     _USBCheckHIDRequest:
  3562                           	opt stack 25
  3563                           
  3564                           ;usb_device_hid.c: 61: if(SetupPkt.Recipient != 1) return;
  3565                           
  3566                           ;incstack = 0
  3567  00038A  5001               	movf	_SetupPkt,w,c
  3568  00038C  0B1F               	andlw	31
  3569  00038E  06E8               	decf	wreg,f,c
  3570  000390  E001               	bz	l2391
  3571  000392  0012               	return	
  3572  000394                     l2391:
  3573                           
  3574                           ;usb_device_hid.c: 62: if(SetupPkt.bIntfID != 0x00) return;
  3575  000394  5005               	movf	_SetupPkt+4,w,c
  3576  000396  E001               	bz	l2395
  3577  000398  0012               	return	
  3578  00039A                     l2395:
  3579                           
  3580                           ;usb_device_hid.c: 69: if(SetupPkt.bRequest == 6)
  3581  00039A  0E06               	movlw	6
  3582  00039C  1802               	xorwf	_SetupPkt+1,w,c
  3583  00039E  E014               	bz	l2415
  3584  0003A0  D01A               	goto	l2417
  3585  0003A2                     l2399:
  3586                           
  3587                           ;usb_device_hid.c: 74: ctrl_trf_session_owner = 2;
  3588  0003A2  0E02               	movlw	2
  3589  0003A4  6E3E               	movwf	_ctrl_trf_session_owner,c
  3590                           
  3591                           ;usb_device_hid.c: 75: pSrc.bRom = &CFG01[18];
  3592  0003A6  0E4A               	movlw	low (_CFG01+18)
  3593  0003A8  D83F               	call	PL4	;call to abstracted procedure
  3594                           
  3595                           ;usb_device_hid.c: 76: wCount.Val = sizeof(USB_HID_DSC);
  3596  0003AA  6A2C               	clrf	_wCount+1,c
  3597  0003AC  0E09               	movlw	9
  3598  0003AE  D00A               	goto	L5
  3599  0003B0                     l2405:
  3600                           
  3601                           ;usb_device_hid.c: 79: ctrl_trf_session_owner = 2;
  3602  0003B0  0E02               	movlw	2
  3603  0003B2  6E3E               	movwf	_ctrl_trf_session_owner,c
  3604                           
  3605                           ;usb_device_hid.c: 80: { if(usb_active_cfg == 1) pSrc.bRom = (const uint8_t*)&hid_rpt01;
      +                           };
  3606  0003B4  0446               	decf	_usb_active_cfg,w,c
  3607  0003B6  E102               	bnz	l504
  3608  0003B8  0E87               	movlw	low _hid_rpt01
  3609  0003BA  D836               	call	PL4	;call to abstracted procedure
  3610  0003BC                     l504:
  3611                           
  3612                           ;usb_device_hid.c: 81: { if(usb_active_cfg == 1) wCount.Val = sizeof(hid_rpt01); };
  3613  0003BC  0446               	decf	_usb_active_cfg,w,c
  3614  0003BE  E10A               	bnz	l502
  3615  0003C0  6A2C               	clrf	_wCount+1,c
  3616  0003C2  0E1D               	movlw	29
  3617  0003C4                     L5:
  3618  0003C4  6E2B               	movwf	_wCount,c
  3619  0003C6  D006               	goto	l502
  3620  0003C8                     l2415:
  3621  0003C8  5004               	movf	_SetupPkt+3,w,c
  3622                           
  3623                           ; Switch size 1, requested type "space"
  3624                           ; Number of cases is 3, Range of values is 33 to 35
  3625                           ; switch strategies available:
  3626                           ; Name         Instructions Cycles
  3627                           ; simple_byte           10     6 (average)
  3628                           ;	Chosen strategy is simple_byte
  3629  0003CA  0A21               	xorlw	33	; case 33
  3630  0003CC  E0EA               	bz	l2399
  3631  0003CE  0A03               	xorlw	3	; case 34
  3632  0003D0  E0EF               	bz	l2405
  3633  0003D2  0A01               	xorlw	1	; case 35
  3634  0003D4                     l502:
  3635                           
  3636                           ;usb_device_hid.c: 87: usb_stat.ctrl_trf_mem = 1;
  3637  0003D4  823B               	bsf	_usb_stat,1,c
  3638  0003D6                     l2417:
  3639                           
  3640                           ;usb_device_hid.c: 88: }
  3641                           ;usb_device_hid.c: 90: if(SetupPkt.RequestType != 0x01) return;
  3642  0003D6  3801               	swapf	_SetupPkt,w,c
  3643  0003D8  32E8               	rrcf	wreg,f,c
  3644  0003DA  0B03               	andlw	3
  3645  0003DC  06E8               	decf	wreg,f,c
  3646  0003DE  E014               	bz	l2451
  3647  0003E0  0012               	return	
  3648  0003E2                     l2425:
  3649                           
  3650                           ;usb_device_hid.c: 100: ctrl_trf_session_owner = 2;
  3651  0003E2  0E02               	movlw	2
  3652  0003E4  6E3E               	movwf	_ctrl_trf_session_owner,c
  3653                           
  3654                           ;usb_device_hid.c: 101: pSrc.bRam = (uint8_t*)&idle_rate;
  3655  0003E6  0E44               	movlw	low _idle_rate
  3656  0003E8  6E20               	movwf	_pSrc,c
  3657                           
  3658                           ;usb_device_hid.c: 102: usb_stat.ctrl_trf_mem = 0;
  3659                           
  3660                           ;usb_device_hid.c: 103: wCount.v[0] = 1;
  3661                           
  3662                           ;usb_device_hid.c: 104: break;
  3663  0003EA  D024               	goto	PL24	;call to abstracted procedure
  3664  0003EC                     l2433:
  3665                           
  3666                           ;usb_device_hid.c: 106: ctrl_trf_session_owner = 2;
  3667  0003EC  0E02               	movlw	2
  3668  0003EE  6E3E               	movwf	_ctrl_trf_session_owner,c
  3669                           
  3670                           ;usb_device_hid.c: 108: idle_rate = SetupPkt.W_Value.v[1];
  3671  0003F0  C004  F044         	movff	_SetupPkt+3,_idle_rate
  3672                           
  3673                           ;usb_device_hid.c: 109: break;
  3674  0003F4  0C02               	retlw	2
  3675  0003F6                     l2437:
  3676                           
  3677                           ;usb_device_hid.c: 111: ctrl_trf_session_owner = 2;
  3678  0003F6  0E02               	movlw	2
  3679  0003F8  6E3E               	movwf	_ctrl_trf_session_owner,c
  3680                           
  3681                           ;usb_device_hid.c: 112: pSrc.bRam = (uint8_t*)&active_protocol;
  3682  0003FA  0E43               	movlw	low _active_protocol
  3683  0003FC  D7F5               	goto	L6
  3684  0003FE                     l2445:
  3685                           
  3686                           ;usb_device_hid.c: 117: ctrl_trf_session_owner = 2;
  3687  0003FE  0E02               	movlw	2
  3688  000400  6E3E               	movwf	_ctrl_trf_session_owner,c
  3689                           
  3690                           ;usb_device_hid.c: 119: active_protocol = SetupPkt.W_Value.v[0];
  3691  000402  C003  F043         	movff	_SetupPkt+2,_active_protocol
  3692                           
  3693                           ;usb_device_hid.c: 120: break;
  3694  000406  0C02               	retlw	2
  3695  000408                     l2451:
  3696  000408  5002               	movf	_SetupPkt+1,w,c
  3697                           
  3698                           ; Switch size 1, requested type "space"
  3699                           ; Number of cases is 6, Range of values is 1 to 11
  3700                           ; switch strategies available:
  3701                           ; Name         Instructions Cycles
  3702                           ; simple_byte           19    10 (average)
  3703                           ;	Chosen strategy is simple_byte
  3704  00040A  0A01               	xorlw	1	; case 1
  3705  00040C  B4D8               	btfsc	status,2,c
  3706  00040E  0012               	return	
  3707  000410  0A03               	xorlw	3	; case 2
  3708  000412  E0E7               	bz	l2425
  3709  000414  0A01               	xorlw	1	; case 3
  3710  000416  E0EF               	bz	l2437
  3711  000418  0A0A               	xorlw	10	; case 9
  3712  00041A  B4D8               	btfsc	status,2,c
  3713  00041C  0012               	return	
  3714  00041E  0A03               	xorlw	3	; case 10
  3715  000420  E0E5               	bz	l2433
  3716  000422  0A01               	xorlw	1	; case 11
  3717  000424  E0EC               	bz	l2445
  3718  000426  0012               	return		;funcret
  3719  000428                     __end_of_USBCheckHIDRequest:
  3720                           	opt stack 0
  3721  000428                     PL4:
  3722                           	opt stack 26
  3723  000428  6E20               	movwf	_pSrc,c
  3724  00042A  5020               	movf	_pSrc,w,c
  3725  00042C  A4D8               	btfss	status,2,c
  3726  00042E  0E0F               	movlw	high __smallconst
  3727  000430  6E21               	movwf	_pSrc+1,c
  3728  000432  0012               	return	
  3729  000434                     __end_ofPL4:
  3730                           	opt stack 0
  3731  000434                     PL24:
  3732                           	opt stack 24
  3733  000434  6A21               	clrf	_pSrc+1,c
  3734  000436  923B               	bcf	_usb_stat,1,c
  3735  000438  0E01               	movlw	1
  3736  00043A  6E2B               	movwf	_wCount,c
  3737  00043C  0C01               	retlw	1
  3738  00043E                     __end_ofPL24:
  3739                           	opt stack 0
  3740                           stkptr	equ	0xFFC
  3741                           tblptru	equ	0xFF8
  3742                           tblptrh	equ	0xFF7
  3743                           tblptrl	equ	0xFF6
  3744                           tablat	equ	0xFF5
  3745                           prodh	equ	0xFF4
  3746                           prodl	equ	0xFF3
  3747                           intcon	equ	0xFF2
  3748                           wreg	equ	0xFE8
  3749                           indf1	equ	0xFE7
  3750                           fsr1h	equ	0xFE2
  3751                           fsr1l	equ	0xFE1
  3752                           indf2	equ	0xFDF
  3753                           postinc2	equ	0xFDE
  3754                           postdec2	equ	0xFDD
  3755                           plusw2	equ	0xFDB
  3756                           fsr2h	equ	0xFDA
  3757                           fsr2l	equ	0xFD9
  3758                           status	equ	0xFD8
  3759                           
  3760 ;; *************** function _HIDSetReportHandler *****************
  3761 ;; Defined at:
  3762 ;;		line 130 in file "../demo_src/usb_device_hid.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		None
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/4
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3780 ;;Total ram usage:        0 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		_USBCheckHIDRequest
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text18
  3790  000CBE                     __ptext18:
  3791                           	opt stack 0
  3792  000CBE                     _HIDSetReportHandler:
  3793                           	opt stack 25
  3794                           
  3795                           ;incstack = 0
  3796  000CBE  0012               	return		;funcret
  3797  000CC0                     __end_of_HIDSetReportHandler:
  3798                           	opt stack 0
  3799                           stkptr	equ	0xFFC
  3800                           tblptru	equ	0xFF8
  3801                           tblptrh	equ	0xFF7
  3802                           tblptrl	equ	0xFF6
  3803                           tablat	equ	0xFF5
  3804                           prodh	equ	0xFF4
  3805                           prodl	equ	0xFF3
  3806                           intcon	equ	0xFF2
  3807                           wreg	equ	0xFE8
  3808                           indf1	equ	0xFE7
  3809                           fsr1h	equ	0xFE2
  3810                           fsr1l	equ	0xFE1
  3811                           indf2	equ	0xFDF
  3812                           postinc2	equ	0xFDE
  3813                           postdec2	equ	0xFDD
  3814                           plusw2	equ	0xFDB
  3815                           fsr2h	equ	0xFDA
  3816                           fsr2l	equ	0xFD9
  3817                           status	equ	0xFD8
  3818                           
  3819 ;; *************** function _HIDGetReportHandler *****************
  3820 ;; Defined at:
  3821 ;;		line 125 in file "../demo_src/usb_device_hid.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		None
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/4
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3839 ;;Total ram usage:        0 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; This function calls:
  3842 ;;		Nothing
  3843 ;; This function is called by:
  3844 ;;		_USBCheckHIDRequest
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text19
  3849  000CC0                     __ptext19:
  3850                           	opt stack 0
  3851  000CC0                     _HIDGetReportHandler:
  3852                           	opt stack 25
  3853                           
  3854                           ;incstack = 0
  3855  000CC0  0012               	return		;funcret
  3856  000CC2                     __end_of_HIDGetReportHandler:
  3857                           	opt stack 0
  3858                           stkptr	equ	0xFFC
  3859                           tblptru	equ	0xFF8
  3860                           tblptrh	equ	0xFF7
  3861                           tblptrl	equ	0xFF6
  3862                           tablat	equ	0xFF5
  3863                           prodh	equ	0xFF4
  3864                           prodl	equ	0xFF3
  3865                           intcon	equ	0xFF2
  3866                           wreg	equ	0xFE8
  3867                           indf1	equ	0xFE7
  3868                           fsr1h	equ	0xFE2
  3869                           fsr1l	equ	0xFE1
  3870                           indf2	equ	0xFDF
  3871                           postinc2	equ	0xFDE
  3872                           postdec2	equ	0xFDD
  3873                           plusw2	equ	0xFDB
  3874                           fsr2h	equ	0xFDA
  3875                           fsr2l	equ	0xFD9
  3876                           status	equ	0xFD8
  3877                           
  3878 ;; *************** function _USBCtrlTrfInHandler *****************
  3879 ;; Defined at:
  3880 ;;		line 993 in file "../demo_src/usb_device.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/F
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3898 ;;Total ram usage:        0 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    1
  3901 ;; This function calls:
  3902 ;;		_USBCtrlTrfTxService
  3903 ;; This function is called by:
  3904 ;;		_USBDeviceTasks
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text20
  3909  000A34                     __ptext20:
  3910                           	opt stack 0
  3911  000A34                     _USBCtrlTrfInHandler:
  3912                           	opt stack 27
  3913                           
  3914                           ;usb_device.c: 998: if(usb_device_state == 4)
  3915                           
  3916                           ;incstack = 0
  3917  000A34  0E04               	movlw	4
  3918  000A36  1842               	xorwf	_usb_device_state,w,c
  3919  000A38  E108               	bnz	l2869
  3920                           
  3921                           ;usb_device.c: 999: {
  3922                           ;usb_device.c: 1000: UADDR = SetupPkt.bDevADR;
  3923  000A3A  C003  FF38         	movff	_SetupPkt+2,3896	;volatile
  3924                           
  3925                           ;usb_device.c: 1001: if(UADDR > 0)
  3926  000A3E  010F               	movlb	15	; () banked
  3927  000A40  5138               	movf	56,w,b	;volatile
  3928                           
  3929                           ; BSR set to: 15
  3930                           ;usb_device.c: 1002: usb_device_state = 5;
  3931  000A42  0E05               	movlw	5
  3932  000A44  B4D8               	btfsc	status,2,c
  3933                           
  3934                           ; BSR set to: 15
  3935                           ;usb_device.c: 1003: else
  3936                           ;usb_device.c: 1004: usb_device_state = 3;
  3937  000A46  0E03               	movlw	3
  3938  000A48  6E42               	movwf	_usb_device_state,c
  3939  000A4A                     l2869:
  3940                           
  3941                           ;usb_device.c: 1005: }
  3942                           ;usb_device.c: 1009: if(ctrl_trf_state == 1)
  3943  000A4A  043F               	decf	_ctrl_trf_state,w,c
  3944  000A4C  A4D8               	btfss	status,2,c
  3945  000A4E  0012               	return	
  3946                           
  3947                           ;usb_device.c: 1010: {
  3948                           ;usb_device.c: 1013: USBCtrlTrfTxService();
  3949  000A50  EC15  F003         	call	_USBCtrlTrfTxService	;wreg free
  3950                           
  3951                           ;usb_device.c: 1016: if(short_pkt_status == 2)
  3952  000A54  0E02               	movlw	2
  3953  000A56  183D               	xorwf	_short_pkt_status,w,c
  3954  000A58  E102               	bnz	l342
  3955                           
  3956                           ;usb_device.c: 1017: {
  3957                           ;usb_device.c: 1020: ep0Bi.Stat._byte = 0x04;
  3958                           
  3959                           ; BSR set to: 4
  3960                           ;usb_device.c: 1021: ep0Bi.Stat._byte |= 0x80;
  3961  000A5A  D808               	call	PL34	;call to abstracted procedure
  3962                           
  3963                           ;usb_device.c: 1022: }
  3964  000A5C  0C04               	retlw	4
  3965  000A5E                     l342:
  3966                           
  3967                           ;usb_device.c: 1023: else
  3968                           ;usb_device.c: 1024: {
  3969                           ;usb_device.c: 1026: if(ep0Bi.Stat.DTS == 0)
  3970  000A5E  0104               	movlb	4	; () banked
  3971                           
  3972                           ; BSR set to: 4
  3973                           ;usb_device.c: 1027: ep0Bi.Stat._byte = 0x40|0x08;
  3974  000A60  0E48               	movlw	72
  3975  000A62  BD08               	btfsc	8,6,b	;volatile
  3976                           
  3977                           ; BSR set to: 4
  3978                           ;usb_device.c: 1028: else
  3979                           ;usb_device.c: 1029: ep0Bi.Stat._byte = 0x00|0x08;
  3980  000A64  0E08               	movlw	8
  3981  000A66  6F08               	movwf	8,b	;volatile
  3982                           
  3983                           ; BSR set to: 4
  3984                           ;usb_device.c: 1031: ep0Bi.Stat._byte |= 0x80;
  3985  000A68  8F08               	bsf	8,7,b	;volatile
  3986  000A6A  0012               	return		;funcret
  3987  000A6C                     __end_of_USBCtrlTrfInHandler:
  3988                           	opt stack 0
  3989  000A6C                     PL34:
  3990                           	opt stack 26
  3991  000A6C  0E04               	movlw	4
  3992  000A6E  0104               	movlb	4	; () banked
  3993  000A70  6F08               	movwf	8,b	;volatile
  3994  000A72  8F08               	bsf	8,7,b	;volatile
  3995  000A74  0C04               	retlw	4
  3996  000A76                     __end_ofPL34:
  3997                           	opt stack 0
  3998                           stkptr	equ	0xFFC
  3999                           tblptru	equ	0xFF8
  4000                           tblptrh	equ	0xFF7
  4001                           tblptrl	equ	0xFF6
  4002                           tablat	equ	0xFF5
  4003                           prodh	equ	0xFF4
  4004                           prodl	equ	0xFF3
  4005                           intcon	equ	0xFF2
  4006                           wreg	equ	0xFE8
  4007                           indf1	equ	0xFE7
  4008                           fsr1h	equ	0xFE2
  4009                           fsr1l	equ	0xFE1
  4010                           indf2	equ	0xFDF
  4011                           postinc2	equ	0xFDE
  4012                           postdec2	equ	0xFDD
  4013                           plusw2	equ	0xFDB
  4014                           fsr2h	equ	0xFDA
  4015                           fsr2l	equ	0xFD9
  4016                           status	equ	0xFD8
  4017                           
  4018 ;; *************** function _USBCtrlTrfTxService *****************
  4019 ;; Defined at:
  4020 ;;		line 1063 in file "../demo_src/usb_device.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;		None
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/4
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4038 ;;Total ram usage:        0 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; This function calls:
  4041 ;;		Nothing
  4042 ;; This function is called by:
  4043 ;;		_USBCtrlTrfInHandler
  4044 ;;		_USBCtrlEPServiceComplete
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text21
  4049  00062A                     __ptext21:
  4050                           	opt stack 0
  4051  00062A                     _USBCtrlTrfTxService:
  4052                           	opt stack 26
  4053                           
  4054                           ;usb_device.c: 1065: static uint8_t bytes_to_send;
  4055                           ;usb_device.c: 1070: bytes_to_send = 8;
  4056                           
  4057                           ;incstack = 0
  4058  00062A  0E08               	movlw	8
  4059  00062C  6E37               	movwf	USBCtrlTrfTxService@bytes_to_send,c
  4060                           
  4061                           ;usb_device.c: 1071: if(wCount.Val < 8)
  4062  00062E  502C               	movf	_wCount+1,w,c
  4063  000630  E10D               	bnz	l2513
  4064  000632  0E08               	movlw	8
  4065  000634  5C2B               	subwf	_wCount,w,c
  4066  000636  E20A               	bc	l2513
  4067                           
  4068                           ;usb_device.c: 1072: {
  4069                           ;usb_device.c: 1075: bytes_to_send = wCount.Val;
  4070  000638  C02B  F037         	movff	_wCount,USBCtrlTrfTxService@bytes_to_send
  4071                           
  4072                           ;usb_device.c: 1076: if(short_pkt_status == 0)
  4073  00063C  503D               	movf	_short_pkt_status,w,c
  4074  00063E  E102               	bnz	l2509
  4075                           
  4076                           ;usb_device.c: 1077: {
  4077                           ;usb_device.c: 1078: short_pkt_status = 1;
  4078  000640  0E01               	movlw	1
  4079  000642  D003               	goto	L9
  4080  000644                     l2509:
  4081                           
  4082                           ;usb_device.c: 1080: else if(short_pkt_status == 1)
  4083  000644  043D               	decf	_short_pkt_status,w,c
  4084  000646  E102               	bnz	l2513
  4085                           
  4086                           ;usb_device.c: 1081: {
  4087                           ;usb_device.c: 1082: short_pkt_status = 2;
  4088  000648  0E02               	movlw	2
  4089  00064A                     L9:
  4090  00064A  6E3D               	movwf	_short_pkt_status,c
  4091  00064C                     l2513:
  4092                           
  4093                           ;usb_device.c: 1083: }
  4094                           ;usb_device.c: 1084: }
  4095                           ;usb_device.c: 1087: ep0Bi.Cnt = bytes_to_send;
  4096  00064C  C037  F409         	movff	USBCtrlTrfTxService@bytes_to_send,1033	;volatile
  4097                           
  4098                           ;usb_device.c: 1090: wCount.Val -= bytes_to_send;
  4099  000650  5037               	movf	USBCtrlTrfTxService@bytes_to_send,w,c
  4100  000652  5E2B               	subwf	_wCount,f,c
  4101  000654  0E00               	movlw	0
  4102  000656  5A2C               	subwfb	_wCount+1,f,c
  4103                           
  4104                           ;usb_device.c: 1095: pDst.bRam = (uint8_t*)&CtrlTrfData;
  4105  000658  0E24               	movlw	36
  4106  00065A  6E1D               	movwf	_pDst,c
  4107  00065C  0E04               	movlw	4
  4108  00065E  6E1E               	movwf	_pDst+1,c
  4109                           
  4110                           ;usb_device.c: 1096: if(usb_stat.ctrl_trf_mem == 1)
  4111  000660  A23B               	btfss	_usb_stat,1,c
  4112  000662  D01E               	goto	l2541
  4113  000664  D00D               	goto	l2531
  4114  000666                     l2523:
  4115                           
  4116                           ;usb_device.c: 1099: {
  4117                           ;usb_device.c: 1100: *pDst.bRam = *pSrc.bRom;
  4118  000666  C020  FFF6         	movff	_pSrc,tblptrl
  4119  00066A  D81D               	call	PL6	;call to abstracted procedure
  4120  00066C  ECB2  F002         	call	PL2	;call to abstracted procedure
  4121  000670  0E0E               	movlw	(high __ramtop+-1)
  4122  000672  64F7               	cpfsgt	tblptrh,c
  4123  000674  D003               	bra	u1317
  4124  000676  0008               	tblrd		*
  4125  000678  50F5               	movf	tablat,w,c
  4126  00067A  D001               	bra	u1310
  4127  00067C                     u1317:
  4128  00067C  D818               	call	PL10	;call to abstracted procedure
  4129  00067E                     u1310:
  4130                           
  4131                           ;usb_device.c: 1101: pDst.bRam++;
  4132                           
  4133                           ;usb_device.c: 1102: pSrc.bRom++;
  4134                           
  4135                           ;usb_device.c: 1103: bytes_to_send--;
  4136  00067E  D81D               	call	PL18	;call to abstracted procedure
  4137  000680                     l2531:
  4138  000680  5037               	movf	USBCtrlTrfTxService@bytes_to_send,w,c
  4139  000682  E1F1               	bnz	l2523
  4140  000684  0012               	return	
  4141  000686                     l2533:
  4142                           
  4143                           ;usb_device.c: 1109: {
  4144                           ;usb_device.c: 1110: *pDst.bRam = *pSrc.bRam;
  4145  000686  C020  FFF6         	movff	_pSrc,tblptrl
  4146  00068A  D80D               	call	PL6	;call to abstracted procedure
  4147  00068C  ECB2  F002         	call	PL2	;call to abstracted procedure
  4148  000690  0E0E               	movlw	(high __ramtop+-1)
  4149  000692  64F7               	cpfsgt	tblptrh,c
  4150  000694  D003               	bra	u1337
  4151  000696  0008               	tblrd		*
  4152  000698  50F5               	movf	tablat,w,c
  4153  00069A  D001               	bra	u1330
  4154  00069C                     u1337:
  4155  00069C  D808               	call	PL10	;call to abstracted procedure
  4156  00069E                     u1330:
  4157                           
  4158                           ;usb_device.c: 1111: pDst.bRam++;
  4159                           
  4160                           ;usb_device.c: 1112: pSrc.bRam++;
  4161                           
  4162                           ;usb_device.c: 1113: bytes_to_send--;
  4163  00069E  D80D               	call	PL18	;call to abstracted procedure
  4164  0006A0                     l2541:
  4165  0006A0  5037               	movf	USBCtrlTrfTxService@bytes_to_send,w,c
  4166  0006A2  E1F1               	bnz	l2533
  4167  0006A4  0012               	return		;funcret
  4168  0006A6                     __end_of_USBCtrlTrfTxService:
  4169                           	opt stack 0
  4170  0006A6                     PL6:
  4171                           	opt stack 26
  4172  0006A6  C021  FFF7         	movff	_pSrc+1,tblptrh
  4173  0006AA  6AF8               	clrf	tblptru,c
  4174  0006AC  0012               	return	
  4175  0006AE                     __end_ofPL6:
  4176                           	opt stack 0
  4177  0006AE                     PL10:
  4178                           	opt stack 26
  4179  0006AE  CFF6 FFE1          	movff	tblptrl,fsr1l
  4180  0006B2  CFF7 FFE2          	movff	tblptrh,fsr1h
  4181  0006B6  50E7               	movf	indf1,w,c
  4182  0006B8  0012               	return	
  4183  0006BA                     __end_ofPL10:
  4184                           	opt stack 0
  4185  0006BA                     PL18:
  4186                           	opt stack 26
  4187  0006BA  6EDF               	movwf	indf2,c
  4188  0006BC  4A1D               	infsnz	_pDst,f,c
  4189  0006BE  2A1E               	incf	_pDst+1,f,c
  4190  0006C0  4A20               	infsnz	_pSrc,f,c
  4191  0006C2  2A21               	incf	_pSrc+1,f,c
  4192  0006C4  0637               	decf	USBCtrlTrfTxService@bytes_to_send,f,c
  4193  0006C6  0012               	return	
  4194  0006C8                     __end_ofPL18:
  4195                           	opt stack 0
  4196                           stkptr	equ	0xFFC
  4197                           tblptru	equ	0xFF8
  4198                           tblptrh	equ	0xFF7
  4199                           tblptrl	equ	0xFF6
  4200                           tablat	equ	0xFF5
  4201                           prodh	equ	0xFF4
  4202                           prodl	equ	0xFF3
  4203                           intcon	equ	0xFF2
  4204                           wreg	equ	0xFE8
  4205                           indf1	equ	0xFE7
  4206                           fsr1h	equ	0xFE2
  4207                           fsr1l	equ	0xFE1
  4208                           indf2	equ	0xFDF
  4209                           postinc2	equ	0xFDE
  4210                           postdec2	equ	0xFDD
  4211                           plusw2	equ	0xFDB
  4212                           fsr2h	equ	0xFDA
  4213                           fsr2l	equ	0xFD9
  4214                           status	equ	0xFD8
  4215                           
  4216 ;; *************** function _SignFlash *****************
  4217 ;; Defined at:
  4218 ;;		line 487 in file "../demo_src/boot_18fxxjxx.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;		None
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  pROM            3    8[COMRAM] PTR  unsigned char 
  4223 ;;		 -> ROM(65527), 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4234 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4235 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4236 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4237 ;;Total ram usage:        4 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    3
  4240 ;; This function calls:
  4241 ;;		_ClearWatchdog
  4242 ;;		_EraseFlashPage
  4243 ;;		_UnlockAndActivate
  4244 ;; This function is called by:
  4245 ;;		_ProcessIO
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           	psect	text22
  4250  00043E                     __ptext22:
  4251                           	opt stack 0
  4252  00043E                     _SignFlash:
  4253                           	opt stack 25
  4254                           
  4255                           ;boot_18fxxjxx.c: 489: static unsigned int i;
  4256                           ;boot_18fxxjxx.c: 490: far const uint8_t* pROM;
  4257                           ;boot_18fxxjxx.c: 494: pROM = (far const uint8_t*)(0x1006 & (uint32_t)(0x1000000 - 1024)
      +                          );
  4258                           
  4259                           ;incstack = 0
  4260  00043E  6A4F               	clrf	SignFlash@pROM,c
  4261  000440  0E10               	movlw	16
  4262  000442  6E50               	movwf	SignFlash@pROM+1,c
  4263  000444  6A51               	clrf	SignFlash@pROM+2,c
  4264                           
  4265                           ;boot_18fxxjxx.c: 495: for(i = 0; i < 1024; i++)
  4266  000446  6A23               	clrf	SignFlash@i,c
  4267  000448  6A24               	clrf	SignFlash@i+1,c
  4268  00044A                     l3049:
  4269                           
  4270                           ;boot_18fxxjxx.c: 496: {
  4271                           ;boot_18fxxjxx.c: 497: ProgrammingBuffer[i] = *pROM++;
  4272  00044A  C04F  FFF6         	movff	SignFlash@pROM,tblptrl
  4273  00044E  C050  FFF7         	movff	SignFlash@pROM+1,tblptrh
  4274  000452  C051  FFF8         	movff	SignFlash@pROM+2,tblptru
  4275  000456  D842               	call	PL20	;call to abstracted procedure
  4276  000458  0008               	tblrd		*
  4277  00045A  CFF5 FFDF          	movff	tablat,indf2
  4278  00045E  2A4F               	incf	SignFlash@pROM,f,c
  4279  000460  0E00               	movlw	0
  4280  000462  2250               	addwfc	SignFlash@pROM+1,f,c
  4281  000464  2251               	addwfc	SignFlash@pROM+2,f,c
  4282  000466  4A23               	infsnz	SignFlash@i,f,c
  4283  000468  2A24               	incf	SignFlash@i+1,f,c
  4284  00046A  0E04               	movlw	4
  4285  00046C  5C24               	subwf	SignFlash@i+1,w,c
  4286  00046E  E3ED               	bnc	l3049
  4287                           
  4288                           ;boot_18fxxjxx.c: 498: }
  4289                           ;boot_18fxxjxx.c: 501: ProgrammingBuffer[(0x1006 & ~(uint32_t)(0x1000000 - 1024))] = (un
      +                          signed char)0x600D;
  4290  000470  0E0D               	movlw	13
  4291  000472  CFE8 F4B2          	movff	wreg,_ProgrammingBuffer+6
  4292                           
  4293                           ;boot_18fxxjxx.c: 502: ProgrammingBuffer[(0x1006 & ~(uint32_t)(0x1000000 - 1024)) + 1] =
      +                           (unsigned char)(0x600D >> 8);
  4294  000476  0E60               	movlw	96
  4295  000478  CFE8 F4B3          	movff	wreg,_ProgrammingBuffer+7
  4296                           
  4297                           ;boot_18fxxjxx.c: 505: EraseFlashPage(0x1006 / 1024);
  4298  00047C  0E00               	movlw	0
  4299  00047E  6E49               	movwf	EraseFlashPage@PageNumToErase+1,c
  4300  000480  0E04               	movlw	4
  4301  000482  6E48               	movwf	EraseFlashPage@PageNumToErase,c
  4302  000484  ECAA  F004         	call	_EraseFlashPage	;wreg free
  4303                           
  4304                           ;boot_18fxxjxx.c: 513: pROM = (far const uint8_t*)((0x1006 & (uint32_t)(0x1000000 - 1024
      +                          )) + 1024 - 1);
  4305  000488  684F               	setf	SignFlash@pROM,c
  4306  00048A  0E13               	movlw	19
  4307  00048C  6E50               	movwf	SignFlash@pROM+1,c
  4308  00048E  6A51               	clrf	SignFlash@pROM+2,c
  4309                           
  4310                           ;boot_18fxxjxx.c: 515: i = 1024 - 1;
  4311  000490  0E03               	movlw	3
  4312  000492  6E24               	movwf	SignFlash@i+1,c
  4313  000494  6823               	setf	SignFlash@i,c
  4314  000496                     l3063:
  4315                           
  4316                           ;boot_18fxxjxx.c: 517: {
  4317                           ;boot_18fxxjxx.c: 519: TBLPTRU = (uint32_t)pROM >> 16;
  4318  000496  C051  FFF8         	movff	SignFlash@pROM+2,tblptru	;volatile
  4319                           
  4320                           ;boot_18fxxjxx.c: 520: TBLPTRH = (uint16_t)pROM >> 8;
  4321  00049A  C050  FFF7         	movff	SignFlash@pROM+1,tblptrh	;volatile
  4322                           
  4323                           ;boot_18fxxjxx.c: 521: TBLPTRL = (uint8_t)pROM;
  4324  00049E  C04F  FFF6         	movff	SignFlash@pROM,tblptrl	;volatile
  4325                           
  4326                           ;boot_18fxxjxx.c: 525: TABLAT = ProgrammingBuffer[i];
  4327  0004A2  D81C               	call	PL20	;call to abstracted procedure
  4328  0004A4  50DF               	movf	indf2,w,c
  4329  0004A6  6EF5               	movwf	tablat,c	;volatile
  4330  0004A8  000C               	tblwt		*	;# 
  4331                           
  4332                           ;boot_18fxxjxx.c: 536: if((i % 64) == 0)
  4333  0004AA  C023  F04E         	movff	SignFlash@i,??_SignFlash
  4334  0004AE  0E3F               	movlw	63
  4335  0004B0  164E               	andwf	??_SignFlash,f,c
  4336  0004B2  E107               	bnz	l3079
  4337                           
  4338                           ;boot_18fxxjxx.c: 537: {
  4339                           ;boot_18fxxjxx.c: 539: ClearWatchdog();
  4340  0004B4  EC5D  F006         	call	_ClearWatchdog	;wreg free
  4341                           
  4342                           ;boot_18fxxjxx.c: 540: EECON1 = 0x04;
  4343  0004B8  0E04               	movlw	4
  4344  0004BA  6EA6               	movwf	4006,c	;volsfr
  4345                           
  4346                           ;boot_18fxxjxx.c: 541: UnlockAndActivate(0xB5);
  4347  0004BC  0EB5               	movlw	181
  4348  0004BE  ECBE  F005         	call	_UnlockAndActivate
  4349  0004C2                     l3079:
  4350                           
  4351                           ;boot_18fxxjxx.c: 542: }
  4352                           ;boot_18fxxjxx.c: 544: pROM--;
  4353  0004C2  064F               	decf	SignFlash@pROM,f,c
  4354  0004C4  0E00               	movlw	0
  4355  0004C6  5A50               	subwfb	SignFlash@pROM+1,f,c
  4356  0004C8  5A51               	subwfb	SignFlash@pROM+2,f,c
  4357  0004CA  000A               	tblrd		*-	;# 
  4358                           
  4359                           ;boot_18fxxjxx.c: 554: if(i == 0)
  4360  0004CC  5023               	movf	SignFlash@i,w,c
  4361  0004CE  1024               	iorwf	SignFlash@i+1,w,c
  4362  0004D0  E101               	bnz	l3085
  4363  0004D2  0012               	return	
  4364  0004D4                     l3085:
  4365                           
  4366                           ;boot_18fxxjxx.c: 557: }
  4367                           ;boot_18fxxjxx.c: 558: i--;
  4368  0004D4  0623               	decf	SignFlash@i,f,c
  4369  0004D6  A0D8               	btfss	status,0,c
  4370  0004D8  0624               	decf	SignFlash@i+1,f,c
  4371  0004DA  D7DD               	goto	l3063
  4372  0004DC                     __end_of_SignFlash:
  4373                           	opt stack 0
  4374  0004DC                     PL20:
  4375                           	opt stack 25
  4376  0004DC  0EAC               	movlw	low _ProgrammingBuffer
  4377  0004DE  2423               	addwf	SignFlash@i,w,c
  4378  0004E0  6ED9               	movwf	fsr2l,c
  4379  0004E2  0E04               	movlw	high _ProgrammingBuffer
  4380  0004E4  2024               	addwfc	SignFlash@i+1,w,c
  4381  0004E6  6EDA               	movwf	fsr2h,c
  4382  0004E8  0012               	return	
  4383  0004EA                     __end_ofPL20:
  4384                           	opt stack 0
  4385                           stkptr	equ	0xFFC
  4386                           tblptru	equ	0xFF8
  4387                           tblptrh	equ	0xFF7
  4388                           tblptrl	equ	0xFF6
  4389                           tablat	equ	0xFF5
  4390                           prodh	equ	0xFF4
  4391                           prodl	equ	0xFF3
  4392                           intcon	equ	0xFF2
  4393                           wreg	equ	0xFE8
  4394                           indf1	equ	0xFE7
  4395                           fsr1h	equ	0xFE2
  4396                           fsr1l	equ	0xFE1
  4397                           indf2	equ	0xFDF
  4398                           postinc2	equ	0xFDE
  4399                           postdec2	equ	0xFDD
  4400                           plusw2	equ	0xFDB
  4401                           fsr2h	equ	0xFDA
  4402                           fsr2l	equ	0xFD9
  4403                           status	equ	0xFD8
  4404                           
  4405 ;; *************** function _EraseFlashPage *****************
  4406 ;; Defined at:
  4407 ;;		line 692 in file "../demo_src/boot_18fxxjxx.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;  PageNumToEra    2    1[COMRAM] unsigned int 
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0, cstack
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4423 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4424 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4425 ;;Total ram usage:        6 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:    2
  4428 ;; This function calls:
  4429 ;;		_UnlockAndActivate
  4430 ;; This function is called by:
  4431 ;;		_ProcessIO
  4432 ;;		_SignFlash
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           	psect	text23
  4437  000954                     __ptext23:
  4438                           	opt stack 0
  4439  000954                     _EraseFlashPage:
  4440                           	opt stack 25
  4441                           
  4442                           ;boot_18fxxjxx.c: 694: static uint32_t TablePointerValue;
  4443                           ;boot_18fxxjxx.c: 697: if(PageNumToErase < ((uint32_t)0x1000/1024))
  4444                           
  4445                           ;incstack = 0
  4446  000954  5049               	movf	EraseFlashPage@PageNumToErase+1,w,c
  4447  000956  E106               	bnz	l2889
  4448  000958  0E04               	movlw	4
  4449  00095A  5C48               	subwf	EraseFlashPage@PageNumToErase,w,c
  4450  00095C  E203               	bc	l2889
  4451                           
  4452                           ;boot_18fxxjxx.c: 698: PageNumToErase = ((uint32_t)0x1000/1024);
  4453  00095E  6A49               	clrf	EraseFlashPage@PageNumToErase+1,c
  4454  000960  0E04               	movlw	4
  4455  000962  6E48               	movwf	EraseFlashPage@PageNumToErase,c
  4456  000964                     l2889:
  4457                           
  4458                           ;boot_18fxxjxx.c: 702: TablePointerValue = 1024 * (uint32_t)PageNumToErase;
  4459  000964  5048               	movf	EraseFlashPage@PageNumToErase,w,c
  4460  000966  6E4A               	movwf	??_EraseFlashPage& (0+255),c
  4461  000968  5049               	movf	EraseFlashPage@PageNumToErase+1,w,c
  4462  00096A  6E4B               	movwf	(??_EraseFlashPage+1)& (0+255),c
  4463  00096C  6A4C               	clrf	(??_EraseFlashPage+2)& (0+255),c
  4464  00096E  6A4D               	clrf	(??_EraseFlashPage+3)& (0+255),c
  4465  000970  0E0A               	movlw	10
  4466  000972                     u1775:
  4467  000972  90D8               	bcf	status,0,c
  4468  000974  364A               	rlcf	??_EraseFlashPage,f,c
  4469  000976  364B               	rlcf	??_EraseFlashPage+1,f,c
  4470  000978  364C               	rlcf	??_EraseFlashPage+2,f,c
  4471  00097A  364D               	rlcf	??_EraseFlashPage+3,f,c
  4472  00097C  2EE8               	decfsz	wreg,f,c
  4473  00097E  D7F9               	goto	u1775
  4474  000980  C04A  F009         	movff	??_EraseFlashPage,EraseFlashPage@TablePointerValue
  4475  000984  C04B  F00A         	movff	??_EraseFlashPage+1,EraseFlashPage@TablePointerValue+1
  4476  000988  C04C  F00B         	movff	??_EraseFlashPage+2,EraseFlashPage@TablePointerValue+2
  4477  00098C  C04D  F00C         	movff	??_EraseFlashPage+3,EraseFlashPage@TablePointerValue+3
  4478                           
  4479                           ;boot_18fxxjxx.c: 703: TBLPTRU = TablePointerValue >> 16;
  4480  000990  C00B  FFF8         	movff	EraseFlashPage@TablePointerValue+2,tblptru	;volatile
  4481                           
  4482                           ;boot_18fxxjxx.c: 704: TBLPTRH = TablePointerValue >> 8;
  4483  000994  C00A  FFF7         	movff	EraseFlashPage@TablePointerValue+1,tblptrh	;volatile
  4484                           
  4485                           ;boot_18fxxjxx.c: 705: TBLPTRL = 0x00;
  4486  000998  6AF6               	clrf	tblptrl,c	;volatile
  4487                           
  4488                           ;boot_18fxxjxx.c: 711: EECON1 = 0b00010100;
  4489  00099A  0E14               	movlw	20
  4490  00099C  6EA6               	movwf	4006,c	;volsfr
  4491                           
  4492                           ;boot_18fxxjxx.c: 712: UnlockAndActivate(0xB5);
  4493  00099E  0EB5               	movlw	181
  4494  0009A0  EFBE  F005         	goto	_UnlockAndActivate
  4495  0009A4                     __end_of_EraseFlashPage:
  4496                           	opt stack 0
  4497                           stkptr	equ	0xFFC
  4498                           tblptru	equ	0xFF8
  4499                           tblptrh	equ	0xFF7
  4500                           tblptrl	equ	0xFF6
  4501                           tablat	equ	0xFF5
  4502                           prodh	equ	0xFF4
  4503                           prodl	equ	0xFF3
  4504                           intcon	equ	0xFF2
  4505                           wreg	equ	0xFE8
  4506                           indf1	equ	0xFE7
  4507                           fsr1h	equ	0xFE2
  4508                           fsr1l	equ	0xFE1
  4509                           indf2	equ	0xFDF
  4510                           postinc2	equ	0xFDE
  4511                           postdec2	equ	0xFDD
  4512                           plusw2	equ	0xFDB
  4513                           fsr2h	equ	0xFDA
  4514                           fsr2l	equ	0xFD9
  4515                           status	equ	0xFD8
  4516                           
  4517 ;; *************** function _UnlockAndActivate *****************
  4518 ;; Defined at:
  4519 ;;		line 646 in file "../demo_src/boot_18fxxjxx.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;  UnlockKey       1    wreg     unsigned char 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  UnlockKey       1    0[COMRAM] unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      void 
  4526 ;; Registers used:
  4527 ;;		wreg, status,2, status,0, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4537 ;;Total ram usage:        1 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    1
  4540 ;; This function calls:
  4541 ;;		_LowVoltageCheck
  4542 ;; This function is called by:
  4543 ;;		_SignFlash
  4544 ;;		_WriteFlashSubBlock
  4545 ;;		_EraseFlashPage
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text24
  4550  000B7C                     __ptext24:
  4551                           	opt stack 0
  4552  000B7C                     _UnlockAndActivate:
  4553                           	opt stack 26
  4554                           
  4555                           ;incstack = 0
  4556                           ;UnlockAndActivate@UnlockKey stored from wreg
  4557  000B7C  6E47               	movwf	UnlockAndActivate@UnlockKey,c
  4558                           
  4559                           ;boot_18fxxjxx.c: 648: INTCONbits.GIE = 0;
  4560  000B7E  9EF2               	bcf	intcon,7,c	;volatile
  4561                           
  4562                           ;boot_18fxxjxx.c: 651: LowVoltageCheck();
  4563  000B80  EC78  F005         	call	_LowVoltageCheck	;wreg free
  4564                           
  4565                           ;boot_18fxxjxx.c: 655: if(UnlockKey != 0xB5)
  4566  000B84  0EB5               	movlw	181
  4567  000B86  1847               	xorwf	UnlockAndActivate@UnlockKey,w,c
  4568  000B88  E004               	bz	l2803
  4569                           
  4570                           ;boot_18fxxjxx.c: 656: {
  4571                           ;boot_18fxxjxx.c: 664: OSCCON = 0x03;
  4572  000B8A  0E03               	movlw	3
  4573  000B8C  6ED3               	movwf	4051,c	;volatile
  4574  000B8E                     l679:
  4575  000B8E  0003               	sleep		;# 
  4576  000B90  D7FE               	goto	l679
  4577  000B92                     l2803:
  4578                           
  4579                           ;boot_18fxxjxx.c: 670: }
  4580                           ;boot_18fxxjxx.c: 673: EECON2 = 0x55;
  4581  000B92  0E55               	movlw	85
  4582  000B94  6EA7               	movwf	4007,c	;volsfr
  4583                           
  4584                           ;boot_18fxxjxx.c: 674: EECON2 = 0xAA;
  4585  000B96  0EAA               	movlw	170
  4586  000B98  6EA7               	movwf	4007,c	;volsfr
  4587                           
  4588                           ;boot_18fxxjxx.c: 675: EECON1bits.WR = 1;
  4589  000B9A  82A6               	bsf	4006,1,c	;volsfr
  4590  000B9C                     l682:
  4591  000B9C  B2A6               	btfsc	4006,1,c	;volsfr
  4592  000B9E  D7FE               	goto	l682
  4593                           
  4594                           ;boot_18fxxjxx.c: 688: EECON1bits.WREN = 0;
  4595  000BA0  94A6               	bcf	4006,2,c	;volsfr
  4596  000BA2  0012               	return		;funcret
  4597  000BA4                     __end_of_UnlockAndActivate:
  4598                           	opt stack 0
  4599                           stkptr	equ	0xFFC
  4600                           tblptru	equ	0xFF8
  4601                           tblptrh	equ	0xFF7
  4602                           tblptrl	equ	0xFF6
  4603                           tablat	equ	0xFF5
  4604                           prodh	equ	0xFF4
  4605                           prodl	equ	0xFF3
  4606                           intcon	equ	0xFF2
  4607                           wreg	equ	0xFE8
  4608                           indf1	equ	0xFE7
  4609                           fsr1h	equ	0xFE2
  4610                           fsr1l	equ	0xFE1
  4611                           indf2	equ	0xFDF
  4612                           postinc2	equ	0xFDE
  4613                           postdec2	equ	0xFDD
  4614                           plusw2	equ	0xFDB
  4615                           fsr2h	equ	0xFDA
  4616                           fsr2l	equ	0xFD9
  4617                           status	equ	0xFD8
  4618                           
  4619 ;; *************** function _LowVoltageCheck *****************
  4620 ;; Defined at:
  4621 ;;		line 785 in file "../demo_src/main.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;		None
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      void 
  4628 ;; Registers used:
  4629 ;;		wreg, status,2, status,0
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/F
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4639 ;;Total ram usage:        0 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; This function calls:
  4642 ;;		Nothing
  4643 ;; This function is called by:
  4644 ;;		_BootMain
  4645 ;;		_UnlockAndActivate
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text25
  4650  000AF0                     __ptext25:
  4651                           	opt stack 0
  4652  000AF0                     _LowVoltageCheck:
  4653                           	opt stack 26
  4654                           
  4655                           ;main.c: 791: if(WDTCONbits.LVDSTAT == 0)
  4656                           
  4657                           ;incstack = 0
  4658  000AF0  BCC0               	btfsc	4032,6,c	;volatile
  4659  000AF2  0012               	return	
  4660                           
  4661                           ;main.c: 792: {
  4662                           ;main.c: 796: OSCCON = 0x03;
  4663  000AF4  0E03               	movlw	3
  4664  000AF6  6ED3               	movwf	4051,c	;volatile
  4665                           
  4666                           ;main.c: 797: UCONbits.SUSPND = 0;
  4667  000AF8  9265               	bcf	3941,1,c	;volatile
  4668                           
  4669                           ;main.c: 798: UCONbits.USBEN = 0;
  4670  000AFA  9665               	bcf	3941,3,c	;volatile
  4671                           
  4672                           ;main.c: 799: INTCON = 0x00;
  4673  000AFC  6AF2               	clrf	intcon,c	;volatile
  4674                           
  4675                           ;main.c: 802: uint_delay_counter = 0x400;
  4676  000AFE  D80E               	call	PL44	;call to abstracted procedure
  4677                           
  4678                           ;main.c: 803: while(uint_delay_counter)
  4679  000B00  D008               	goto	l2385
  4680  000B02                     l88:
  4681                           
  4682                           ;main.c: 804: {
  4683                           ;main.c: 805: if(WDTCONbits.LVDSTAT == 1)
  4684  000B02  ACC0               	btfss	4032,6,c	;volatile
  4685  000B04  D004               	goto	l2383
  4686                           
  4687                           ;main.c: 806: {
  4688                           ;main.c: 807: uint_delay_counter--;
  4689  000B06  062F               	decf	_uint_delay_counter,f,c
  4690  000B08  A0D8               	btfss	status,0,c
  4691  000B0A  0630               	decf	_uint_delay_counter+1,f,c
  4692                           
  4693                           ;main.c: 808: }
  4694  000B0C  D001               	goto	l90
  4695  000B0E                     l2383:
  4696                           
  4697                           ;main.c: 809: else
  4698                           ;main.c: 810: {
  4699                           ;main.c: 811: uint_delay_counter = 0x400;
  4700  000B0E  D806               	call	PL44	;call to abstracted procedure
  4701  000B10                     l90:
  4702  000B10  0004               	clrwdt		;# 
  4703  000B12                     l2385:
  4704  000B12  502F               	movf	_uint_delay_counter,w,c
  4705  000B14  1030               	iorwf	_uint_delay_counter+1,w,c
  4706  000B16  E1F5               	bnz	l88
  4707  000B18  00FF               	reset		;# 
  4708  000B1A  0012               	return		;funcret
  4709  000B1C                     __end_of_LowVoltageCheck:
  4710                           	opt stack 0
  4711  000B1C                     PL44:
  4712                           	opt stack 26
  4713  000B1C  0E04               	movlw	4
  4714  000B1E  6E30               	movwf	_uint_delay_counter+1,c
  4715  000B20  6A2F               	clrf	_uint_delay_counter,c
  4716  000B22  0C04               	retlw	4
  4717  000B24                     __end_ofPL44:
  4718                           	opt stack 0
  4719                           stkptr	equ	0xFFC
  4720                           tblptru	equ	0xFF8
  4721                           tblptrh	equ	0xFF7
  4722                           tblptrl	equ	0xFF6
  4723                           tablat	equ	0xFF5
  4724                           prodh	equ	0xFF4
  4725                           prodl	equ	0xFF3
  4726                           intcon	equ	0xFF2
  4727                           wreg	equ	0xFE8
  4728                           indf1	equ	0xFE7
  4729                           fsr1h	equ	0xFE2
  4730                           fsr1l	equ	0xFE1
  4731                           indf2	equ	0xFDF
  4732                           postinc2	equ	0xFDE
  4733                           postdec2	equ	0xFDD
  4734                           plusw2	equ	0xFDB
  4735                           fsr2h	equ	0xFDA
  4736                           fsr2l	equ	0xFD9
  4737                           status	equ	0xFD8
  4738                           
  4739 ;; *************** function _ResetDeviceCleanly *****************
  4740 ;; Defined at:
  4741 ;;		line 572 in file "../demo_src/boot_18fxxjxx.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, status,2, status,0, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4759 ;;Total ram usage:        0 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    3
  4762 ;; This function calls:
  4763 ;;		_USBDisableWithLongDelay
  4764 ;; This function is called by:
  4765 ;;		_ProcessIO
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text26
  4770  00000C                     __ptext26:
  4771                           	opt stack 0
  4772  00000C                     _ResetDeviceCleanly:
  4773                           	opt stack 25
  4774                           
  4775                           ;boot_18fxxjxx.c: 574: USBDisableWithLongDelay();
  4776                           
  4777                           ;incstack = 0
  4778  00000C  EC3C  F006         	call	_USBDisableWithLongDelay	;wreg free
  4779  000010  00FF               	reset		;# 
  4780                           
  4781                           ;boot_18fxxjxx.c: 576: __nop();
  4782  000012  F000               	nop	
  4783                           
  4784                           ;boot_18fxxjxx.c: 577: __nop();
  4785  000014  F000               	nop	
  4786  000016  0012               	return		;funcret
  4787  000018                     __end_of_ResetDeviceCleanly:
  4788                           	opt stack 0
  4789                           stkptr	equ	0xFFC
  4790                           tblptru	equ	0xFF8
  4791                           tblptrh	equ	0xFF7
  4792                           tblptrl	equ	0xFF6
  4793                           tablat	equ	0xFF5
  4794                           prodh	equ	0xFF4
  4795                           prodl	equ	0xFF3
  4796                           intcon	equ	0xFF2
  4797                           wreg	equ	0xFE8
  4798                           indf1	equ	0xFE7
  4799                           fsr1h	equ	0xFE2
  4800                           fsr1l	equ	0xFE1
  4801                           indf2	equ	0xFDF
  4802                           postinc2	equ	0xFDE
  4803                           postdec2	equ	0xFDD
  4804                           plusw2	equ	0xFDB
  4805                           fsr2h	equ	0xFDA
  4806                           fsr2l	equ	0xFD9
  4807                           status	equ	0xFD8
  4808                           
  4809 ;; *************** function _HIDTxReport *****************
  4810 ;; Defined at:
  4811 ;;		line 215 in file "../demo_src/usb_device_hid.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  buffer          1    0[COMRAM] PTR unsigned char 
  4814 ;;		 -> PacketToPC(65), 
  4815 ;;  len             1    1[COMRAM] unsigned char 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  i               1    3[COMRAM] unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/4
  4824 ;;		On exit  : 3F/4
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4830 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4831 ;;Total ram usage:        4 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_ProcessIO
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           	psect	text27
  4841  0008A0                     __ptext27:
  4842                           	opt stack 0
  4843  0008A0                     _HIDTxReport:
  4844                           	opt stack 28
  4845                           
  4846                           ;usb_device_hid.c: 217: uint8_t i;
  4847                           ;usb_device_hid.c: 223: if(len > 64)
  4848                           
  4849                           ;incstack = 0
  4850  0008A0  0E40               	movlw	64
  4851  0008A2  6448               	cpfsgt	HIDTxReport@len,c
  4852  0008A4  D001               	goto	l2979
  4853                           
  4854                           ;usb_device_hid.c: 224: len = 64;
  4855  0008A6  6E48               	movwf	HIDTxReport@len,c
  4856  0008A8                     l2979:
  4857                           
  4858                           ;usb_device_hid.c: 229: for (i = 0; i < len; i++)
  4859  0008A8  6A4A               	clrf	HIDTxReport@i,c
  4860  0008AA  D00D               	goto	l2985
  4861  0008AC                     l2981:
  4862                           
  4863                           ;usb_device_hid.c: 230: hid_report_in[i] = buffer[i];
  4864  0008AC  5047               	movf	HIDTxReport@buffer,w,c
  4865  0008AE  244A               	addwf	HIDTxReport@i,w,c
  4866  0008B0  6ED9               	movwf	fsr2l,c
  4867  0008B2  6ADA               	clrf	fsr2h,c
  4868  0008B4  0E6C               	movlw	108
  4869  0008B6  244A               	addwf	HIDTxReport@i,w,c
  4870  0008B8  6EE1               	movwf	fsr1l,c
  4871  0008BA  6AE2               	clrf	fsr1h,c
  4872  0008BC  0E04               	movlw	4
  4873  0008BE  22E2               	addwfc	fsr1h,f,c
  4874  0008C0  CFDF FFE7          	movff	indf2,indf1
  4875  0008C4  2A4A               	incf	HIDTxReport@i,f,c
  4876  0008C6                     l2985:
  4877  0008C6  5048               	movf	HIDTxReport@len,w,c
  4878  0008C8  5C4A               	subwf	HIDTxReport@i,w,c
  4879  0008CA  E3F0               	bnc	l2981
  4880                           
  4881                           ;usb_device_hid.c: 232: ep1Bi.Cnt = len;
  4882  0008CC  C048  F411         	movff	HIDTxReport@len,1041	;volatile
  4883                           
  4884                           ;usb_device_hid.c: 233: { ep1Bi.Stat._byte &= 0x40; ep1Bi.Stat.DTS = !ep1Bi.Stat.DTS; ep
      +                          1Bi.Stat._byte |= 0x08; ep1Bi.Stat._byte |= 0x80; };
  4885  0008D0  0E40               	movlw	64
  4886  0008D2  0104               	movlb	4	; () banked
  4887  0008D4  1710               	andwf	16,f,b	;volatile
  4888  0008D6  BD10               	btfsc	16,6,b	;volatile
  4889  0008D8  D003               	goto	u1940
  4890  0008DA  6A49               	clrf	??_HIDTxReport& (0+255),c
  4891  0008DC  2A49               	incf	??_HIDTxReport& (0+255),f,c
  4892  0008DE  D001               	goto	u1958
  4893  0008E0                     u1940:
  4894  0008E0  6A49               	clrf	??_HIDTxReport& (0+255),c
  4895  0008E2                     u1958:
  4896  0008E2  3A49               	swapf	??_HIDTxReport,f,c
  4897  0008E4  4649               	rlncf	??_HIDTxReport,f,c
  4898  0008E6  4649               	rlncf	??_HIDTxReport,f,c
  4899  0008E8  0104               	movlb	4	; () banked
  4900  0008EA  5110               	movf	16,w,b	;volatile
  4901  0008EC  1849               	xorwf	??_HIDTxReport,w,c
  4902  0008EE  0BBF               	andlw	-65
  4903  0008F0  1849               	xorwf	??_HIDTxReport,w,c
  4904  0008F2  6F10               	movwf	16,b	;volatile
  4905                           
  4906                           ; BSR set to: 4
  4907  0008F4  8710               	bsf	16,3,b	;volatile
  4908                           
  4909                           ; BSR set to: 4
  4910  0008F6  8F10               	bsf	16,7,b	;volatile
  4911                           
  4912                           ; BSR set to: 4
  4913  0008F8  0012               	return		;funcret
  4914  0008FA                     __end_of_HIDTxReport:
  4915                           	opt stack 0
  4916                           stkptr	equ	0xFFC
  4917                           tblptru	equ	0xFF8
  4918                           tblptrh	equ	0xFF7
  4919                           tblptrl	equ	0xFF6
  4920                           tablat	equ	0xFF5
  4921                           prodh	equ	0xFF4
  4922                           prodl	equ	0xFF3
  4923                           intcon	equ	0xFF2
  4924                           wreg	equ	0xFE8
  4925                           indf1	equ	0xFE7
  4926                           fsr1h	equ	0xFE2
  4927                           fsr1l	equ	0xFE1
  4928                           indf2	equ	0xFDF
  4929                           postinc2	equ	0xFDE
  4930                           postdec2	equ	0xFDD
  4931                           plusw2	equ	0xFDB
  4932                           fsr2h	equ	0xFDA
  4933                           fsr2l	equ	0xFD9
  4934                           status	equ	0xFD8
  4935                           
  4936 ;; *************** function _HIDRxReport *****************
  4937 ;; Defined at:
  4938 ;;		line 270 in file "../demo_src/usb_device_hid.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  buffer          1    0[COMRAM] PTR unsigned char 
  4941 ;;		 -> PacketFromPC(65), 
  4942 ;;  len             1    1[COMRAM] unsigned char 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;		None
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      unsigned char 
  4947 ;; Registers used:
  4948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4949 ;; Tracked objects:
  4950 ;;		On entry : 3F/4
  4951 ;;		On exit  : 3F/4
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4956 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4957 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4958 ;;Total ram usage:        3 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; This function calls:
  4961 ;;		Nothing
  4962 ;; This function is called by:
  4963 ;;		_ProcessIO
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text28
  4968  0008FA                     __ptext28:
  4969                           	opt stack 0
  4970  0008FA                     _HIDRxReport:
  4971                           	opt stack 28
  4972                           
  4973                           ; BSR set to: 4
  4974                           ;usb_device_hid.c: 272: hid_rpt_rx_len = 0;
  4975                           
  4976                           ; BSR set to: 4
  4977                           ;incstack = 0
  4978  0008FA  6A35               	clrf	_hid_rpt_rx_len,c
  4979                           
  4980                           ;usb_device_hid.c: 274: if(!ep1Bo.Stat.UOWN)
  4981  0008FC  BF0C               	btfsc	12,7,b	;volatile
  4982  0008FE  0012               	return	
  4983                           
  4984                           ; BSR set to: 4
  4985                           ;usb_device_hid.c: 275: {
  4986                           ;usb_device_hid.c: 280: if(len > ep1Bo.Cnt)
  4987  000900  5048               	movf	HIDRxReport@len,w,c
  4988  000902  5D0D               	subwf	13,w,b	;volatile
  4989  000904  E202               	bc	l535
  4990                           
  4991                           ; BSR set to: 4
  4992                           ;usb_device_hid.c: 281: len = ep1Bo.Cnt;
  4993  000906  C40D F048          	movff	1037,HIDRxReport@len	;volatile
  4994  00090A                     l535:
  4995                           
  4996                           ; BSR set to: 4
  4997                           ;usb_device_hid.c: 286: for(hid_rpt_rx_len = 0; hid_rpt_rx_len < len; hid_rpt_rx_len++)
  4998  00090A  6A35               	clrf	_hid_rpt_rx_len,c
  4999  00090C  D00B               	goto	l3003
  5000  00090E                     l2999:
  5001                           
  5002                           ; BSR set to: 4
  5003                           ;usb_device_hid.c: 287: buffer[hid_rpt_rx_len] = hid_report_out[hid_rpt_rx_len];
  5004  00090E  0E2C               	movlw	44
  5005  000910  2435               	addwf	_hid_rpt_rx_len,w,c
  5006  000912  6ED9               	movwf	fsr2l,c
  5007  000914  6ADA               	clrf	fsr2h,c
  5008  000916  0E04               	movlw	4
  5009  000918  22DA               	addwfc	fsr2h,f,c
  5010  00091A  5047               	movf	HIDRxReport@buffer,w,c
  5011  00091C  2435               	addwf	_hid_rpt_rx_len,w,c
  5012  00091E  ECC0  F001         	call	PL30	;call to abstracted procedure
  5013                           
  5014                           ; BSR set to: 4
  5015  000922  2A35               	incf	_hid_rpt_rx_len,f,c
  5016  000924                     l3003:
  5017                           
  5018                           ; BSR set to: 4
  5019  000924  5048               	movf	HIDRxReport@len,w,c
  5020  000926  5C35               	subwf	_hid_rpt_rx_len,w,c
  5021  000928  E3F2               	bnc	l2999
  5022                           
  5023                           ; BSR set to: 4
  5024                           ;usb_device_hid.c: 292: ep1Bo.Cnt = sizeof(hid_report_out);
  5025  00092A  0E40               	movlw	64
  5026  00092C  6F0D               	movwf	13,b	;volatile
  5027                           
  5028                           ; BSR set to: 4
  5029                           ;usb_device_hid.c: 293: { ep1Bo.Stat._byte &= 0x40; ep1Bo.Stat.DTS = !ep1Bo.Stat.DTS; ep
      +                          1Bo.Stat._byte |= 0x08; ep1Bo.Stat._byte |= 0x80; };
  5030  00092E  170C               	andwf	12,f,b	;volatile
  5031                           
  5032                           ; BSR set to: 4
  5033  000930  BD0C               	btfsc	12,6,b	;volatile
  5034  000932  D003               	goto	u1990
  5035  000934  6A49               	clrf	??_HIDRxReport& (0+255),c
  5036  000936  2A49               	incf	??_HIDRxReport& (0+255),f,c
  5037  000938  D001               	goto	u2008
  5038  00093A                     u1990:
  5039  00093A  6A49               	clrf	??_HIDRxReport& (0+255),c
  5040  00093C                     u2008:
  5041  00093C  3A49               	swapf	??_HIDRxReport,f,c
  5042  00093E  4649               	rlncf	??_HIDRxReport,f,c
  5043  000940  4649               	rlncf	??_HIDRxReport,f,c
  5044  000942  0104               	movlb	4	; () banked
  5045  000944  510C               	movf	12,w,b	;volatile
  5046  000946  1849               	xorwf	??_HIDRxReport,w,c
  5047  000948  0BBF               	andlw	-65
  5048  00094A  1849               	xorwf	??_HIDRxReport,w,c
  5049  00094C  6F0C               	movwf	12,b	;volatile
  5050                           
  5051                           ; BSR set to: 4
  5052  00094E  870C               	bsf	12,3,b	;volatile
  5053                           
  5054                           ; BSR set to: 4
  5055  000950  8F0C               	bsf	12,7,b	;volatile
  5056                           
  5057                           ; BSR set to: 4
  5058  000952  0012               	return		;funcret
  5059  000954                     __end_of_HIDRxReport:
  5060                           	opt stack 0
  5061                           stkptr	equ	0xFFC
  5062                           tblptru	equ	0xFF8
  5063                           tblptrh	equ	0xFF7
  5064                           tblptrl	equ	0xFF6
  5065                           tablat	equ	0xFF5
  5066                           prodh	equ	0xFF4
  5067                           prodl	equ	0xFF3
  5068                           intcon	equ	0xFF2
  5069                           wreg	equ	0xFE8
  5070                           indf1	equ	0xFE7
  5071                           fsr1h	equ	0xFE2
  5072                           fsr1l	equ	0xFE1
  5073                           indf2	equ	0xFDF
  5074                           postinc2	equ	0xFDE
  5075                           postdec2	equ	0xFDD
  5076                           plusw2	equ	0xFDB
  5077                           fsr2h	equ	0xFDA
  5078                           fsr2l	equ	0xFD9
  5079                           status	equ	0xFD8
  5080                           
  5081 ;; *************** function _InitializeSystem *****************
  5082 ;; Defined at:
  5083 ;;		line 583 in file "../demo_src/main.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;		None
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;		None
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1    wreg      void 
  5090 ;; Registers used:
  5091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/F
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5101 ;;Total ram usage:        0 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:    6
  5104 ;; This function calls:
  5105 ;;		_DelayRoutine
  5106 ;;		_USBDeviceInit
  5107 ;;		_UserInit
  5108 ;; This function is called by:
  5109 ;;		_BootMain
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text29
  5114  000BEA                     __ptext29:
  5115                           	opt stack 0
  5116  000BEA                     _InitializeSystem:
  5117                           	opt stack 23
  5118                           
  5119                           ;main.c: 603: OSCCON = 0x60;
  5120                           
  5121                           ; BSR set to: 4
  5122                           ;incstack = 0
  5123  000BEA  0E60               	movlw	96
  5124  000BEC  6ED3               	movwf	4051,c	;volatile
  5125                           
  5126                           ;main.c: 604: OSCTUNEbits.PLLEN = 1;
  5127  000BEE  8C9B               	bsf	3995,6,c	;volatile
  5128                           
  5129                           ;main.c: 606: DelayRoutine(0x300);
  5130  000BF0  EC47  F006         	call	PL46	;call to abstracted procedure
  5131  000BF4  EC2A  F006         	call	_DelayRoutine	;wreg free
  5132                           
  5133                           ;main.c: 621: ANCON0 = 0x00;
  5134  000BF8  010F               	movlb	15	; () banked
  5135  000BFA  6B48               	clrf	72,b	;volatile
  5136                           
  5137                           ; BSR set to: 15
  5138                           ;main.c: 622: ANCON1 = 0x00;
  5139  000BFC  6B49               	clrf	73,b	;volatile
  5140                           
  5141                           ; BSR set to: 15
  5142                           ;main.c: 728: UserInit();
  5143  000BFE  ECD2  F005         	call	_UserInit	;wreg free
  5144                           
  5145                           ;main.c: 730: LATEbits.LATE1 = 0;
  5146  000C02  928D               	bcf	3981,1,c	;volatile
  5147                           
  5148                           ;main.c: 731: TRISEbits.TRISE1 = 0;
  5149  000C04  9296               	bcf	3990,1,c	;volatile
  5150                           
  5151                           ;main.c: 735: USBDeviceInit();
  5152  000C06  EF52  F006         	goto	_USBDeviceInit	;wreg free
  5153  000C0A                     __end_of_InitializeSystem:
  5154                           	opt stack 0
  5155                           stkptr	equ	0xFFC
  5156                           tblptru	equ	0xFF8
  5157                           tblptrh	equ	0xFF7
  5158                           tblptrl	equ	0xFF6
  5159                           tablat	equ	0xFF5
  5160                           prodh	equ	0xFF4
  5161                           prodl	equ	0xFF3
  5162                           intcon	equ	0xFF2
  5163                           wreg	equ	0xFE8
  5164                           indf1	equ	0xFE7
  5165                           fsr1h	equ	0xFE2
  5166                           fsr1l	equ	0xFE1
  5167                           indf2	equ	0xFDF
  5168                           postinc2	equ	0xFDE
  5169                           postdec2	equ	0xFDD
  5170                           plusw2	equ	0xFDB
  5171                           fsr2h	equ	0xFDA
  5172                           fsr2l	equ	0xFD9
  5173                           status	equ	0xFD8
  5174                           
  5175 ;; *************** function _USBDeviceInit *****************
  5176 ;; Defined at:
  5177 ;;		line 295 in file "../demo_src/usb_device.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;		None
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;		None
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      void 
  5184 ;; Registers used:
  5185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 34/F
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5195 ;;Total ram usage:        0 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:    5
  5198 ;; This function calls:
  5199 ;;		_USBCheckBusStatus
  5200 ;;		_USBDisableWithLongDelay
  5201 ;; This function is called by:
  5202 ;;		_InitializeSystem
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text30
  5207  000CA4                     __ptext30:
  5208                           	opt stack 0
  5209  000CA4                     _USBDeviceInit:
  5210                           	opt stack 23
  5211                           
  5212                           ;usb_device.c: 301: if(UCONbits.USBEN == 1)
  5213                           
  5214                           ;incstack = 0
  5215  000CA4  B665               	btfsc	3941,3,c	;volatile
  5216                           
  5217                           ;usb_device.c: 302: {
  5218                           ;usb_device.c: 306: USBDisableWithLongDelay();
  5219  000CA6  EC3C  F006         	call	_USBDisableWithLongDelay	;wreg free
  5220                           
  5221                           ;usb_device.c: 307: }
  5222                           ;usb_device.c: 308: DeviceIsSoftDetached = 0;
  5223  000CAA  6A3A               	clrf	_DeviceIsSoftDetached,c
  5224                           
  5225                           ;usb_device.c: 316: USBCheckBusStatus();
  5226  000CAC  EF4B  F006         	goto	_USBCheckBusStatus	;wreg free
  5227  000CB0                     __end_of_USBDeviceInit:
  5228                           	opt stack 0
  5229                           stkptr	equ	0xFFC
  5230                           tblptru	equ	0xFF8
  5231                           tblptrh	equ	0xFF7
  5232                           tblptrl	equ	0xFF6
  5233                           tablat	equ	0xFF5
  5234                           prodh	equ	0xFF4
  5235                           prodl	equ	0xFF3
  5236                           intcon	equ	0xFF2
  5237                           wreg	equ	0xFE8
  5238                           indf1	equ	0xFE7
  5239                           fsr1h	equ	0xFE2
  5240                           fsr1l	equ	0xFE1
  5241                           indf2	equ	0xFDF
  5242                           postinc2	equ	0xFDE
  5243                           postdec2	equ	0xFDD
  5244                           plusw2	equ	0xFDB
  5245                           fsr2h	equ	0xFDA
  5246                           fsr2l	equ	0xFD9
  5247                           status	equ	0xFD8
  5248                           
  5249 ;; *************** function _USBCheckBusStatus *****************
  5250 ;; Defined at:
  5251 ;;		line 375 in file "../demo_src/usb_device.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;		None
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;		None
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/F
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5269 ;;Total ram usage:        0 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    4
  5272 ;; This function calls:
  5273 ;;		_USBSoftAttach
  5274 ;; This function is called by:
  5275 ;;		_USBDeviceInit
  5276 ;;		_USBDeviceTasks
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text31
  5281  000C96                     __ptext31:
  5282                           	opt stack 0
  5283  000C96                     _USBCheckBusStatus:
  5284                           	opt stack 24
  5285                           
  5286                           ;usb_device.c: 380: if(DeviceIsSoftDetached == 1)
  5287                           
  5288                           ;incstack = 0
  5289  000C96  043A               	decf	_DeviceIsSoftDetached,w,c
  5290  000C98  E101               	bnz	l284
  5291  000C9A  0012               	return	
  5292  000C9C                     l284:
  5293                           
  5294                           ;usb_device.c: 383: }
  5295                           ;usb_device.c: 409: if(UCONbits.USBEN == 0)
  5296  000C9C  A665               	btfss	3941,3,c	;volatile
  5297                           
  5298                           ;usb_device.c: 410: USBSoftAttach();
  5299  000C9E  EC05  F006         	call	_USBSoftAttach	;wreg free
  5300  000CA2  0012               	return		;funcret
  5301  000CA4                     __end_of_USBCheckBusStatus:
  5302                           	opt stack 0
  5303                           stkptr	equ	0xFFC
  5304                           tblptru	equ	0xFF8
  5305                           tblptrh	equ	0xFF7
  5306                           tblptrl	equ	0xFF6
  5307                           tablat	equ	0xFF5
  5308                           prodh	equ	0xFF4
  5309                           prodl	equ	0xFF3
  5310                           intcon	equ	0xFF2
  5311                           wreg	equ	0xFE8
  5312                           indf1	equ	0xFE7
  5313                           fsr1h	equ	0xFE2
  5314                           fsr1l	equ	0xFE1
  5315                           indf2	equ	0xFDF
  5316                           postinc2	equ	0xFDE
  5317                           postdec2	equ	0xFDD
  5318                           plusw2	equ	0xFDB
  5319                           fsr2h	equ	0xFDA
  5320                           fsr2l	equ	0xFD9
  5321                           status	equ	0xFD8
  5322                           
  5323 ;; *************** function _USBSoftAttach *****************
  5324 ;; Defined at:
  5325 ;;		line 323 in file "../demo_src/usb_device.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;		None
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;		None
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  1    wreg      void 
  5332 ;; Registers used:
  5333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/F
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5343 ;;Total ram usage:        0 bytes
  5344 ;; Hardware stack levels used:    1
  5345 ;; Hardware stack levels required when called:    3
  5346 ;; This function calls:
  5347 ;;		_USBDisableWithLongDelay
  5348 ;;		_USBProtocolResetHandler
  5349 ;; This function is called by:
  5350 ;;		_USBCheckBusStatus
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           	psect	text32
  5355  000C0A                     __ptext32:
  5356                           	opt stack 0
  5357  000C0A                     _USBSoftAttach:
  5358                           	opt stack 24
  5359                           
  5360                           ;usb_device.c: 330: if(DeviceIsSoftDetached == 1)
  5361                           
  5362                           ;incstack = 0
  5363  000C0A  043A               	decf	_DeviceIsSoftDetached,w,c
  5364  000C0C  E102               	bnz	l2681
  5365                           
  5366                           ;usb_device.c: 331: {
  5367                           ;usb_device.c: 332: USBDisableWithLongDelay();
  5368  000C0E  EC3C  F006         	call	_USBDisableWithLongDelay	;wreg free
  5369  000C12                     l2681:
  5370                           
  5371                           ;usb_device.c: 333: }
  5372                           ;usb_device.c: 335: UCON = 0;
  5373  000C12  6A65               	clrf	3941,c	;volatile
  5374                           
  5375                           ;usb_device.c: 336: UCFG = 0x10|0x00|0x04|0x01;
  5376  000C14  0E15               	movlw	21
  5377  000C16  010F               	movlb	15	; () banked
  5378  000C18  6F39               	movwf	57,b	;volatile
  5379                           
  5380                           ; BSR set to: 15
  5381                           ;usb_device.c: 337: UIE = 0;
  5382  000C1A  6B36               	clrf	54,b	;volatile
  5383                           
  5384                           ; BSR set to: 15
  5385                           ;usb_device.c: 338: UCONbits.USBEN = 1;
  5386  000C1C  8665               	bsf	3941,3,c	;volatile
  5387                           
  5388                           ; BSR set to: 15
  5389                           ;usb_device.c: 340: USBProtocolResetHandler();
  5390  000C1E  EC3B  F005         	call	_USBProtocolResetHandler	;wreg free
  5391                           
  5392                           ;usb_device.c: 341: usb_device_state = 1;
  5393  000C22  0E01               	movlw	1
  5394  000C24  6E42               	movwf	_usb_device_state,c
  5395                           
  5396                           ;usb_device.c: 342: DeviceIsSoftDetached = 0;
  5397  000C26  6A3A               	clrf	_DeviceIsSoftDetached,c
  5398  000C28  0012               	return		;funcret
  5399  000C2A                     __end_of_USBSoftAttach:
  5400                           	opt stack 0
  5401                           stkptr	equ	0xFFC
  5402                           tblptru	equ	0xFF8
  5403                           tblptrh	equ	0xFF7
  5404                           tblptrl	equ	0xFF6
  5405                           tablat	equ	0xFF5
  5406                           prodh	equ	0xFF4
  5407                           prodl	equ	0xFF3
  5408                           intcon	equ	0xFF2
  5409                           wreg	equ	0xFE8
  5410                           indf1	equ	0xFE7
  5411                           fsr1h	equ	0xFE2
  5412                           fsr1l	equ	0xFE1
  5413                           indf2	equ	0xFDF
  5414                           postinc2	equ	0xFDE
  5415                           postdec2	equ	0xFDD
  5416                           plusw2	equ	0xFDB
  5417                           fsr2h	equ	0xFDA
  5418                           fsr2l	equ	0xFD9
  5419                           status	equ	0xFD8
  5420                           
  5421 ;; *************** function _USBProtocolResetHandler *****************
  5422 ;; Defined at:
  5423 ;;		line 722 in file "../demo_src/usb_device.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;		None
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;		None
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      void 
  5430 ;; Registers used:
  5431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/F
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5441 ;;Total ram usage:        0 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; Hardware stack levels required when called:    2
  5444 ;; This function calls:
  5445 ;;		_ClearWatchdog
  5446 ;;		_LoadBDTandSetUOWN
  5447 ;;		_USBCBInitEP
  5448 ;; This function is called by:
  5449 ;;		_USBSoftAttach
  5450 ;;		_USBDeviceTasks
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           	psect	text33
  5455  000A76                     __ptext33:
  5456                           	opt stack 0
  5457  000A76                     _USBProtocolResetHandler:
  5458                           	opt stack 26
  5459                           
  5460                           ;usb_device.c: 724: usb_device_state = 3;
  5461                           
  5462                           ;incstack = 0
  5463  000A76  0E03               	movlw	3
  5464  000A78  6E42               	movwf	_usb_device_state,c
  5465                           
  5466                           ;usb_device.c: 725: UEIE = 0;
  5467  000A7A  010F               	movlb	15	; () banked
  5468  000A7C  6B37               	clrf	55,b	;volatile
  5469                           
  5470                           ; BSR set to: 15
  5471                           ;usb_device.c: 726: UIR = 0;
  5472  000A7E  6A62               	clrf	3938,c	;volatile
  5473                           
  5474                           ;usb_device.c: 727: UIE = 0b01111011;
  5475  000A80  0E7B               	movlw	123
  5476  000A82  6F36               	movwf	54,b	;volatile
  5477                           
  5478                           ; BSR set to: 15
  5479                           ;usb_device.c: 728: UADDR = 0x00;
  5480  000A84  6B38               	clrf	56,b	;volatile
  5481                           
  5482                           ; BSR set to: 15
  5483                           ;usb_device.c: 729: UEP1=0x00;UEP2=0x00;UEP3=0x00; UEP4=0x00;UEP5=0x00;UEP6=0x00;UEP7=0x
      +                          00;;
  5484                           
  5485                           ; BSR set to: 15
  5486                           
  5487                           ; BSR set to: 15
  5488                           
  5489                           ; BSR set to: 15
  5490                           
  5491                           ; BSR set to: 15
  5492                           
  5493                           ; BSR set to: 15
  5494                           
  5495                           ; BSR set to: 15
  5496  000A86  ECF8  F007         	call	PL12	;call to abstracted procedure
  5497                           
  5498                           ;usb_device.c: 730: UEP0 = 0x06|0x10;
  5499  000A8A  0E16               	movlw	22
  5500  000A8C  6F26               	movwf	38,b	;volatile
  5501                           
  5502                           ; BSR set to: 15
  5503                           ;usb_device.c: 731: UCONbits.PPBRST = 1;
  5504  000A8E  8C65               	bsf	3941,6,c	;volatile
  5505                           
  5506                           ;usb_device.c: 732: while(UIRbits.TRNIF == 1)
  5507  000A90  D003               	goto	l2485
  5508  000A92                     l328:
  5509                           
  5510                           ;usb_device.c: 733: {
  5511                           ;usb_device.c: 734: UIRbits.TRNIF = 0;
  5512  000A92  9662               	bcf	3938,3,c	;volatile
  5513                           
  5514                           ;usb_device.c: 735: ClearWatchdog();
  5515  000A94  EC5D  F006         	call	_ClearWatchdog	;wreg free
  5516  000A98                     l2485:
  5517  000A98  B662               	btfsc	3938,3,c	;volatile
  5518  000A9A  D7FB               	goto	l328
  5519                           
  5520                           ;usb_device.c: 736: }
  5521                           ;usb_device.c: 737: UCONbits.PPBRST = 0;
  5522  000A9C  9C65               	bcf	3941,6,c	;volatile
  5523                           
  5524                           ;usb_device.c: 738: UCONbits.PKTDIS = 0;
  5525  000A9E  9865               	bcf	3941,4,c	;volatile
  5526                           
  5527                           ;usb_device.c: 741: TempBDT.Stat._byte = 0x00|0x04;
  5528  000AA0  0E04               	movlw	4
  5529  000AA2  6E19               	movwf	_TempBDT,c
  5530                           
  5531                           ;usb_device.c: 742: LoadBDTandSetUOWN(0);
  5532  000AA4  0E00               	movlw	0
  5533  000AA6  ECF7  F004         	call	_LoadBDTandSetUOWN
  5534                           
  5535                           ;usb_device.c: 743: EP0OutOddNeedsArmingNext = 1;
  5536  000AAA  0E01               	movlw	1
  5537  000AAC  6E3C               	movwf	_EP0OutOddNeedsArmingNext,c
  5538                           
  5539                           ;usb_device.c: 744: usb_stat._byte = 0x00;
  5540  000AAE  6A3B               	clrf	_usb_stat,c
  5541                           
  5542                           ;usb_device.c: 745: usb_active_cfg = 0;
  5543  000AB0  6A46               	clrf	_usb_active_cfg,c
  5544                           
  5545                           ;usb_device.c: 746: USBCBInitEP(0);
  5546  000AB2  0E00               	movlw	0
  5547  000AB4  EF34  F006         	goto	_USBCBInitEP
  5548  000AB8                     __end_of_USBProtocolResetHandler:
  5549                           	opt stack 0
  5550                           stkptr	equ	0xFFC
  5551                           tblptru	equ	0xFF8
  5552                           tblptrh	equ	0xFF7
  5553                           tblptrl	equ	0xFF6
  5554                           tablat	equ	0xFF5
  5555                           prodh	equ	0xFF4
  5556                           prodl	equ	0xFF3
  5557                           intcon	equ	0xFF2
  5558                           wreg	equ	0xFE8
  5559                           indf1	equ	0xFE7
  5560                           fsr1h	equ	0xFE2
  5561                           fsr1l	equ	0xFE1
  5562                           indf2	equ	0xFDF
  5563                           postinc2	equ	0xFDE
  5564                           postdec2	equ	0xFDD
  5565                           plusw2	equ	0xFDB
  5566                           fsr2h	equ	0xFDA
  5567                           fsr2l	equ	0xFD9
  5568                           status	equ	0xFD8
  5569                           
  5570 ;; *************** function _USBCBInitEP *****************
  5571 ;; Defined at:
  5572 ;;		line 1021 in file "../demo_src/main.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  Configuratio    1    wreg     unsigned char 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;  Configuratio    1    0[COMRAM] unsigned char 
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  1    wreg      void 
  5579 ;; Registers used:
  5580 ;;		wreg, status,2, status,0, cstack
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/F
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5590 ;;Total ram usage:        1 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:    1
  5593 ;; This function calls:
  5594 ;;		_HIDInitEP
  5595 ;;		_UserInit
  5596 ;; This function is called by:
  5597 ;;		_USBProtocolResetHandler
  5598 ;;		_USBStdSetCfgHandler
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           	psect	text34
  5603  000C68                     __ptext34:
  5604                           	opt stack 0
  5605  000C68                     _USBCBInitEP:
  5606                           	opt stack 26
  5607                           
  5608                           ;incstack = 0
  5609                           ;USBCBInitEP@ConfigurationIndex stored from wreg
  5610  000C68  6E47               	movwf	USBCBInitEP@ConfigurationIndex,c
  5611                           
  5612                           ;main.c: 1030: if(ConfigurationIndex == 1)
  5613  000C6A  0447               	decf	USBCBInitEP@ConfigurationIndex,w,c
  5614  000C6C  A4D8               	btfss	status,2,c
  5615  000C6E  0012               	return	
  5616                           
  5617                           ;main.c: 1031: {
  5618                           ;main.c: 1036: HIDInitEP();
  5619  000C70  ECA9  F005         	call	_HIDInitEP	;wreg free
  5620                           
  5621                           ; BSR set to: 4
  5622                           ;main.c: 1039: UserInit();
  5623  000C74  EFD2  F005         	goto	_UserInit	;wreg free
  5624  000C78                     __end_of_USBCBInitEP:
  5625                           	opt stack 0
  5626                           stkptr	equ	0xFFC
  5627                           tblptru	equ	0xFF8
  5628                           tblptrh	equ	0xFF7
  5629                           tblptrl	equ	0xFF6
  5630                           tablat	equ	0xFF5
  5631                           prodh	equ	0xFF4
  5632                           prodl	equ	0xFF3
  5633                           intcon	equ	0xFF2
  5634                           wreg	equ	0xFE8
  5635                           indf1	equ	0xFE7
  5636                           fsr1h	equ	0xFE2
  5637                           fsr1l	equ	0xFE1
  5638                           indf2	equ	0xFDF
  5639                           postinc2	equ	0xFDE
  5640                           postdec2	equ	0xFDD
  5641                           plusw2	equ	0xFDB
  5642                           fsr2h	equ	0xFDA
  5643                           fsr2l	equ	0xFD9
  5644                           status	equ	0xFD8
  5645                           
  5646 ;; *************** function _UserInit *****************
  5647 ;; Defined at:
  5648 ;;		line 248 in file "../demo_src/boot_18fxxjxx.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;		None
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;		None
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  1    wreg      void 
  5655 ;; Registers used:
  5656 ;;		wreg, status,2
  5657 ;; Tracked objects:
  5658 ;;		On entry : 34/F
  5659 ;;		On exit  : 34/4
  5660 ;;		Unchanged: 34/0
  5661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5666 ;;Total ram usage:        0 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		_InitializeSystem
  5672 ;;		_USBCBInitEP
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text35
  5677  000BA4                     __ptext35:
  5678                           	opt stack 0
  5679  000BA4                     _UserInit:
  5680                           	opt stack 0
  5681                           
  5682                           ;boot_18fxxjxx.c: 251: MaxPageToErase = ((((uint32_t)0x00FFF8)/1024) - 1);
  5683                           
  5684                           ;incstack = 0
  5685                           
  5686                           ;boot_18fxxjxx.c: 252: ProgramMemStopAddress = ((((((uint32_t)0x00FFF8)/1024) - 1) + 1) 
      +                          * 1024);
  5687  000BA4  D807               	call	PL26	;call to abstracted procedure
  5688  000BA6  0E00               	movlw	0
  5689  000BA8  6A17               	clrf	_ProgramMemStopAddress+2,c
  5690  000BAA  6A18               	clrf	_ProgramMemStopAddress+3,c
  5691                           
  5692                           ;boot_18fxxjxx.c: 253: BootState = 0x00;
  5693  000BAC  6A33               	clrf	_BootState,c
  5694                           
  5695                           ;boot_18fxxjxx.c: 254: ProgrammedPointer = 0xFFFFFFFF;
  5696  000BAE  D808               	call	PL40	;call to abstracted procedure
  5697                           
  5698                           ;boot_18fxxjxx.c: 255: BufferedDataIndex = 0;
  5699  000BB0  6A32               	clrf	_BufferedDataIndex,c
  5700  000BB2  0012               	return		;funcret
  5701  000BB4                     __end_of_UserInit:
  5702                           	opt stack 0
  5703  000BB4                     PL26:
  5704                           	opt stack 23
  5705  000BB4  0E3E               	movlw	62
  5706  000BB6  6E34               	movwf	_MaxPageToErase,c
  5707  000BB8  6A15               	clrf	_ProgramMemStopAddress,c
  5708  000BBA  0EFC               	movlw	252
  5709  000BBC  6E16               	movwf	_ProgramMemStopAddress+1,c
  5710  000BBE  0CFC               	retlw	252
  5711  000BC0                     __end_ofPL26:
  5712                           	opt stack 0
  5713  000BC0                     PL40:
  5714                           	opt stack 23
  5715  000BC0  6811               	setf	_ProgrammedPointer,c
  5716  000BC2  6812               	setf	_ProgrammedPointer+1,c
  5717  000BC4  6813               	setf	_ProgrammedPointer+2,c
  5718  000BC6  6814               	setf	_ProgrammedPointer+3,c
  5719  000BC8  0012               	return	
  5720  000BCA                     __end_ofPL40:
  5721                           	opt stack 0
  5722                           stkptr	equ	0xFFC
  5723                           tblptru	equ	0xFF8
  5724                           tblptrh	equ	0xFF7
  5725                           tblptrl	equ	0xFF6
  5726                           tablat	equ	0xFF5
  5727                           prodh	equ	0xFF4
  5728                           prodl	equ	0xFF3
  5729                           intcon	equ	0xFF2
  5730                           wreg	equ	0xFE8
  5731                           indf1	equ	0xFE7
  5732                           fsr1h	equ	0xFE2
  5733                           fsr1l	equ	0xFE1
  5734                           indf2	equ	0xFDF
  5735                           postinc2	equ	0xFDE
  5736                           postdec2	equ	0xFDD
  5737                           plusw2	equ	0xFDB
  5738                           fsr2h	equ	0xFDA
  5739                           fsr2l	equ	0xFD9
  5740                           status	equ	0xFD8
  5741                           
  5742 ;; *************** function _HIDInitEP *****************
  5743 ;; Defined at:
  5744 ;;		line 157 in file "../demo_src/usb_device_hid.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;		None
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;		None
  5749 ;; Return value:  Size  Location     Type
  5750 ;;                  1    wreg      void 
  5751 ;; Registers used:
  5752 ;;		wreg, status,2, status,0
  5753 ;; Tracked objects:
  5754 ;;		On entry : 0/F
  5755 ;;		On exit  : 3F/4
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5762 ;;Total ram usage:        0 bytes
  5763 ;; Hardware stack levels used:    1
  5764 ;; This function calls:
  5765 ;;		Nothing
  5766 ;; This function is called by:
  5767 ;;		_USBCBInitEP
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text36
  5772  000B52                     __ptext36:
  5773                           	opt stack 0
  5774  000B52                     _HIDInitEP:
  5775                           	opt stack 26
  5776                           
  5777                           ;usb_device_hid.c: 159: hid_rpt_rx_len =0;
  5778                           
  5779                           ;incstack = 0
  5780  000B52  6A35               	clrf	_hid_rpt_rx_len,c
  5781                           
  5782                           ;usb_device_hid.c: 161: UEP1 = 0x0E|0x10;
  5783  000B54  0E1E               	movlw	30
  5784  000B56  010F               	movlb	15	; () banked
  5785  000B58  6F27               	movwf	39,b	;volatile
  5786                           
  5787                           ;usb_device_hid.c: 164: ep1Bo.Cnt = sizeof(hid_report_out);
  5788  000B5A  0E40               	movlw	64
  5789  000B5C  0104               	movlb	4	; () banked
  5790  000B5E  6F0D               	movwf	13,b	;volatile
  5791                           
  5792                           ; BSR set to: 4
  5793                           ;usb_device_hid.c: 165: ep1Bo.ADR = (uint8_t*)&hid_report_out;
  5794  000B60  0E2C               	movlw	44
  5795  000B62  6F0E               	movwf	14,b	;volatile
  5796  000B64  0E04               	movlw	4
  5797  000B66  6F0F               	movwf	15,b	;volatile
  5798                           
  5799                           ; BSR set to: 4
  5800                           ;usb_device_hid.c: 166: ep1Bo.Stat._byte = 0x00|0x08;
  5801  000B68  0E08               	movlw	8
  5802  000B6A  6F0C               	movwf	12,b	;volatile
  5803                           
  5804                           ; BSR set to: 4
  5805                           ;usb_device_hid.c: 167: ep1Bo.Stat._byte |= 0x80;
  5806  000B6C  8F0C               	bsf	12,7,b	;volatile
  5807                           
  5808                           ; BSR set to: 4
  5809                           ;usb_device_hid.c: 180: ep1Bi.ADR = (uint8_t*)&hid_report_in;
  5810  000B6E  0E6C               	movlw	108
  5811  000B70  6F12               	movwf	18,b	;volatile
  5812  000B72  0E04               	movlw	4
  5813  000B74  6F13               	movwf	19,b	;volatile
  5814                           
  5815                           ; BSR set to: 4
  5816                           ;usb_device_hid.c: 181: ep1Bi.Stat._byte = 0x00|0x40;
  5817  000B76  0E40               	movlw	64
  5818  000B78  6F10               	movwf	16,b	;volatile
  5819                           
  5820                           ; BSR set to: 4
  5821  000B7A  0C40               	retlw	64	;funcret
  5822  000B7C                     __end_of_HIDInitEP:
  5823                           	opt stack 0
  5824                           stkptr	equ	0xFFC
  5825                           tblptru	equ	0xFF8
  5826                           tblptrh	equ	0xFF7
  5827                           tblptrl	equ	0xFF6
  5828                           tablat	equ	0xFF5
  5829                           prodh	equ	0xFF4
  5830                           prodl	equ	0xFF3
  5831                           intcon	equ	0xFF2
  5832                           wreg	equ	0xFE8
  5833                           indf1	equ	0xFE7
  5834                           fsr1h	equ	0xFE2
  5835                           fsr1l	equ	0xFE1
  5836                           indf2	equ	0xFDF
  5837                           postinc2	equ	0xFDE
  5838                           postdec2	equ	0xFDD
  5839                           plusw2	equ	0xFDB
  5840                           fsr2h	equ	0xFDA
  5841                           fsr2l	equ	0xFD9
  5842                           status	equ	0xFD8
  5843                           
  5844 ;; *************** function _LoadBDTandSetUOWN *****************
  5845 ;; Defined at:
  5846 ;;		line 1561 in file "../demo_src/usb_device.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;  BDTIndexToLo    1    wreg     unsigned char 
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;  BDTIndexToLo    1    0[COMRAM] unsigned char 
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  1    wreg      void 
  5853 ;; Registers used:
  5854 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/4
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5863 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5864 ;;Total ram usage:        1 bytes
  5865 ;; Hardware stack levels used:    1
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_USBProtocolResetHandler
  5870 ;;		_USBCtrlEPServiceComplete
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text37
  5875  0009EE                     __ptext37:
  5876                           	opt stack 0
  5877  0009EE                     _LoadBDTandSetUOWN:
  5878                           	opt stack 27
  5879                           
  5880                           ; BSR set to: 4
  5881                           ;incstack = 0
  5882                           ;LoadBDTandSetUOWN@BDTIndexToLoad stored from wreg
  5883  0009EE  6E47               	movwf	LoadBDTandSetUOWN@BDTIndexToLoad,c
  5884                           
  5885                           ;usb_device.c: 1563: static volatile BDT* pBDTEntry;
  5886                           ;usb_device.c: 1569: TempBDT.Cnt = 8;
  5887  0009F0  0E08               	movlw	8
  5888  0009F2  6E1A               	movwf	_TempBDT+1,c
  5889                           
  5890                           ;usb_device.c: 1570: TempBDT.ADR = (uint8_t*)&EP0OutOddBuf[0];
  5891  0009F4  0E1C               	movlw	28
  5892  0009F6  6E1B               	movwf	_TempBDT+2,c
  5893  0009F8  0E04               	movlw	4
  5894  0009FA  6E1C               	movwf	_TempBDT+3,c
  5895                           
  5896                           ;usb_device.c: 1571: if(BDTIndexToLoad == 0)
  5897  0009FC  5047               	movf	LoadBDTandSetUOWN@BDTIndexToLoad,w,c
  5898  0009FE  E106               	bnz	l2365
  5899                           
  5900                           ;usb_device.c: 1572: {
  5901                           ;usb_device.c: 1573: TempBDT.ADR = (uint8_t*)&EP0OutEvenBuf[0];
  5902  000A00  0E14               	movlw	20
  5903  000A02  6E1B               	movwf	_TempBDT+2,c
  5904  000A04  0E04               	movlw	4
  5905  000A06  6E1C               	movwf	_TempBDT+3,c
  5906                           
  5907                           ;usb_device.c: 1574: pBDTEntry = (volatile BDT*)0x400;
  5908  000A08  6A27               	clrf	LoadBDTandSetUOWN@pBDTEntry,c
  5909  000A0A  D002               	goto	L10
  5910  000A0C                     l2365:
  5911                           
  5912                           ;usb_device.c: 1576: else
  5913                           ;usb_device.c: 1577: {
  5914                           ;usb_device.c: 1578: pBDTEntry = (volatile BDT*)(0x400 + 4);
  5915  000A0C  0E04               	movlw	4
  5916  000A0E  6E27               	movwf	LoadBDTandSetUOWN@pBDTEntry,c
  5917  000A10                     L10:
  5918  000A10  6E28               	movwf	LoadBDTandSetUOWN@pBDTEntry+1,c
  5919                           
  5920                           ;usb_device.c: 1579: }
  5921                           ;usb_device.c: 1582: *pBDTEntry = TempBDT;
  5922  000A12  D80B               	call	PL42	;call to abstracted procedure
  5923  000A14  C019  FFDE         	movff	_TempBDT,postinc2
  5924  000A18  C01A  FFDE         	movff	_TempBDT+1,postinc2
  5925  000A1C  C01B  FFDE         	movff	_TempBDT+2,postinc2
  5926  000A20  C01C  FFDE         	movff	_TempBDT+3,postinc2
  5927                           
  5928                           ;usb_device.c: 1585: pBDTEntry->Stat.UOWN = 1;
  5929  000A24  D802               	call	PL42	;call to abstracted procedure
  5930  000A26  8EDF               	bsf	indf2,7,c
  5931  000A28  0012               	return		;funcret
  5932  000A2A                     __end_of_LoadBDTandSetUOWN:
  5933                           	opt stack 0
  5934  000A2A                     PL42:
  5935                           	opt stack 27
  5936  000A2A  C027  FFD9         	movff	LoadBDTandSetUOWN@pBDTEntry,fsr2l
  5937  000A2E  C028  FFDA         	movff	LoadBDTandSetUOWN@pBDTEntry+1,fsr2h
  5938  000A32  0012               	return	
  5939  000A34                     __end_ofPL42:
  5940                           	opt stack 0
  5941                           stkptr	equ	0xFFC
  5942                           tblptru	equ	0xFF8
  5943                           tblptrh	equ	0xFF7
  5944                           tblptrl	equ	0xFF6
  5945                           tablat	equ	0xFF5
  5946                           prodh	equ	0xFF4
  5947                           prodl	equ	0xFF3
  5948                           intcon	equ	0xFF2
  5949                           wreg	equ	0xFE8
  5950                           indf1	equ	0xFE7
  5951                           fsr1h	equ	0xFE2
  5952                           fsr1l	equ	0xFE1
  5953                           indf2	equ	0xFDF
  5954                           postinc2	equ	0xFDE
  5955                           postdec2	equ	0xFDD
  5956                           plusw2	equ	0xFDB
  5957                           fsr2h	equ	0xFDA
  5958                           fsr2l	equ	0xFD9
  5959                           status	equ	0xFD8
  5960                           
  5961 ;; *************** function _USBDisableWithLongDelay *****************
  5962 ;; Defined at:
  5963 ;;		line 1593 in file "../demo_src/usb_device.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;		None
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;		None
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  1    wreg      void 
  5970 ;; Registers used:
  5971 ;;		wreg, status,2, status,0, cstack
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5981 ;;Total ram usage:        0 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:    2
  5984 ;; This function calls:
  5985 ;;		_DelayRoutine
  5986 ;; This function is called by:
  5987 ;;		_USBDeviceInit
  5988 ;;		_USBSoftAttach
  5989 ;;		_ResetDeviceCleanly
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992                           
  5993                           	psect	text38
  5994  000C78                     __ptext38:
  5995                           	opt stack 0
  5996  000C78                     _USBDisableWithLongDelay:
  5997                           	opt stack 24
  5998                           
  5999                           ;usb_device.c: 1595: UCONbits.SUSPND = 0;
  6000                           
  6001                           ;incstack = 0
  6002  000C78  9265               	bcf	3941,1,c	;volatile
  6003                           
  6004                           ;usb_device.c: 1596: UCON = 0x00;
  6005  000C7A  6A65               	clrf	3941,c	;volatile
  6006                           
  6007                           ;usb_device.c: 1597: DelayRoutine(0xFFFF);
  6008  000C7C  6848               	setf	DelayRoutine@DelayAmount+1,c
  6009  000C7E  6847               	setf	DelayRoutine@DelayAmount,c
  6010  000C80  EC2A  F006         	call	_DelayRoutine	;wreg free
  6011                           
  6012                           ;usb_device.c: 1598: usb_device_state = 0;
  6013  000C84  6A42               	clrf	_usb_device_state,c
  6014  000C86  0012               	return		;funcret
  6015  000C88                     __end_of_USBDisableWithLongDelay:
  6016                           	opt stack 0
  6017                           stkptr	equ	0xFFC
  6018                           tblptru	equ	0xFF8
  6019                           tblptrh	equ	0xFF7
  6020                           tblptrl	equ	0xFF6
  6021                           tablat	equ	0xFF5
  6022                           prodh	equ	0xFF4
  6023                           prodl	equ	0xFF3
  6024                           intcon	equ	0xFF2
  6025                           wreg	equ	0xFE8
  6026                           indf1	equ	0xFE7
  6027                           fsr1h	equ	0xFE2
  6028                           fsr1l	equ	0xFE1
  6029                           indf2	equ	0xFDF
  6030                           postinc2	equ	0xFDE
  6031                           postdec2	equ	0xFDD
  6032                           plusw2	equ	0xFDB
  6033                           fsr2h	equ	0xFDA
  6034                           fsr2l	equ	0xFD9
  6035                           status	equ	0xFD8
  6036                           
  6037 ;; *************** function _DelayRoutine *****************
  6038 ;; Defined at:
  6039 ;;		line 1603 in file "../demo_src/usb_device.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  DelayAmount     2    0[COMRAM] unsigned int 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      void 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2, status,0, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/F
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6056 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6057 ;;Total ram usage:        2 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    1
  6060 ;; This function calls:
  6061 ;;		_ClearWatchdog
  6062 ;; This function is called by:
  6063 ;;		_InitializeSystem
  6064 ;;		_USBCBWakeFromSuspend
  6065 ;;		_USBDisableWithLongDelay
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text39
  6070  000C54                     __ptext39:
  6071                           	opt stack 0
  6072  000C54                     _DelayRoutine:
  6073                           	opt stack 25
  6074                           
  6075                           ;usb_device.c: 1605: while(DelayAmount)
  6076                           
  6077                           ;incstack = 0
  6078  000C54  D005               	goto	l2351
  6079  000C56                     l2347:
  6080                           
  6081                           ;usb_device.c: 1606: {
  6082                           ;usb_device.c: 1607: ClearWatchdog();
  6083  000C56  EC5D  F006         	call	_ClearWatchdog	;wreg free
  6084                           
  6085                           ;usb_device.c: 1608: DelayAmount--;
  6086  000C5A  0647               	decf	DelayRoutine@DelayAmount,f,c
  6087  000C5C  A0D8               	btfss	status,0,c
  6088  000C5E  0648               	decf	DelayRoutine@DelayAmount+1,f,c
  6089  000C60                     l2351:
  6090  000C60  5047               	movf	DelayRoutine@DelayAmount,w,c
  6091  000C62  1048               	iorwf	DelayRoutine@DelayAmount+1,w,c
  6092  000C64  E1F8               	bnz	l2347
  6093  000C66  0012               	return		;funcret
  6094  000C68                     __end_of_DelayRoutine:
  6095                           	opt stack 0
  6096                           stkptr	equ	0xFFC
  6097                           tblptru	equ	0xFF8
  6098                           tblptrh	equ	0xFF7
  6099                           tblptrl	equ	0xFF6
  6100                           tablat	equ	0xFF5
  6101                           prodh	equ	0xFF4
  6102                           prodl	equ	0xFF3
  6103                           intcon	equ	0xFF2
  6104                           wreg	equ	0xFE8
  6105                           indf1	equ	0xFE7
  6106                           fsr1h	equ	0xFE2
  6107                           fsr1l	equ	0xFE1
  6108                           indf2	equ	0xFDF
  6109                           postinc2	equ	0xFDE
  6110                           postdec2	equ	0xFDD
  6111                           plusw2	equ	0xFDB
  6112                           fsr2h	equ	0xFDA
  6113                           fsr2l	equ	0xFD9
  6114                           status	equ	0xFD8
  6115                           
  6116 ;; *************** function _ClearWatchdog *****************
  6117 ;; Defined at:
  6118 ;;		line 1620 in file "../demo_src/usb_device.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      void 
  6125 ;; Registers used:
  6126 ;;		None
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6136 ;;Total ram usage:        0 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; This function calls:
  6139 ;;		Nothing
  6140 ;; This function is called by:
  6141 ;;		_USBProtocolResetHandler
  6142 ;;		_DelayRoutine
  6143 ;;		_ProcessIO
  6144 ;;		_SignFlash
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           	psect	text40
  6149  000CBA                     __ptext40:
  6150                           	opt stack 0
  6151  000CBA                     _ClearWatchdog:
  6152                           	opt stack 25
  6153                           
  6154                           ;incstack = 0
  6155  000CBA  0004               	clrwdt		;# 
  6156  000CBC  0012               	return		;funcret
  6157  000CBE                     __end_of_ClearWatchdog:
  6158                           	opt stack 0
  6159                           stkptr	equ	0xFFC
  6160                           tblptru	equ	0xFF8
  6161                           tblptrh	equ	0xFF7
  6162                           tblptrl	equ	0xFF6
  6163                           tablat	equ	0xFF5
  6164                           prodh	equ	0xFF4
  6165                           prodl	equ	0xFF3
  6166                           intcon	equ	0xFF2
  6167                           wreg	equ	0xFE8
  6168                           indf1	equ	0xFE7
  6169                           fsr1h	equ	0xFE2
  6170                           fsr1l	equ	0xFE1
  6171                           indf2	equ	0xFDF
  6172                           postinc2	equ	0xFDE
  6173                           postdec2	equ	0xFDD
  6174                           plusw2	equ	0xFDB
  6175                           fsr2h	equ	0xFDA
  6176                           fsr2l	equ	0xFD9
  6177                           status	equ	0xFD8
  6178                           
  6179 ;; *************** function _BlinkUSBStatus *****************
  6180 ;; Defined at:
  6181 ;;		line 761 in file "../demo_src/main.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;		None
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;		None
  6186 ;; Return value:  Size  Location     Type
  6187 ;;                  1    wreg      void 
  6188 ;; Registers used:
  6189 ;;		wreg, status,2, status,0
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/F
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6198 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6199 ;;Total ram usage:        1 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; This function calls:
  6202 ;;		Nothing
  6203 ;; This function is called by:
  6204 ;;		_BootMain
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           	psect	text41
  6209  000AB8                     __ptext41:
  6210                           	opt stack 0
  6211  000AB8                     _BlinkUSBStatus:
  6212                           	opt stack 29
  6213                           
  6214                           ;main.c: 764: static unsigned int led_count = 0;
  6215                           ;main.c: 766: led_count--;
  6216                           
  6217                           ;incstack = 0
  6218  000AB8  062D               	decf	BlinkUSBStatus@led_count,f,c
  6219  000ABA  A0D8               	btfss	status,0,c
  6220  000ABC  062E               	decf	BlinkUSBStatus@led_count+1,f,c
  6221                           
  6222                           ;main.c: 767: if(led_count == 0)
  6223  000ABE  502D               	movf	BlinkUSBStatus@led_count,w,c
  6224  000AC0  102E               	iorwf	BlinkUSBStatus@led_count+1,w,c
  6225  000AC2  A4D8               	btfss	status,2,c
  6226  000AC4  0012               	return	
  6227                           
  6228                           ;main.c: 768: {
  6229                           ;main.c: 769: led_count = 0x4E00;
  6230  000AC6  0E4E               	movlw	78
  6231  000AC8  6E2E               	movwf	BlinkUSBStatus@led_count+1,c
  6232  000ACA  6A2D               	clrf	BlinkUSBStatus@led_count,c
  6233                           
  6234                           ;main.c: 770: if(usb_device_state < 6)
  6235  000ACC  0E06               	movlw	6
  6236  000ACE  6042               	cpfslt	_usb_device_state,c
  6237  000AD0  D002               	goto	l3121
  6238                           
  6239                           ;main.c: 771: {
  6240                           ;main.c: 772: LATEbits.LATE1 = 1;
  6241  000AD2  828D               	bsf	3981,1,c	;volatile
  6242                           
  6243                           ;main.c: 773: }
  6244  000AD4  0C06               	retlw	6
  6245  000AD6                     l3121:
  6246                           
  6247                           ;main.c: 774: else
  6248                           ;main.c: 775: {
  6249                           ;main.c: 776: LATEbits.LATE1 = !LATEbits.LATE1;
  6250  000AD6  B28D               	btfsc	3981,1,c	;volatile
  6251  000AD8  D003               	goto	u2070
  6252  000ADA  6A47               	clrf	??_BlinkUSBStatus& (0+255),c
  6253  000ADC  2A47               	incf	??_BlinkUSBStatus& (0+255),f,c
  6254  000ADE  D001               	goto	u2088
  6255  000AE0                     u2070:
  6256  000AE0  6A47               	clrf	??_BlinkUSBStatus& (0+255),c
  6257  000AE2                     u2088:
  6258  000AE2  4647               	rlncf	??_BlinkUSBStatus,f,c
  6259  000AE4  508D               	movf	3981,w,c	;volatile
  6260  000AE6  1847               	xorwf	??_BlinkUSBStatus,w,c
  6261  000AE8  0BFD               	andlw	-3
  6262  000AEA  1847               	xorwf	??_BlinkUSBStatus,w,c
  6263  000AEC  6E8D               	movwf	3981,c	;volatile
  6264  000AEE  0012               	return		;funcret
  6265  000AF0                     __end_of_BlinkUSBStatus:
  6266                           	opt stack 0
  6267                           stkptr	equ	0xFFC
  6268                           tblptru	equ	0xFF8
  6269                           tblptrh	equ	0xFF7
  6270                           tblptrl	equ	0xFF6
  6271                           tablat	equ	0xFF5
  6272                           prodh	equ	0xFF4
  6273                           prodl	equ	0xFF3
  6274                           intcon	equ	0xFF2
  6275                           wreg	equ	0xFE8
  6276                           indf1	equ	0xFE7
  6277                           fsr1h	equ	0xFE2
  6278                           fsr1l	equ	0xFE1
  6279                           indf2	equ	0xFDF
  6280                           postinc2	equ	0xFDE
  6281                           postdec2	equ	0xFDD
  6282                           plusw2	equ	0xFDB
  6283                           fsr2h	equ	0xFDA
  6284                           fsr2l	equ	0xFD9
  6285                           status	equ	0xFD8
  6286                           stkptr	equ	0xFFC
  6287                           tblptru	equ	0xFF8
  6288                           tblptrh	equ	0xFF7
  6289                           tblptrl	equ	0xFF6
  6290                           tablat	equ	0xFF5
  6291                           prodh	equ	0xFF4
  6292                           prodl	equ	0xFF3
  6293                           intcon	equ	0xFF2
  6294                           wreg	equ	0xFE8
  6295                           indf1	equ	0xFE7
  6296                           fsr1h	equ	0xFE2
  6297                           fsr1l	equ	0xFE1
  6298                           indf2	equ	0xFDF
  6299                           postinc2	equ	0xFDE
  6300                           postdec2	equ	0xFDD
  6301                           plusw2	equ	0xFDB
  6302                           fsr2h	equ	0xFDA
  6303                           fsr2l	equ	0xFD9
  6304                           status	equ	0xFD8
  6305                           
  6306                           	psect	rparam
  6307  0000                     stkptr	equ	0xFFC
  6308                           tblptru	equ	0xFF8
  6309                           tblptrh	equ	0xFF7
  6310                           tblptrl	equ	0xFF6
  6311                           tablat	equ	0xFF5
  6312                           prodh	equ	0xFF4
  6313                           prodl	equ	0xFF3
  6314                           intcon	equ	0xFF2
  6315                           wreg	equ	0xFE8
  6316                           indf1	equ	0xFE7
  6317                           fsr1h	equ	0xFE2
  6318                           fsr1l	equ	0xFE1
  6319                           indf2	equ	0xFDF
  6320                           postinc2	equ	0xFDE
  6321                           postdec2	equ	0xFDD
  6322                           plusw2	equ	0xFDB
  6323                           fsr2h	equ	0xFDA
  6324                           fsr2l	equ	0xFD9
  6325                           status	equ	0xFD8
  6326                           stkptr	equ	0xFFC
  6327                           tblptru	equ	0xFF8
  6328                           tblptrh	equ	0xFF7
  6329                           tblptrl	equ	0xFF6
  6330                           tablat	equ	0xFF5
  6331                           prodh	equ	0xFF4
  6332                           prodl	equ	0xFF3
  6333                           intcon	equ	0xFF2
  6334                           wreg	equ	0xFE8
  6335                           indf1	equ	0xFE7
  6336                           fsr1h	equ	0xFE2
  6337                           fsr1l	equ	0xFE1
  6338                           indf2	equ	0xFDF
  6339                           postinc2	equ	0xFDE
  6340                           postdec2	equ	0xFDD
  6341                           plusw2	equ	0xFDB
  6342                           fsr2h	equ	0xFDA
  6343                           fsr2l	equ	0xFD9
  6344                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    185
    Data        0
    BSS         1224
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      83
    BANK0           160      0     130
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4            84      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    ep0BoEven.ADR	PTR unsigned char  size(2) Largest target is 0
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    ep0BoOdd.ADR	PTR unsigned char  size(2) Largest target is 0
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    SignFlash@pROM	PTR  unsigned char  size(3) Largest target is 65527
		 -> ROM(CODE[65527]), 

    HIDRxReport@buffer	PTR unsigned char  size(1) Largest target is 65
		 -> PacketFromPC(BANK0[65]), 

    HIDTxReport@buffer	PTR unsigned char  size(1) Largest target is 65
		 -> PacketToPC(BANK0[65]), 

    ep1Bi.ADR	PTR unsigned char  size(2) Largest target is 64
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    ep1Bo.ADR	PTR unsigned char  size(2) Largest target is 64
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    LoadBDTandSetUOWN@pBDTEntry.ADR	PTR unsigned char  size(2) Largest target is 64
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    LoadBDTandSetUOWN@pBDTEntry	PTR volatile struct _BDT size(2) Largest target is 3775
		 -> NULL(NULL[0]), RAM(DATA[3775]), 

    TempBDT.ADR	PTR unsigned char  size(2) Largest target is 64
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    pDst.ADR	PTR unsigned char  size(2) Largest target is 64
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    ep0Bi.ADR	PTR unsigned char  size(2) Largest target is 64
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    USBDeviceTasks@pBDTEntry.ADR	PTR unsigned char  size(2) Largest target is 64
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    USBDeviceTasks@pBDTEntry	PTR volatile struct _BDT size(2) Largest target is 5
		 -> NULL(NULL[0]), ep0BoOdd(ABS[4]), ep0BoEven(BIGRAMl[4]), 

    ep1Bi...ADR	PTR unsigned char  size(2) Largest target is 64
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    ep1Bo...ADR	PTR unsigned char  size(2) Largest target is 64
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    ep0Bi...ADR	PTR unsigned char  size(2) Largest target is 64
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    ep0BoOdd...ADR	PTR unsigned char  size(2) Largest target is 64
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    ep0BoEven...ADR	PTR unsigned char  size(2) Largest target is 64
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    S761$ADR	PTR unsigned char  size(2) Largest target is 64
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    TempBDT...ADR	PTR unsigned char  size(2) Largest target is 64
		 -> hid_report_in(BIGRAMh[64]), hid_report_out(BIGRAMh[64]), EP0OutEvenBuf(ABS[8]), EP0OutOddBuf(BIGRAMh[8]), 
		 -> CtrlTrfData(BIGRAMh[8]), 

    pDst.wRom	PTR const unsigned short  size(2) Largest target is 0

    pDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S608_POINTER$wRom	PTR const unsigned short  size(2) Largest target is 0

    pSrc.wRom	PTR const unsigned short  size(2) Largest target is 0

    S608_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S608_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S608_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[38]), sd001(CODE[52]), sd000(CODE[4]), 


Critical Paths under _main in COMRAM

    _BootMain->_ProcessIO
    _ProcessIO->_SignFlash
    _WriteFlashSubBlock->_UnlockAndActivate
    _USBCBWakeFromSuspend->_DelayRoutine
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPServiceComplete->_LoadBDTandSetUOWN
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBCheckStdRequest->_USBStdGetStatusHandler
    _USBStdSetCfgHandler->_USBCBInitEP
    _SignFlash->_EraseFlashPage
    _EraseFlashPage->_UnlockAndActivate
    _InitializeSystem->_DelayRoutine
    _USBProtocolResetHandler->_LoadBDTandSetUOWN
    _USBProtocolResetHandler->_USBCBInitEP
    _USBDisableWithLongDelay->_DelayRoutine

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4192
                           _BootMain
 ---------------------------------------------------------------------------------
 (1) _BootMain                                             0     0      0    4192
                     _BlinkUSBStatus
                   _InitializeSystem
                    _LowVoltageCheck
                          _ProcessIO
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (2) _ProcessIO                                            2     2      0    2566
                                             11 COMRAM     2     2      0
                      _ClearWatchdog
                     _EraseFlashPage
                        _HIDRxReport
                        _HIDTxReport
                 _ResetDeviceCleanly
                          _SignFlash
                     _USBDeviceTasks
                 _WriteFlashSubBlock
 ---------------------------------------------------------------------------------
 (3) _WriteFlashSubBlock                                   6     6      0      22
                                              1 COMRAM     4     4      0
                  _UnlockAndActivate
 ---------------------------------------------------------------------------------
 (2) _USBDeviceTasks                                       2     2      0     712
                                              3 COMRAM     2     2      0
                  _USBCheckBusStatus
                _USBCtrlTrfInHandler
             _USBCtrlTrfSetupHandler
            _USBProtocolResetHandler
                         _USBSuspend
                 _USBWakeFromSuspend
 ---------------------------------------------------------------------------------
 (3) _USBWakeFromSuspend                                   0     0      0     290
               _USBCBWakeFromSuspend
 ---------------------------------------------------------------------------------
 (4) _USBCBWakeFromSuspend                                 0     0      0     290
                       _DelayRoutine
 ---------------------------------------------------------------------------------
 (3) _USBSuspend                                           0     0      0       0
                       _USBCBSuspend
 ---------------------------------------------------------------------------------
 (4) _USBCBSuspend                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0      44
                 _USBCBCheckOtherReq
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      22
                  _LoadBDTandSetUOWN
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0      22
                                              2 COMRAM     1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  0     0      0      22
                        _USBCBInitEP
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _USBCBCheckOtherReq                                   0     0      0       0
                 _USBCheckHIDRequest
 ---------------------------------------------------------------------------------
 (5) _USBCheckHIDRequest                                   0     0      0       0
                _HIDGetReportHandler
                _HIDSetReportHandler
 ---------------------------------------------------------------------------------
 (6) _HIDSetReportHandler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _HIDGetReportHandler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  0     0      0       0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (5) _USBCtrlTrfTxService                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SignFlash                                            4     4      0     361
                                              7 COMRAM     4     4      0
                      _ClearWatchdog
                     _EraseFlashPage
                  _UnlockAndActivate
 ---------------------------------------------------------------------------------
 (4) _EraseFlashPage                                       6     4      2     245
                                              1 COMRAM     6     4      2
                  _UnlockAndActivate
 ---------------------------------------------------------------------------------
 (4) _UnlockAndActivate                                    1     1      0      22
                                              0 COMRAM     1     1      0
                    _LowVoltageCheck
 ---------------------------------------------------------------------------------
 (5) _LowVoltageCheck                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ResetDeviceCleanly                                   0     0      0     290
            _USBDisableWithLongDelay
 ---------------------------------------------------------------------------------
 (3) _HIDTxReport                                          4     2      2     691
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _HIDRxReport                                          3     1      2     245
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitializeSystem                                     0     0      0     914
                       _DelayRoutine
                      _USBDeviceInit
                           _UserInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        0     0      0     624
                  _USBCheckBusStatus
            _USBDisableWithLongDelay
 ---------------------------------------------------------------------------------
 (3) _USBCheckBusStatus                                    0     0      0     334
                      _USBSoftAttach
 ---------------------------------------------------------------------------------
 (4) _USBSoftAttach                                        0     0      0     334
            _USBDisableWithLongDelay
            _USBProtocolResetHandler
 ---------------------------------------------------------------------------------
 (3) _USBProtocolResetHandler                              0     0      0      44
                      _ClearWatchdog
                  _LoadBDTandSetUOWN
                        _USBCBInitEP
 ---------------------------------------------------------------------------------
 (4) _USBCBInitEP                                          1     1      0      22
                                              0 COMRAM     1     1      0
                          _HIDInitEP
                           _UserInit
 ---------------------------------------------------------------------------------
 (5) _UserInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _HIDInitEP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LoadBDTandSetUOWN                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBDisableWithLongDelay                              0     0      0     290
                       _DelayRoutine
 ---------------------------------------------------------------------------------
 (5) _DelayRoutine                                         2     0      2     290
                                              0 COMRAM     2     0      2
                      _ClearWatchdog
 ---------------------------------------------------------------------------------
 (6) _ClearWatchdog                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BlinkUSBStatus                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BootMain
     _BlinkUSBStatus
     _InitializeSystem
       _DelayRoutine
         _ClearWatchdog
       _USBDeviceInit
         _USBCheckBusStatus
           _USBSoftAttach
             _USBDisableWithLongDelay
               _DelayRoutine
                 _ClearWatchdog
             _USBProtocolResetHandler
               _ClearWatchdog
               _LoadBDTandSetUOWN
               _USBCBInitEP
                 _HIDInitEP
                 _UserInit
         _USBDisableWithLongDelay
           _DelayRoutine
             _ClearWatchdog
       _UserInit
     _LowVoltageCheck
     _ProcessIO
       _ClearWatchdog
       _EraseFlashPage
         _UnlockAndActivate
           _LowVoltageCheck
       _HIDRxReport
       _HIDTxReport
       _ResetDeviceCleanly
         _USBDisableWithLongDelay
           _DelayRoutine
             _ClearWatchdog
       _SignFlash
         _ClearWatchdog
         _EraseFlashPage
           _UnlockAndActivate
             _LowVoltageCheck
         _UnlockAndActivate
           _LowVoltageCheck
       _USBDeviceTasks
         _USBCheckBusStatus
           _USBSoftAttach
             _USBDisableWithLongDelay
               _DelayRoutine
                 _ClearWatchdog
             _USBProtocolResetHandler
               _ClearWatchdog
               _LoadBDTandSetUOWN
               _USBCBInitEP
                 _HIDInitEP
                 _UserInit
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfSetupHandler
           _USBCBCheckOtherReq
             _USBCheckHIDRequest
               _HIDGetReportHandler
               _HIDSetReportHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USBCBInitEP
                 _HIDInitEP
                 _UserInit
           _USBCtrlEPServiceComplete
             _LoadBDTandSetUOWN
             _USBCtrlTrfTxService
         _USBProtocolResetHandler
           _ClearWatchdog
           _LoadBDTandSetUOWN
           _USBCBInitEP
             _HIDInitEP
             _UserInit
         _USBSuspend
           _USBCBSuspend
         _USBWakeFromSuspend
           _USBCBWakeFromSuspend
             _DelayRoutine
               _ClearWatchdog
       _WriteFlashSubBlock
         _UnlockAndActivate
           _LowVoltageCheck
     _USBDeviceTasks
       _USBCheckBusStatus
         _USBSoftAttach
           _USBDisableWithLongDelay
             _DelayRoutine
               _ClearWatchdog
           _USBProtocolResetHandler
             _ClearWatchdog
             _LoadBDTandSetUOWN
             _USBCBInitEP
               _HIDInitEP
               _UserInit
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfSetupHandler
         _USBCBCheckOtherReq
           _USBCheckHIDRequest
             _HIDGetReportHandler
             _HIDSetReportHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USBCBInitEP
               _HIDInitEP
               _UserInit
         _USBCtrlEPServiceComplete
           _LoadBDTandSetUOWN
           _USBCtrlTrfTxService
       _USBProtocolResetHandler
         _ClearWatchdog
         _LoadBDTandSetUOWN
         _USBCBInitEP
           _HIDInitEP
           _UserInit
       _USBSuspend
         _USBCBSuspend
       _USBWakeFromSuspend
         _USBCBWakeFromSuspend
           _DelayRoutine
             _ClearWatchdog

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      D      53       1       87.4%
STACK                0      0       0       2        0.0%
DATA                 0      0     4D5       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      82       5       81.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
ABS                  0      0      D5       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4            54      0       0      13        0.0%
BANK4               54      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BIGRAMh            A14      0     400      35       39.7%
BIGRAMl            3FF      0       0      36        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jun 11 19:50:00 2019

            __end_of_ClearWatchdog 0CBE    __end_of_USBDisableWithLongDelay 0C88  
                     _usb_alt_intf 0045                         _USB_SD_Ptr 0F01  
                     ?_HIDRxReport 0047                 ?_LoadBDTandSetUOWN 0047  
                               PL2 0564                                 PL4 0428  
                               PL6 06A6                                 PL8 0820  
                   _BlinkUSBStatus 0AB8                       ?_HIDTxReport 0047  
                               l90 0B10                                 l69 0038  
                               l88 0B02                      _USBDeviceInit 0CA4  
               _USBCheckHIDRequest 038A                       __CFG_CP0$OFF 000000  
                              PL10 06AE                                PL20 04DC  
                              PL12 0FF0                                PL30 0380  
                              PL22 056E                                PL14 02BA  
                              PL40 0BC0                                PL32 0622  
                              PL24 0434                                PL16 0372  
                              PL42 0A2A                                PL34 0A6C  
                              PL26 0BB4                                PL18 06BA  
                              PL44 0B1C                                PL36 09E4  
                              PL28 057A                                PL46 0C8E  
                              PL38 0742                                PL48 0586  
                              l101 0C30                                l300 02F4  
                              l310 0368                                l311 0366  
                              l321 0C4E                                l402 07C0  
                              l322 0C4C                                l333 0B32  
                              l342 0A5E                                l502 03D4  
      __end_of_USBStdGetDscHandler 07C4                                l431 0502  
                              l328 0A92                                l504 03BC  
                              l434 054E                                l284 0C9C  
                              l293 02D4                                l535 090A  
                              l367 05B0                                l299 02F2  
                              l643 01FC                                l682 0B9C  
                              l679 0B8E                                _UIE 000F36  
                              _UIR 000F62                ??_LoadBDTandSetUOWN 0047  
                       _USBSuspend 0BCA    EraseFlashPage@TablePointerValue 0009  
             USBStdSetCfgHandler@i 0036                                wreg 000FE8  
                   _USBDeviceTasks 02CA                ?_USBCheckHIDRequest 0047  
           ??_USBCBWakeFromSuspend 0049                               l3003 0924  
                             l3121 0AD6                               l3041 0816  
                             l3019 07C8                               l2405 03B0  
                             l3205 01BC                               l3141 0076  
                             l2351 0C60                               l3063 0496  
                             l2415 03C8                               l3215 01D2  
                             l3207 01C0                               l3049 044A  
                             l2513 064C                               l2433 03EC  
                             l2425 03E2                               l2417 03D6  
                             l3233 0212                               l3209 01C8  
                             l2347 0C56                               l2523 0666  
                             l2531 0680                               l2451 0408  
                             l2603 0FEA                               l3243 0224  
                             l3171 010A                               l3147 0096  
                             l3323 09DC                               l3315 09B0  
                             l2365 0A0C                               l3085 04D4  
                             l2533 0686                               l2541 06A0  
                             l2509 0644                               l2445 03FE  
                             l2437 03F6                               l3165 00F6  
                             l3317 09B4                               l2383 0B0E  
                             l3079 04C2                               l2391 0394  
                             l2615 0842                               l2607 0838  
                             l3239 021E                               l3191 016E  
                             l3175 0116                               l3167 00FA  
                             l2385 0B12                               l2561 0778  
                             l2553 0762                               l2617 0848  
                             l2705 06DC                               l3177 011E  
                             l3185 0136                               l2803 0B92  
                             l2395 039A                               l2547 0754  
                             l2627 087C                               l2731 0700  
                             l3291 0282                               l3195 018C  
                             l3187 014E                               l2485 0A98  
                             l2629 088A                               l2725 06F4  
                             l2717 06E8                               l2399 03A2  
                             l2647 0504                               l2591 0FC6  
                             l3295 0288                               l2681 0C12  
                             l2665 055A                               l2569 07B2  
                             l2771 05EA                               l2747 05A4  
                             l2757 05CA                               l2845 0B3C  
                             l2783 060A                               l2935 030E  
                             l2777 05FC                               l2699 06D2  
                             l2787 0614                               l2947 032A  
                             l2981 08AC                               l2869 0A4A  
                             l2957 0358                               l2985 08C6  
                             l2889 0964                               l2979 08A8  
                             l2999 090E              ??_HIDSetReportHandler 0047  
                             u1310 067E                               u2008 093C  
                             u1330 069E                               u2210 0216  
                             u2130 0094                               u2140 00EA  
                             u1317 067C                               u2070 0AE0  
                             u1337 069C                               u1370 07AC  
                             u1540 0C3A                               u2260 09D8  
                             u2088 0AE2                               u1377 07A8  
                             u1940 08E0                               u1775 0972  
                             u1990 093A                               u1958 08E2  
            ??_USBCtrlTrfTxService 0047                               _UCFG 000F39  
                             _UEP0 000F26                               _UEP1 000F27  
                             _UEP2 000F28                               _UEP3 000F29  
                             _UEP4 000F2A                               _UEP5 000F2B  
                             _UEP6 000F2C                               _UEIE 000F37  
                             _UEP7 000F2D                               _UCON 000F65  
               __size_of_HIDInitEP 002A                               _pDst 001D  
                             _pSrc 0020                               _main 09A4  
           __size_of_USBSoftAttach 0020                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf1 000FE7  
                             indf2 000FDF                               fsr1l 000FE1  
                             fsr2l 000FD9                               prodh 000FF4  
                             prodl 000FF3          __end_of_LoadBDTandSetUOWN 0A2A  
                             start 0000            BlinkUSBStatus@led_count 002D  
                    __CFG_IESO$OFF 000000                 _USBCBCheckOtherReq 0004  
             ??_USBCheckHIDRequest 0047         __end_of_USBCheckStdRequest 0742  
                     ___param_bank 000000          ??_USBStdFeatureReqHandler 0047  
           __end_of_BlinkUSBStatus 0AF0           ??_USBStdGetStatusHandler 0047  
                   ?_USBDeviceInit 0047                ?_USBCBCheckOtherReq 0047  
                    __CFG_PLLDIV$3 000000                              _CFG01 0F38  
                            ?_main 0047  __size_of_USBCtrlEPServiceComplete 0096  
       LoadBDTandSetUOWN@pBDTEntry 0027             __end_of_USBDeviceTasks 0372  
        ?_USBCtrlEPServiceComplete 0047                              _UADDR 000F38  
                            _USTAT 000F64                  HIDRxReport@buffer 0047  
                   __CFG_FCMEN$OFF 000000                              _ep0Bi 000408  
                            _ep1Bi 000410                              _ep1Bo 00040C  
                            _sd000 0FB6                              _sd001 0F04  
                            _sd002 0F61               ??_USBCBCheckOtherReq 0047  
                   __CFG_T1DIG$OFF 000000                   _usb_device_state 0042  
                     HIDTxReport@i 004A                              tablat 000FF5  
                USBSuspend@UIESave 0038                              plusw2 000FDB  
                            status 000FD8                  __CFG_DSWDTPS$8192 000000  
       __size_of_UnlockAndActivate 0028                  _BufferedDataIndex 0032  
                       _PacketToPC 0060            __CFG_DSWDTOSC$INTOSCREF 000000  
     __size_of_USBStdSetCfgHandler 0034                   __end_of_BootMain 004C  
                  __initialization 0CB0                    ?_BlinkUSBStatus 0047  
                     __end_of_main 09E4                         SignFlash@i 0023  
                   __CFG_OSC$HSPLL 000000              _ProgramMemStopAddress 0015  
                __end_of_HIDInitEP 0B7C                      _USBSoftAttach 0C0A  
                           ??_main 0054          __size_of_InitializeSystem 0020  
                    __activetblptr 000002                    ?_USBDeviceTasks 0047  
                      ?_USBSuspend 0047                   __end_of_UserInit 0BB4  
                    SignFlash@pROM 004F                             _EECON1 000FA6  
                           _EECON2 000FA7                             _ANCON0 000F48  
                           _ANCON1 000F49   __size_of_USBDisableWithLongDelay 0010  
                   __CFG_WDTEN$OFF 000000                             _INTCON 000FF2  
                           _TABLAT 000FF5              __size_of_DelayRoutine 0014  
                           _OSCCON 000FD3                     __CFG_WPCFG$OFF 000000  
                           _STKPTR 000FFC                     __CFG_WPDIS$OFF 000000  
       __size_of_LoadBDTandSetUOWN 003C                     __CFG_XINST$OFF 000000  
                  USBDeviceTasks@i 0039                    ??_USBDeviceInit 0049  
                   __CFG_STVREN$ON 000000                       ?_USBCBInitEP 0047  
               __size_of_SignFlash 009E                             _wCount 002B  
  __size_of_USBStdGetStatusHandler 006E                     ?_USBSoftAttach 0047  
     __size_of_HIDGetReportHandler 0002         __end_of_WriteFlashSubBlock 0820  
             __size_of_HIDRxReport 005A                         ProcessIO@i 0025  
             __size_of_HIDTxReport 005A                 __size_of_ProcessIO 026E  
                     _DelayRoutine 0C54                       __mediumconst 0000  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8               _DeviceIsSoftDetached 003A  
      __size_of_ResetDeviceCleanly 000C                        _CtrlTrfData 000424  
                       __accesstop 0060            __end_of__initialization 0CB0  
                     __pbssBIGRAMh 04AC                      __end_of_CFG01 0F61  
                    ___rparam_used 000001                        _bTRNIFCount 0040  
       UnlockAndActivate@UnlockKey 0047                __size_of_USBSuspend 0020  
                   __pcstackCOMRAM 0047                      __end_of_sd000 0FBA  
                    __end_of_sd001 0F38                      __end_of_sd002 0F87  
                  _active_protocol 0043        __end_of_USBCtrlTrfInHandler 0A6C  
                       __end_ofPL2 056E                         __end_ofPL4 0434  
                       __end_ofPL6 06AE                         __end_ofPL8 0832  
 USBCtrlTrfTxService@bytes_to_send 0037           ??_USBCtrlTrfSetupHandler 004A  
                        ?_BootMain 0047             _USBStdGetStatusHandler 0832  
                __end_of_SignFlash 04DC                         __pbssBANK0 0060  
              WriteFlashSubBlock@i 0031        __size_of_USBWakeFromSuspend 0014  
                     _EP0OutOddBuf 00041C                  __end_of_ProcessIO 02BA  
 __end_of_USBCtrlEPServiceComplete 0622           ?_USBProtocolResetHandler 0047  
          DelayRoutine@DelayAmount 0047                    ??_USBSoftAttach 0049  
                        ?_UserInit 0047           __size_of_LowVoltageCheck 002C  
                       _device_dsc 0FA4            USBDeviceTasks@pBDTEntry 0029  
                 _InitializeSystem 0BEA                 _USBCheckStdRequest 06C8  
      __end_of_HIDSetReportHandler 0CC0        __end_of_USBCtrlTrfTxService 06A6  
              _USBStdSetCfgHandler 0FBC                            _TBLPTRH 000FF7  
                          _TBLPTRL 000FF6                            _TBLPTRU 000FF8  
                       ??_BootMain 0054                ?_USBCheckStdRequest 0047  
     __size_of_USBStdGetDscHandler 0078             __size_of_ClearWatchdog 0004  
          _USBDisableWithLongDelay 0C78                            _UIEbits 000F36  
    __size_of_USBCBWakeFromSuspend 0006                            _UIRbits 000F62  
  _FlashSignatureWord_absconstaddr 001006                     HIDRxReport@len 0048  
                 ??_BlinkUSBStatus 0047                            __Hparam 0000  
                          _TempBDT 0019               ?_USBStdSetCfgHandler 0047  
      __size_of_USBCheckHIDRequest 009E                            __Lparam 0000  
                __end_of_hid_rpt01 0FA4               ??_USBCheckStdRequest 0049  
    USBCBInitEP@ConfigurationIndex 0047                   ??_USBDeviceTasks 004A  
                       ??_UserInit 0047                       __psmallconst 0F00  
                          __pcinit 0CB0                            __ramtop 0F00  
             __size_of_USBCBInitEP 0010                            __ptext0 09A4  
                          __ptext2 004C                            __ptext3 07C4  
                          __ptext4 02CA                            __ptext5 0C40  
                          __ptext6 0C88                            __ptext7 0BCA  
                          __ptext8 0C2A                            __ptext9 0B24  
          __size_of_EraseFlashPage 0050                   __p_BootMain_text 0030  
                     ??_USBSuspend 0047                          _HIDInitEP 0B52  
                   _ctrl_trf_state 003F                      ?_USBCBSuspend 0047  
  __size_of_USBCtrlTrfSetupHandler 002E               end_of_initialization 0CB0  
      __size_of_USBCBCheckOtherReq 0004                 __end_of_USB_SD_Ptr 0F04  
              _HIDGetReportHandler 0CC0    __end_of_USBProtocolResetHandler 0AB8  
                    __Lmediumconst 0000                     HIDTxReport@len 0048  
         ?_USBStdFeatureReqHandler 0047              ??_USBStdSetCfgHandler 0048  
               __end_of_USBSuspend 0BEA                            postdec2 000FDD  
                    _ClearWatchdog 0CBA                            postinc2 000FDE  
         _USBCtrlEPServiceComplete 058C               ?_HIDGetReportHandler 0047  
                        _PORTBbits 000F81                   __CFG_DSBOREN$OFF 000000  
                       ?_HIDInitEP 0047                   __CFG_CPUDIV$OSC1 000000  
                ??_LowVoltageCheck 0047          ??_USBDisableWithLongDelay 0049  
                        _TRISEbits 000F96                     ??_USBCBSuspend 0047  
                     _PacketFromPC 00A1    LoadBDTandSetUOWN@BDTIndexToLoad 0047  
               _WriteFlashSubBlock 07C4             _ctrl_trf_session_owner 003E  
                        _USTATbits 000F64                   __CFG_IOL1WAY$OFF 000000  
              ?_WriteFlashSubBlock 0047                  __CFG_WPEND$PAGE_0 000000  
                 _short_pkt_status 003D                __CFG_MSSP7B_EN$MSK7 000000  
                   ?_ClearWatchdog 0047             _USBCtrlTrfSetupHandler 0B24  
                    ??_HIDRxReport 0049                      ??_HIDTxReport 0049  
            __end_of_USBDeviceInit 0CB0              ??_HIDGetReportHandler 0047  
                        _BootState 0033                   __CFG_DSWDTEN$OFF 000000  
             ??_WriteFlashSubBlock 0048         __end_of_ResetDeviceCleanly 0018  
                      __end_ofPL10 06BA                        __end_ofPL20 04EA  
                      __end_ofPL12 1000                        __end_ofPL30 038A  
                      __end_ofPL22 057A                        __end_ofPL14 02CA  
                      __end_ofPL40 0BCA                        __end_ofPL32 062A  
                      __end_ofPL24 043E                        __end_ofPL16 0380  
                      __end_ofPL42 0A34                        __end_ofPL34 0A76  
                      __end_ofPL26 0BC0                        __end_ofPL18 06C8  
                      __end_ofPL44 0B24                        __end_ofPL36 09EE  
                      __end_ofPL28 0586                        __end_ofPL46 0C96  
                      __end_ofPL38 074C                        __end_ofPL48 058C  
              start_initialization 0CB0            ?_USBStdGetStatusHandler 0047  
       __end_of_FlashSignatureWord 1008    __end_of_USBStdFeatureReqHandler 0564  
                __size_of_BootMain 001C                 _uint_delay_counter 002F  
         __end_of_InitializeSystem 0C0A                          _SignFlash 043E  
                        _ep0BoEven 000400                _USBStdGetDscHandler 074C  
                        _ProcessIO 004C                   __CFG_LPT1OSC$OFF 000000  
                   _EraseFlashPage 0954                  __size_of_UserInit 0010  
              __end_of_HIDRxReport 0954     __end_of_USBStdGetStatusHandler 08A0  
 __size_of_USBProtocolResetHandler 0042                __end_of_HIDTxReport 08FA  
                _USBCheckBusStatus 0C96                        ??_HIDInitEP 0047  
                      __pbssCOMRAM 0001       __size_of_USBCtrlTrfInHandler 0038  
                 _BootMain_absaddr 000030                 ?_USBCheckBusStatus 0047  
                HIDTxReport@buffer 0047               ?_USBStdGetDscHandler 0047  
       __end_of_USBWakeFromSuspend 0C54                ??_USBCheckBusStatus 0049  
                    _EP0OutEvenBuf 000414                         ?_SignFlash 0047  
                  ??_ClearWatchdog 0047               __end_of_USBCBSuspend 0C40  
     __end_of_USBCBWakeFromSuspend 0C8E                         ?_ProcessIO 0047  
           __end_of_EraseFlashPage 09A4                          _hid_rpt01 0F87  
            __end_of_USBSoftAttach 0C2A                          _idle_rate 0044  
        __end_of_USBCheckBusStatus 0CA4       EraseFlashPage@PageNumToErase 0048  
                      __smallconst 0F00               __CFG_RTCOSC$T1OSCREF 000000  
            ??_USBStdGetDscHandler 0047       __size_of_HIDSetReportHandler 0002  
     __size_of_USBCtrlTrfTxService 007C                           _LATEbits 000F8D  
       __end_of_USBCheckHIDRequest 0428         ??_USBCtrlEPServiceComplete 0048  
                         _PIE2bits 000FA0                           _PIR2bits 000FA1  
                         _RCONbits 000FD0                   __CFG_WDTPS$32768 000000  
                    ??_USBCBInitEP 0047        __size_of_USBCheckStdRequest 007A  
                      _HIDRxReport 08FA                    _LowVoltageCheck 0AF0  
                         _UCONbits 000F65                    ?_EraseFlashPage 0048  
                      _HIDTxReport 08A0   __size_of_USBStdFeatureReqHandler 007A  
                 __CFG_WPFP$PAGE_1 000000                      ?_DelayRoutine 0047  
       __end_of_USBCBCheckOtherReq 0008                           _BootMain 0030  
      __end_of_USBStdSetCfgHandler 0FF0                     _hid_report_out 00042C  
           USBCBSuspend@OSCCONSave 0041                 __end_of_device_dsc 0FB6  
                      ??_SignFlash 004E                         _EECON1bits 000FA6  
          ?_USBCtrlTrfSetupHandler 0047                         _ANCON1bits 000F49  
                         __Hrparam 0000                           __Lrparam 0000  
        WriteFlashSubBlock@Address 000D                           _ep0BoOdd 000404  
                         _SetupPkt 0001                     _MaxPageToErase 0034  
                      ??_ProcessIO 0052                           _UserInit 0BA4  
          __size_of_BlinkUSBStatus 0038           _EP0OutOddNeedsArmingNext 003C  
       __size_of_USBCheckBusStatus 000E                     _hid_rpt_rx_len 0035  
          _USBProtocolResetHandler 0A76                     ??_DelayRoutine 0049  
              __end_of_USBCBInitEP 0C78            __size_of_USBDeviceTasks 00A8  
                         __ptext10 058C                           __ptext11 06C8  
                         __ptext20 0A34                           __ptext12 0FBC  
                         __ptext21 062A                           __ptext13 0832  
                         __ptext30 0CA4                           __ptext22 043E  
                         __ptext14 074C                           __ptext31 0C96  
                         __ptext23 0954                           __ptext15 04EA  
                         __ptext40 0CBA                           __ptext32 0C0A  
                         __ptext24 0B7C                           __ptext16 0004  
                         __ptext41 0AB8                           __ptext33 0A76  
                         __ptext25 0AF0                           __ptext17 038A  
                         __ptext34 0C68                           __ptext26 000C  
                         __ptext18 0CBE                           __ptext35 0BA4  
                         __ptext27 08A0                           __ptext19 0CC0  
                         __ptext36 0B52                           __ptext28 08FA  
                         __ptext37 09EE                           __ptext29 0BEA  
                         __ptext38 0C78                           __ptext39 0C54  
             _USBCBWakeFromSuspend 0C88                 _ResetDeviceCleanly 000C  
   __end_of_USBCtrlTrfSetupHandler 0B52                      __size_of_main 0040  
            __size_of_USBCBSuspend 0016            __end_of_LowVoltageCheck 0B1C  
                ?_InitializeSystem 0047        __end_of_HIDGetReportHandler 0CC2  
              _USBCtrlTrfInHandler 0A34                 ??_InitializeSystem 0049  
              ?_ResetDeviceCleanly 0047                 _FlashSignatureWord 1006  
                         _usb_stat 003B        __p_FlashSignatureWord_const 1006  
                _ProgrammedPointer 0011           ?_USBDisableWithLongDelay 0047  
                    _hid_report_in 00046C        __size_of_WriteFlashSubBlock 005C  
                      _OSCTUNEbits 000F9B                         _INTCONbits 000FF2  
             ?_USBCtrlTrfInHandler 0047               ??_ResetDeviceCleanly 0049  
                     _USBCBSuspend 0C2A              ?_USBCBWakeFromSuspend 0047  
           __size_of_USBDeviceInit 000C                  _ProgrammingBuffer 04AC  
                _UnlockAndActivate 0B7C                 ?_UnlockAndActivate 0047  
                      _USBCBInitEP 0C68                 _USBWakeFromSuspend 0C40  
        ??_USBProtocolResetHandler 0048            _USBStdFeatureReqHandler 04EA  
              _HIDSetReportHandler 0CBE                _USBCtrlTrfTxService 062A  
              ??_UnlockAndActivate 0047                ?_USBWakeFromSuspend 0047  
            ??_USBCtrlTrfInHandler 0047                         _WDTCONbits 000FC0  
             ?_HIDSetReportHandler 0047               ?_USBCtrlTrfTxService 0047  
             ??_USBWakeFromSuspend 0049          __end_of_UnlockAndActivate 0BA4  
                 ?_LowVoltageCheck 0047               __end_of_DelayRoutine 0C68  
                 ??_EraseFlashPage 004A                     _usb_active_cfg 0046  
                _LoadBDTandSetUOWN 09EE  
